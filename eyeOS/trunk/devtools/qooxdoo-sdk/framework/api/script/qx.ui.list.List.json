{"attributes": {"name": "List", "packageName": "qx.ui.list", "mixins": "qx.ui.list.core.MSelectionHandling", "superClass": "qx.ui.virtual.core.Scroller", "fullName": "qx.ui.list.List", "type": "class"}, "type": "class", "children": [{"attributes": {"text": "<p>The <code>qx.ui.list.List</code> is based on the virtual infrastructure and\nsupports filtering, sorting, grouping, single selection, multi selection,\ndata binding and custom rendering.</p>\n\n<p>Using the virtual infrastructure has considerable advantages when there is a\nhuge amount of model items to render because the virtual infrastructure only\ncreates widgets for visible items and reuses them. This saves both creation\ntime and memory.</p>\n\n<p>With the {@link qx.ui.list.core.IListDelegate} interface it is possible\nto configure the list&#8217;s behavior (item and group renderer configuration,\nfiltering, sorting, grouping, etc.).</p>\n\n<p>Here&#8217;s an example of how to use the widget:</p>\n\n<pre class=\"javascript\">\n//create the model data\nvar rawData = [];\nfor (var i = 0; i < 2500; i++) {\n rawData[i] = \"Item No \" + i;\n}\nvar model = qx.data.marshal.Json.createModel(rawData);\n\n//create the list\nvar list = new qx.ui.list.List(model);\n\n//configure the lists's behavior\nvar delegate = {\n  sorter : function(a, b) {\n    return a > b ? 1 : a < b ? -1 : 0;\n  }\n};\nlist.setDelegate(delegate);\n\n//Pre-Select \"Item No 20\"\nlist.getSelection().push(model.getItem(20));\n\n//log selection changes\nlist.getSelection().addListener(\"change\", function(e) {\n  this.debug(\"Selection: \" + list.getSelection().getItem(0));\n}, this);\n</pre>"}, "type": "desc"}, {"type": "childControls", "children": [{"attributes": {"name": "row-layer"}, "type": "childControl", "children": [{"attributes": {"text": "<p>layer for all rows</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.ui.virtual.Row"}, "type": "entry"}]}]}]}, {"type": "constructor", "children": [{"attributes": {"overriddenFrom": "qx.ui.virtual.core.Scroller", "isCtor": true, "name": "ctor"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "model"}, "type": "param", "children": [{"attributes": {"text": "<p>model for the list.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.data.Array"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Creates the <code>qx.ui.list.List</code> with the passed model.</p>"}, "type": "desc"}]}]}, {"type": "methods", "children": [{"attributes": {"access": "private", "name": "__addGroup"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "name"}, "type": "param", "children": [{"attributes": {"text": "<p>the group name.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "index"}, "type": "param", "children": [{"attributes": {"text": "<p>model index to add.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Adds a model index the the group.</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "name": "__buildUpLookupTable"}, "type": "method", "children": [{"attributes": {"text": "<p>Internal method for building the lookup table.</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "name": "__createLookupFromGroup"}, "type": "method", "children": [{"attributes": {"text": "<p>Creates a lookup table form the internal group hash map.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>the lookup table based on the internal group hash map.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"access": "private", "name": "__updateRowCount"}, "type": "method", "children": [{"attributes": {"text": "<p>Helper method to update the row count.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "apply": "qx.ui.list.List#delegate", "name": "_applyDelegate"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>new value of the property</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>previous value of the property (null if it was not yet set).</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Applies changes of the property value of the property <code>delegate</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #delegate}.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "apply": "qx.ui.list.List#iconOptions", "name": "_applyIconOptions"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>new value of the property</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>previous value of the property (null if it was not yet set).</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Applies changes of the property value of the property <code>iconOptions</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #iconOptions}.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "apply": "qx.ui.list.List#iconPath", "name": "_applyIconPath"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>new value of the property</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>previous value of the property (null if it was not yet set).</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Applies changes of the property value of the property <code>iconPath</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #iconPath}.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "apply": "qx.ui.list.List#labelOptions", "name": "_applyLabelOptions"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>new value of the property</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>previous value of the property (null if it was not yet set).</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Applies changes of the property value of the property <code>labelOptions</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #labelOptions}.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "apply": "qx.ui.list.List#labelPath", "name": "_applyLabelPath"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>new value of the property</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>previous value of the property (null if it was not yet set).</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Applies changes of the property value of the property <code>labelPath</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #labelPath}.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "apply": "qx.ui.list.List#model", "name": "_applyModel"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>new value of the property</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.data.Array"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>previous value of the property (null if it was not yet set).</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.data.Array"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Applies changes of the property value of the property <code>model</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #model}.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "apply": "qx.ui.list.List#itemHeight", "name": "_applyRowHeight"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>new value of the property</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>previous value of the property (null if it was not yet set).</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Applies changes of the property value of the property <code>itemHeight</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #itemHeight}.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "docFrom": "qx.ui.core.Widget", "overriddenFrom": "qx.ui.virtual.core.Scroller", "name": "_createChildControlImpl"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "id"}, "type": "param"}, {"attributes": {"name": "hash"}, "type": "param"}]}]}, {"attributes": {"access": "protected", "name": "_getDataFromRow"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "row"}, "type": "param", "children": [{"attributes": {"text": "<p>row to get data for.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the model data for the given row.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>the row&#8217;s model data.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "_init"}, "type": "method", "children": [{"attributes": {"text": "<p>Initializes the virtual list.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "name": "_initBackground"}, "type": "method", "children": [{"attributes": {"text": "<p>Initializes the background renderer.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "name": "_initLayer"}, "type": "method", "children": [{"attributes": {"text": "<p>Initializes the layer for rendering.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "name": "_isGroup"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "row"}, "type": "param", "children": [{"attributes": {"text": "<p>row to check.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Checks if the passed row is a group or an item.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<code>true</code> if the row is a group element,\n <code>false</code> if the row is an item element."}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "_lookup"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "row"}, "type": "param", "children": [{"attributes": {"text": "<p>The row to look at.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Performs a lookup from row to model index.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>The model index or\n  <code>-1</code> if the row is a group item.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "_lookupGroup"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "row"}, "type": "param", "children": [{"attributes": {"text": "<p>The row to look at.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Performs a lookup from row to group index.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>The group index or\n  <code>-1</code> if the row is a not a group item.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "_onModelChange"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p>model change event.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Event handler for the model change event.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "name": "_onResize"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p>resize event.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Event handler for the resize event.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "name": "_reverseLookup"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "index"}, "type": "param", "children": [{"attributes": {"text": "<p>The index to look at.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Performs a lookup from model index to row.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>The row or <code>-1</code>\n if the index is not a model index.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "_runDelegateFilter"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "model"}, "type": "param", "children": [{"attributes": {"text": "<p>The model.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.data.IListData"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Invokes filtering using the filter given in the delegate.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "name": "_runDelegateGroup"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "model"}, "type": "param", "children": [{"attributes": {"text": "<p>The model.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.data.IListData"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Invokes grouping using the group result given in the delegate.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "name": "_runDelegateSorter"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "model"}, "type": "param", "children": [{"attributes": {"text": "<p>The model.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.data.IListData"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Invokes sorting using the sorter given in the delegate.</p>"}, "type": "desc"}]}, {"attributes": {"name": "getDelegate", "fromProperty": "delegate"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>delegate</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #delegate}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>delegate</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getIconOptions", "fromProperty": "iconOptions"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>iconOptions</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #iconOptions}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>iconOptions</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getIconPath", "fromProperty": "iconPath"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>iconPath</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #iconPath}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>iconPath</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getItemHeight", "fromProperty": "itemHeight"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>itemHeight</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #itemHeight}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>itemHeight</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getLabelOptions", "fromProperty": "labelOptions"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>labelOptions</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #labelOptions}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>labelOptions</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getLabelPath", "fromProperty": "labelPath"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>labelPath</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #labelPath}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>labelPath</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getModel", "fromProperty": "model"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>model</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #model}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>model</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initDelegate", "fromProperty": "delegate"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>delegate</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>delegate</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #delegate}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initIconOptions", "fromProperty": "iconOptions"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>iconOptions</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>iconOptions</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #iconOptions}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initIconPath", "fromProperty": "iconPath"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>iconPath</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>iconPath</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #iconPath}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initItemHeight", "fromProperty": "itemHeight"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>itemHeight</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>itemHeight</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #itemHeight}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initLabelOptions", "fromProperty": "labelOptions"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>labelOptions</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>labelOptions</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #labelOptions}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initLabelPath", "fromProperty": "labelPath"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>labelPath</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>labelPath</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #labelPath}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initModel", "fromProperty": "model"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>model</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>model</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #model}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "resetDelegate", "fromProperty": "delegate"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>delegate</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #delegate}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"name": "resetIconOptions", "fromProperty": "iconOptions"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>iconOptions</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #iconOptions}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"name": "resetIconPath", "fromProperty": "iconPath"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>iconPath</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #iconPath}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"name": "resetItemHeight", "fromProperty": "itemHeight"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>itemHeight</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #itemHeight}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"name": "resetLabelOptions", "fromProperty": "labelOptions"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>labelOptions</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #labelOptions}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"name": "resetLabelPath", "fromProperty": "labelPath"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>labelPath</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #labelPath}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"name": "resetModel", "fromProperty": "model"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>model</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #model}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setDelegate", "fromProperty": "delegate"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>delegate</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>delegate</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #delegate}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setIconOptions", "fromProperty": "iconOptions"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>iconOptions</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>iconOptions</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #iconOptions}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setIconPath", "fromProperty": "iconPath"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>iconPath</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>iconPath</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #iconPath}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setItemHeight", "fromProperty": "itemHeight"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>itemHeight</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>itemHeight</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #itemHeight}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setLabelOptions", "fromProperty": "labelOptions"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>labelOptions</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>labelOptions</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #labelOptions}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setLabelPath", "fromProperty": "labelPath"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>labelPath</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>labelPath</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #labelPath}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setModel", "fromProperty": "model"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>model</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>model</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #model}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}]}, {"type": "properties", "children": [{"attributes": {"name": "appearance", "docFrom": "qx.ui.core.Widget", "defaultValue": "\"virtual-list\"", "refine": "true", "propertyType": "new", "overriddenFrom": "qx.ui.core.scroll.AbstractScrollArea"}, "type": "property"}, {"attributes": {"name": "delegate", "defaultValue": "null", "allowNull": "true", "propertyType": "new", "apply": "_applyDelegate", "event": "changeDelegate"}, "type": "property", "children": [{"attributes": {"text": "<p>Delegation object which can have one or more functions defined by the\n{@link qx.ui.list.core.IListDelegate} interface.</p>"}, "type": "desc"}]}, {"attributes": {"name": "focusable", "docFrom": "qx.ui.core.Widget", "defaultValue": "true", "refine": "true", "propertyType": "new", "overriddenFrom": "qx.ui.core.Widget"}, "type": "property"}, {"attributes": {"name": "height", "docFrom": "qx.ui.core.LayoutItem", "defaultValue": "200", "refine": "true", "propertyType": "new", "overriddenFrom": "qx.ui.virtual.core.Scroller"}, "type": "property"}, {"attributes": {"allowNull": "true", "propertyType": "new", "name": "iconOptions", "apply": "_applyIconOptions"}, "type": "property", "children": [{"attributes": {"text": "<p>A map containing the options for the icon binding. The possible keys\ncan be found in the {@link qx.data.SingleValueBinding} documentation.</p>"}, "type": "desc"}]}, {"attributes": {"allowNull": "true", "propertyType": "new", "check": "String", "name": "iconPath", "apply": "_applyIconPath"}, "type": "property", "children": [{"attributes": {"text": "<p>The path to the property which holds the information that should be\ndisplayed as an icon. This is only needed if objects are stored in the\nmodel and icons should be displayed.</p>"}, "type": "desc"}]}, {"attributes": {"name": "itemHeight", "defaultValue": "25", "propertyType": "new", "apply": "_applyRowHeight", "check": "Integer", "themeable": "true"}, "type": "property", "children": [{"attributes": {"text": "<p>Default item height</p>"}, "type": "desc"}]}, {"attributes": {"allowNull": "true", "propertyType": "new", "name": "labelOptions", "apply": "_applyLabelOptions"}, "type": "property", "children": [{"attributes": {"text": "<p>A map containing the options for the label binding. The possible keys\ncan be found in the {@link qx.data.SingleValueBinding} documentation.</p>"}, "type": "desc"}]}, {"attributes": {"allowNull": "true", "propertyType": "new", "check": "String", "name": "labelPath", "apply": "_applyLabelPath"}, "type": "property", "children": [{"attributes": {"text": "<p>The path to the property which holds the information that should be\ndisplayed as a label. This is only needed if objects are stored in the\nmodel.</p>"}, "type": "desc"}]}, {"attributes": {"name": "model", "check": "qx.data.Array", "allowNull": "false", "propertyType": "new", "apply": "_applyModel", "event": "changeModel"}, "type": "property", "children": [{"attributes": {"text": "<p>Data array containing the data which should be shown in the list.</p>"}, "type": "desc"}]}, {"attributes": {"name": "width", "docFrom": "qx.ui.core.LayoutItem", "defaultValue": "100", "refine": "true", "propertyType": "new", "overriddenFrom": "qx.ui.virtual.core.Scroller"}, "type": "property"}]}, {"type": "events", "children": [{"attributes": {"name": "changeDelegate"}, "type": "event", "children": [{"attributes": {"text": "Fired on change of the property {@link #delegate}."}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}, {"attributes": {"name": "changeModel"}, "type": "event", "children": [{"attributes": {"text": "Fired on change of the property {@link #model}."}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}]}]}