<?php
/*
                                  ____   _____
                                 / __ \ / ____|
                  ___ _   _  ___| |  | | (___
                 / _ \ | | |/ _ \ |  | |\___ \
                |  __/ |_| |  __/ |__| |____) |
                 \___|\__, |\___|\____/|_____/
                       __/ |
                      |___/              1.8

                     Web Operating System
                           eyeOS.org

             eyeOS Engineering Team - www.eyeos.org/team

     eyeOS is released under the GNU Affero General Public License Version 3 (AGPL3)
            provided with this release in license.txt
             or via web at gnu.org/licenses/agpl-3.0.txt

        Copyright 2005-2009 eyeOS Team (team@eyeos.org)
*/

function eyeVideo_on_Close($params = '') {
	proc('end');
}

function eyeVideo_on_getFile($params = '') {
	$url = $GLOBALS['eyeVideo_Hidden']->text;
	$file = utf8_basename($url);
	$path = eyeFiles('cleanPath',array(utf8_substr(utf8_trim($url,'/\\'),0,- utf8_strlen($file))));
	header('Content-type: video/x-flv');
	if ($path[1] == 'real') {
		header('Content-Length: ' . vfs('real_filesize',array($path[0] . '/' . $file)));
	} else {
		header('Content-Length: ' . vfs('filesize',array($path[0] . '/' . $file)));
	}
	header('Accept-Ranges: bytes');
	header('X-Pad: avoid browser bug');
	if ($path[1] == 'real') {
		vfs('printFile',array($path[0] . '/' . $file));
	} else {
		vfs('readFile',array($path[0] . '/' . $file));
	}
	exit;
}

function eyeVideo_on_loadVideo($params = '') {
	global $myPid;
	addShortUrl($myPid . '_eyeVideo','getFile');
	eyex('rawjs',array('js' => 'flowplayer("' . $myPid . '_eyeVideo_Window_Content", "index.php?version=' . EXTERN_CACHE_VERSION . '&extern=apps/eyeVideo/FlowPlayer.swf", "index.php/' . $myPid . '_eyeVideo");'));
}

function eyeVideo_on_Message($params = '') {
	eyeWidgets('updateContent',$params);
}
?>