<?php
/*
                                  ____   _____
                                 / __ \ / ____|
                  ___ _   _  ___| |  | | (___
                 / _ \ | | |/ _ \ |  | |\___ \
                |  __/ |_| |  __/ |__| |____) |
                 \___|\__, |\___|\____/|_____/
                       __/ |
                      |___/              1.8

                     Web Operating System
                           eyeOS.org

             eyeOS Engineering Team - www.eyeos.org/team

     eyeOS is released under the GNU Affero General Public License Version 3 (AGPL3)
            provided with this release in license.txt
             or via web at gnu.org/licenses/agpl-3.0.txt

        Copyright 2005-2009 eyeOS Team (team@eyeos.org)
*/

function eyeIframize_on_Close($params = ''){
	proc('end');
}

function eyeIframize_on_Do($params = '') {
	global $checknum;
	if (is_object($GLOBALS['eyeIframize_Textbox'])) {
		$url = $GLOBALS['eyeIframize_Textbox']->text;
		$GLOBALS['eyeIframize_Window']->close();
	} else {
		$url = $params[0];
	}
	if (utf8_strtolower(utf8_substr($url,0,6)) != 'ftp://' && utf8_strtolower(utf8_substr($url,0,7)) != 'http://' && utf8_strtolower(utf8_substr($url,0,8)) != 'https://') {
		$file = utf8_basename($url);
		$path = eyeFiles('cleanPath',array(utf8_substr(utf8_trim($url,'/\\'),0,- utf8_strlen($file))));
		if (vfs('fileExists',array($path[0] . '/' . $file)) || $path[1] == 'real' && vfs('real_fileExists',array($path[0] . '/' . $file))) {
			$myHidden = new Hidden(array(
				'father' => 'eyeIframize_Window_Content',
				'name' => 'eyeIframize_Hidden',
				'text' => $path[1] . '://' . $path[2] . '/' . $file
			));
			$myHidden->show();
			$title = $file . ' - ';
			$url = 'index.php?checknum=' . $checknum . '&msg=getFile';
		} else {
			$url = 'http://' . $url;
		}
	}
	$myWindow = new Window(array(
		'cent' => 1,
		'father' => 'eyeApps',
		'height' => 550,
		'name' => 'eyeIframize_Window',
		'savePosition' => 1,
		'sendResizeMsg' => 1,
		'showDragContent' => 2,
		'sigResize' => 'Resize',
		'title' => $title . 'eyeIframize',
		'width' => 750
	));
	$myWindow->show();
	$myIframe = new Iframe(array(
		'father' => 'eyeIframize_Window_Content',
		'name' => 'eyeIframize_Iframe',
		'height' => $myWindow->height - 24,
		'url' => $url,
		'width' => $myWindow->width - 2,
		'x' => 0,
		'y' => 0
	));
	$myIframe->show();
}

function eyeIframize_on_getFile($params = '') {
	$url = $GLOBALS['eyeIframize_Hidden']->text;
	$file = utf8_basename($url);
	$path = eyeFiles('cleanPath',array(utf8_substr(utf8_trim($url,'/\\'),0,- utf8_strlen($file))));
	if (utf8_strtolower(utf8_substr($file,-4)) == '.swf') {
		header('Content-type: application/x-shockwave-flash');
	}
	if ($path[1] == 'real') {
		header('Content-Length: ' . vfs('real_filesize',array($path[0] . '/' . $file)));
	} else {
		header('Content-Length: ' . vfs('filesize',array($path[0] . '/' . $file)));
	}
	header('Accept-Ranges: bytes');
	header('X-Pad: avoid browser bug');
	if ($path[1] == 'real') {
		vfs('printFile',array($path[0] . '/' . $file));
	} else {
		vfs('readFile',array($path[0] . '/' . $file));
	}
	exit;
}

function eyeIframize_on_Message($params = '') {
	eyeWidgets('updateContent',$params);
}

function eyeIframize_on_Resize($params = '') {
	$GLOBALS['eyeIframize_Iframe']->setWidth(intval($params['arg'][0]) - 2);
	$GLOBALS['eyeIframize_Iframe']->setHeight(intval($params['arg'][1]) - 24);
}
?>