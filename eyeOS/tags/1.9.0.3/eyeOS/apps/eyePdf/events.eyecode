<?php
/*
                                  ____   _____
                                 / __ \ / ____|
                  ___ _   _  ___| |  | | (___
                 / _ \ | | |/ _ \ |  | |\___ \
                |  __/ |_| |  __/ |__| |____) |
                 \___|\__, |\___|\____/|_____/
                       __/ |
                      |___/              1.9

                     Web Operating System
                           eyeOS.org

             eyeOS Engineering Team - www.eyeos.org/team

     eyeOS is released under the GNU Affero General Public License Version 3 (AGPL3)
            provided with this release in license.txt
             or via web at gnu.org/licenses/agpl-3.0.txt

        Copyright 2005-2009 eyeOS Team (team@eyeos.org)
*/

function eyePdf_on_Init($params = '') {
	global $checknum;
	global $myPid;
	if (isset($params['arg'][0])) {
		$params[0] = um('getCurrentUserDir') . '/' . FILES_USER_DIR . '/' . $params['arg'][0];
	}
	eyex('runjs',array(
		'js' => '
			if (IEversion || navigator.mimeTypes["application/pdf"] && navigator.mimeTypes["application/pdf"].enabledPlugin != null) {
				sendMsg(' . $checknum . ',"Load",eyeParam("path",%s));
			} else {
				sendMsg(' . $checknum . ',"downloadPdf",eyeParam("path",%s));
			}',
		'tokens' => array($params[0], $params[0])
	));
}

function eyePdf_on_Open($params = '') {
	global $checknum;
	proc('launch',array('eyeDialog',array(EYEDIALOG_TYPE_OPENFILE,'OpenDo',$checknum,'',array(
		'PDF files' => '*.pdf',
		'All files' => '*.*'
	),'','','Close')));
}

function eyePdf_on_OpenDo($params = '') {
	global $checknum;
	$GLOBALS['eyePdf_Hidden_Path']->setText(um('getCurrentUserDir') . '/' . FILES_USER_DIR . '/' . $params['arg'][0]);
	$GLOBALS['eyePdf_Iframe']->setUrl('index.php?checknum=' . $checknum . '&msg=getPdf&time=' . time());
	$GLOBALS['eyePdf_Window']->setTitle(utf8_basename($params['arg'][0]) . ' - eyePdf');
}

function eyePdf_on_Close($params = '') {
	proc('end');
}

function eyePdf_on_Message($params = '') {
	eyeWidgets('updateContent',$params);
}

function eyePdf_on_Fullscreen($params = '') {
	global $myPid;
	$GLOBALS['eyePdf_Window']->setFullScreen();
	if ($GLOBALS['eyePdf_Window']->fullScreen) {
		$press = 'Press';
	}
	eyex('rawjs',array('js' => 'e = xGetElementById("' . $myPid . '_eyePdf_Toolbar");
	for (var i = 0; i < e.childNodes.length; i++) {
		if (e.childNodes[i].id == "Fullscreen_Container") {
			e.childNodes[i].className = "blockbarItem' . $press . '_right";
		}
	}'));
}

function eyePdf_on_downloadPdf($params = '') {
	proc('launch',array('eyeDownload',array($params['path'][0])));
	proc('end');
}

function eyePdf_on_getPdf($params = '') {
	$path = $GLOBALS['eyePdf_Hidden_Path']->text;
	header('Content-Type: application/pdf');
	header('Content-Length: ' . vfs('filesize',array($path)));
	header('Accept-Ranges: bytes');
	header('X-Pad: avoid browser bug');
	vfs('readFile',array($path));
	exit;
}

function eyePdf_on_Load($params = '') {
	global $checknum;
	addListenerServiceCall('fullResized','eyex','resizedbrowser');
	$myWindow = new Window(array(
		'cent' => 1,
		'father' => 'eyeApps',
		'height' => 480,
		'minHeight' => 200,
		'minWidth' => 200,
		'name' => 'eyePdf_Window',
		'title' => utf8_basename($params['path'][0]) . ' - eyePdf',
		'savePosition' => 1,
		'sendResizeMsg' => 1,
		'showDragContent' => 2,
		'sigResize' => 'Resize',
		'width' => 600
	));
	$myWindow->show();

	$myToolbar = new Toolbar(array(
		'father' => 'eyePdf_Window_Content',
		'name' => 'eyePdf_Toolbar'
	));
	$myToolbar->show();
	$myToolbar->addItem('Open','index.php?version=' . EXTERN_CACHE_VERSION . '&theme=1&extern=icons/22x22/fileopen.png','Open');
	$myToolbar->addItem('Fullscreen','index.php?version='.EXTERN_CACHE_VERSION.'&theme=1&extern=icons/22x22/fullScreen.png','Full Screen','',1);

	$myIframe = new Iframe(array(
		'father' => 'eyePdf_Window_Content',
		'height' => $myWindow->height - 80,
		'name' => 'eyePdf_Iframe',
		'url' => 'index.php?checknum=' . $checknum . '&msg=getPdf&time=' . time(),
		'width' => $myWindow->width - 2,
		'x' => 0,
		'y' => 56
	));
	$myIframe->show();

	$myHidden = new Hidden(array(
		'father' => 'eyePdf_Window_Content',
		'name' => 'eyePdf_Hidden_Path',
		'text' => $params['path'][0]
	));
	$myHidden->show();
}

function eyePdf_on_Resize($params = '') {
	$GLOBALS['eyePdf_Window']->width = $params['arg'][0];
	$GLOBALS['eyePdf_Window']->height = $params['arg'][1];
	$GLOBALS['eyePdf_Iframe']->setWidth($GLOBALS['eyePdf_Window']->width - 2);
	$GLOBALS['eyePdf_Iframe']->setHeight($GLOBALS['eyePdf_Window']->height - 80);
}
?>