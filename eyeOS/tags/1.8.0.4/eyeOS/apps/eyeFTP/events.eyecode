<?php
/*
                                  ____   _____
                                 / __ \ / ____|
                  ___ _   _  ___| |  | | (___
                 / _ \ | | |/ _ \ |  | |\___ \
                |  __/ |_| |  __/ |__| |____) |
                 \___|\__, |\___|\____/|_____/
                       __/ |
                      |___/              1.8

                     Web Operating System
                           eyeOS.org

             eyeOS Engineering Team - www.eyeos.org/team

     eyeOS is released under the GNU Affero General Public License Version 3 (AGPL3)
            provided with this release in license.txt
             or via web at gnu.org/licenses/agpl-3.0.txt

        Copyright 2005-2009 eyeOS Team (team@eyeos.org)
*/

include_once(EYE_ROOT.'/'.APP_DIR.'/eyeFTP/lib-global'.EYE_CODE_EXTENSION);
include_once(EYE_ROOT.'/'.APP_DIR.'/eyeFTP/lib-local'.EYE_CODE_EXTENSION);
include_once(EYE_ROOT.'/'.APP_DIR.'/eyeFTP/lib-remote'.EYE_CODE_EXTENSION);
include_once(EYE_ROOT.'/'.APP_DIR.'/eyeFTP/dialogs'.EYE_CODE_EXTENSION);
include_once(EYE_ROOT.'/'.APP_DIR.'/eyeFTP/lib-ftp'.EYE_CODE_EXTENSION);
include_once(EYE_ROOT.'/'.APP_DIR.'/eyeFTP/hosts'.EYE_CODE_EXTENSION);
include_once(EYE_ROOT.'/'.APP_DIR.'/eyeFTP/events-local'.EYE_CODE_EXTENSION);
include_once(EYE_ROOT.'/'.APP_DIR.'/eyeFTP/events-remote'.EYE_CODE_EXTENSION);

define('EYEFTP_USE_REQUEST_BOUNCING',true);

define('EYEFTP_LOGSTYLE_NORMAL', 'norm');
define('EYEFTP_LOGSTYLE_SUCCESS', 'succ');
define('EYEFTP_LOGSTYLE_INFO', 'info');
define('EYEFTP_LOGSTYLE_WARNING', 'warn');
define('EYEFTP_LOGSTYLE_ERROR', 'err');

/*********************************************************************************************/
/*********************************************************************************************/
/*					FUNCTIONS TRIGGERED BY SIGNALS RAISED BY THE INTERFACE					 */
/*********************************************************************************************/
/*********************************************************************************************/

/*********************************************************************************************/
//		EVENTS RAISED DIRECTLY BY WIDGETS
/*********************************************************************************************/

/**
 * Called after the initialization of the interface (function 'eyeFTP_run()' in app.eyecode)
 */
function eyeFTP_on_eyeFTP_initComplete($params=null) {
	$version = eyeFTP_getVersionFromInfoXML();
	$conf = eyeFTP_getConf();

	eyeFTP_logConsole('eyeFTP v.%s started', array($version), EYEFTP_LOGSTYLE_INFO);
	eyeFTP_logConsole('Help and FAQ available on the eyeOS wiki: %s',array('http://wiki.eyeos.org/EyeFTP'));

	eyeFTP_setActiveView('local');
	eyeFTP_browseLocal('/');
	
	//if the 'host' textbox is not empty, this means a connection string has been provided at launch
	if ($conf['host'] != '') {
		$connectParams = array(
			'remoteDir' => array($conf['currentRemoteDir'])
		);
		eyeFTP_setConnectionActive(true);
		eyeFTP_on_eyeFTP_connect_ITM($connectParams);
	}
}

/**
 * @see file hosts.eyecode for operations concerning hosts management
 */
function eyeFTP_on_eyeFTP_manageHosts_ITM($params=null) {
	showManageHostsDialog();
}

function eyeFTP_on_eyeFTP_connect_ITM($params=null) {
	$conf = eyeFTP_getConf();
	$remoteDir = null;
	if (is_array($params)) {
		if ($params['remoteDir'][0]) {
			$remoteDir = $params['remoteDir'][0];
		}
	}

	// === BOUNCED REQUEST PROCESSING ===
	if (eyeFTP_isFromBouncedRequest($params)) {
		if (eyeFTP_ftpConnect($conf['host'],$conf['port'],$conf['username'],$conf['password'],$conf['passiveMode']))
			if (is_null($remoteDir)) {
				$remoteDir = eyeFTP_ftpPwd();
			}
			eyeFTP_browseRemote($remoteDir);
		return;
	}
	// === END OF BOUNCED REQUEST PROCESSING ===

	//only the "host" textfield must be filled in
	if (! $conf['host']){
		eyeX('messageBox',array('content'=> 'Please specify a host to connect to'));
		return;
	}
	if (! $conf['username']){
		eyeX('messageBox',array('content'=> 'Please specify a username'));
		return;
	}

	eyeFTP_clearLogConsole();
	eyeFTP_logConsole('Trying to connect to %s:%s (user "%s") ...',
		array($conf['host'],$conf['port'],$conf['username'])
	);

	if (EYEFTP_USE_REQUEST_BOUNCING) {
		eyeFTP_setConnectionActive(true);
		$connectParams = array(
			'__signal' => 'eyeFTP_connect_ITM',
			'remoteDir' => $remoteDir
		);
		eyeFTP_bounceRequest($connectParams);
	}
	else {
		if (eyeFTP_ftpConnect($conf['host'],$conf['port'],$conf['username'],$conf['password'],$conf['passiveMode'])) {
			if (is_null($remoteDir)) {
				$remoteDir = eyeFTP_ftpPwd();
			}
			eyeFTP_browseRemote($remoteDir);
		}
	}
}

function eyeFTP_on_eyeFTP_disconnect_ITM($params=null) {
	$conf = eyeFTP_getConf();
	if ($conf['isConnectionActive']) {
		eyeFTP_logConsole('Disconnecting from %s:%s',
			array($conf['host'],$conf['port'])
		);
		eyeFTP_setConnectionActive(false);
	}
}



function eyeFTP_on_eyeFTP_refresh_ITM($params=null) {
	$conf = eyeFTP_getConf();
	switch($conf['selectedView']) {
		case 'local':
			eyeFTP_on_eyeFTP_refreshLocal();
			return;

		case 'remote':
			eyeFTP_on_eyeFTP_refreshRemote();
			return;
	}
}

function eyeFTP_on_eyeFTP_createFolder_ITM($params=null) {
	$conf = eyeFTP_getConf();
	switch($conf['selectedView']) {
		case 'local':
			eyeFTP_on_eyeFTP_createFolderLocal();
			return;

		case 'remote':
			eyeFTP_on_eyeFTP_createFolderRemote();
			return;
	}
}

function eyeFTP_on_eyeFTP_rename_ITM($params=null) {
	$conf = eyeFTP_getConf();
	switch($conf['selectedView']) {
		case 'local':
			eyeFTP_on_eyeFTP_renameLocal();
			return;

		case 'remote':
			eyeFTP_on_eyeFTP_renameMoveRemote();
			return;
	}
}

function eyeFTP_on_eyeFTP_delete_ITM($params=null) {
	$conf = eyeFTP_getConf();
	switch($conf['selectedView']) {
		case 'local':
			eyeFTP_on_eyeFTP_deleteLocal();
			return;

		case 'remote':
			eyeFTP_on_eyeFTP_deleteRemote();
			return;
	}
}

function eyeFTP_on_eyeFTP_download_ITM($params=null) {
	$conf = eyeFTP_getConf();
	switch($conf['selectedView']) {
		case 'local':
			eyeFTP_on_eyeFTP_downloadLocal();
			return;

		case 'remote':
			eyeFTP_on_eyeFTP_downloadRemote();
			return;
	}
}

function eyeFTP_on_eyeFTP_upload_ITM($params=null) {
	$conf = eyeFTP_getConf();
	switch($conf['selectedView']) {
		case 'local':
			eyeFTP_on_eyeFTP_uploadLocal();
			return;

		case 'remote':
			eyeFTP_on_eyeFTP_uploadRemote();
			return;
	}
}

function eyeFTP_on_eyeFTP_help_ITM($params=null) {
	service('proc','launch',array('eyeNav','http://wiki.eyeos.org/EyeFTP#Help'));
}


/*********************************************************************************************/
//		TRANSFERS BETWEEN LOCAL AND REMOTE VIEWS
/*********************************************************************************************/
/**
 * Upload from eyeOS to FTP
 * Launches transfer of the selected local file to the current directory on the FTP server.
 */
function eyeFTP_on_eyeFTP_transferToRight_IMG($params=null) {
	$conf = eyeFTP_getConf();
	// === BOUNCED REQUEST PROCESSING ===
	if (eyeFTP_isFromBouncedRequest($params)) {
		$uploadParams = array(
			'source' => 'eyeos',
			'filePath' => $params['filePath'][0],
			'remotePath' => base64_decode($params['remotePath_b64'][0])
		);
		if (eyeFTP_ftpPut($uploadParams) === true) {
			eyeFTP_logConsole('File "%s" successfully uploaded to "%s"',
				array(basename($params['filePath'][0]),$uploadParams['remotePath']),
				EYEFTP_LOGSTYLE_SUCCESS
			);
			if ($conf['currentRemoteDir'] == $uploadParams['remotePath']) {
				eyeFTP_refreshRemote();
			}
		}
		else
			eyeFTP_logConsole('Unable to upload file, error occured', null, EYEFTP_LOGSTYLE_ERROR);
		return;
	}
	// === END OF BOUNCED REQUEST PROCESSING ===

	if (! $conf['isConnectionActive']) {

		eyeX('messageBox',array('content'=> 'You must connect first'));
		return;
	}
	if (! $conf['selectedLocalFile'] || $conf['selectedLocalFile']['type'] != '-') {
		eyeX('messageBox',array('content'=> 'You must select a local file'));
		return;
	}

	//check path validity
	$fileDirPath = eyeFTP_resolvePathInUserDir(dirname($conf['selectedLocalFile']['path']),false);
	if ($fileDirPath === false) {
		eyeFTP_logConsole('An error occurred during path resolving, aborting', null, EYEFTP_LOGSTYLE_ERROR);
		return;
	}
	$filePath = eyeFTP_getFormatedDirPath($fileDirPath.'/'.$conf['selectedLocalFile']['name']);
	$displayedFilePath = eyeFTP_getFormatedDirPath(
							eyeFTP_resolvePathInUserDir($fileDirPath).'/'.$conf['selectedLocalFile']['name'],$conf['currentRemoteDir']);

	eyeFTP_logConsole('Uploading: "%s" to "%s"',
		array($displayedFilePath,$conf['currentRemoteDir'])
	);

	if (EYEFTP_USE_REQUEST_BOUNCING) {
		eyeFTP_bounceRequest(array(
			'__signal' => 'eyeFTP_transferToRight_IMG',
			'filePath' => $filePath,
			'remotePath_b64' => base64_encode($conf['currentRemoteDir'])
		));
	}
	else {
		$uploadParams = array('source' => 'eyeos',
							'filePath' => $filePath,
							'remotePath' => $conf['currentRemoteDir']);
		if (eyeFTP_ftpPut($uploadParams) === true) {
			eyeFTP_logConsole('File "%s" successfully uploaded to "%s"',
				array(basename($filePath),$conf['currentRemoteDir']),
				EYEFTP_LOGSTYLE_SUCCESS
			);
			if ($conf['currentRemoteDir'] == $uploadParams['remotePath']) {
				eyeFTP_refreshRemote();
			}
		}
		else
			eyeFTP_logConsole('Unable to upload file, error occured', null, EYEFTP_LOGSTYLE_ERROR);
	}
}

/**
 * Download from FTP to eyeOS
 * Launches transfer of the selected remote file to the current directory on the local view.
 */
function eyeFTP_on_eyeFTP_transferToLeft_IMG($params=null) {
	// === BOUNCED REQUEST PROCESSING ===
	if (eyeFTP_isFromBouncedRequest($params)) {
		$downloadParams = array(
			'target' => 'eyeos',
			'path' => $params['path'][0]
		);
		if (! eyeFTP_ftpGet(base64_decode($params['dir_b64'][0]),
							base64_decode($params['filename_b64'][0]),
							$downloadParams)) {
			eyeFTP_logConsole('Unable to download file, error occured', null, EYEFTP_LOGSTYLE_ERROR);
		}
		return;
	}
	// === END OF BOUNCED REQUEST PROCESSING ===

	$conf = eyeFTP_getConf();
	if (! $conf['isConnectionActive']) {
		eyeX('messageBox',array('content'=> 'You must connect first'));
		return;
	}
	if (! $conf['selectedRemoteFile'] || $conf['selectedRemoteFile']['type'] != '-') {
		eyeX('messageBox',array('content'=> 'You must select a remote file'));
		return;
	}

	eyeFTP_logConsole('Downloading: "%s" to "%s"',
		array(eyeFTP_getFormatedDirPath($conf['currentRemoteDir'].'/'.$conf['selectedRemoteFile']['name']),$conf['currentLocalDir'])
	);

	if (EYEFTP_USE_REQUEST_BOUNCING) {
		eyeFTP_bounceRequest(array(
			'__signal' => 'eyeFTP_transferToLeft_IMG',
			'dir_b64' => base64_encode($conf['currentRemoteDir']),
			'filename_b64' => base64_encode($conf['selectedRemoteFile']['name']),
			'path' => $conf['currentLocalDir']
		));
	}
	else {
		$downloadParams = array(
			'target' => 'eyeos',
			'path' => $conf['currentLocalDir']
		);
		if (! eyeFTP_ftpGet($conf['currentRemoteDir'],$conf['selectedRemoteFile']['name'],$downloadParams)) {
			eyeFTP_logConsole('Unable to download file, error occured', null, EYEFTP_LOGSTYLE_ERROR);
		}
	}
}



/*********************************************************************************************/
//		OTHER EVENTS
/*********************************************************************************************/

function eyeFTP_on_windowResize($params=null) {
	include_once(EYE_ROOT.'/'.APP_DIR.'/eyeFTP/app'.EYE_CODE_EXTENSION);

	$newWidth = intval($params['arg'][0]);
	$newHeight = intval($params['arg'][1]);

	$dWidth = $newWidth - EYEFTP_WINSIZE_WIDTH;
	$dHeight = $newHeight - EYEFTP_WINSIZE_HEIGHT;

	//log console
	$GLOBALS['eyeFTP_log_CTNR']->setWidth(786 + $dWidth);
	$GLOBALS['eyeFTP_connectionData_CTNR']->setWidth(780 + $dWidth);
	
	//local/remote views splitter
	$GLOBALS['eyeFTP_leftRight_SPLT']->setWidth($newWidth - 10);
	$GLOBALS['eyeFTP_leftRight_SPLT']->setHeight($newHeight - 194);
	
	$splitterPositionRatio = $GLOBALS['eyeFTP_leftRight_SPLT']->position / $GLOBALS['eyeFTP_WND']->width;
	$newPosition = round($newWidth * $splitterPositionRatio);
	$GLOBALS['eyeFTP_leftRight_SPLT']->setPosition($newPosition);
	$GLOBALS['eyeFTP_leftRight_SPLT']->position = $newPosition;
	eyeWidgets('serialize',array($GLOBALS['eyeFTP_leftRight_SPLT']));
	
	//update window properties
	$GLOBALS['eyeFTP_WND']->setWidth($newWidth);
	$GLOBALS['eyeFTP_WND']->setHeight($newHeight);
	
	eyeFTP_doResize();
}
function eyeFTP_on_leftRightSplitResize($params=null) {
	$newLeftWidth = intval($params['arg'][0]);

	$GLOBALS['eyeFTP_leftRight_SPLT']->position = $newLeftWidth;
	eyeWidgets('serialize',array($GLOBALS['eyeFTP_leftRight_SPLT']));
	
	eyeFTP_doResize();
}

function eyeFTP_doResize() {
	//left browser (local files)
	$GLOBALS['eyeFTP_localPath_TXTBOX']->setWidth($GLOBALS['eyeFTP_leftRight_SPLT']->position - 47);
	$GLOBALS['eyeFTP_localFiles_TAB']->setWidth($GLOBALS['eyeFTP_leftRight_SPLT']->position - 15);
	$GLOBALS['eyeFTP_localFiles_TAB']->setHeight($GLOBALS['eyeFTP_leftRight_SPLT']->height - 30);
	
	//right browser (remote files)
	$GLOBALS['eyeFTP_remotePath_TXTBOX']->setWidth($GLOBALS['eyeFTP_leftRight_SPLT']->width - $GLOBALS['eyeFTP_leftRight_SPLT']->position - 57);
	$GLOBALS['eyeFTP_remoteFiles_TAB']->setWidth($GLOBALS['eyeFTP_leftRight_SPLT']->width - $GLOBALS['eyeFTP_leftRight_SPLT']->position - 25);
	$GLOBALS['eyeFTP_remoteFiles_TAB']->setHeight($GLOBALS['eyeFTP_leftRight_SPLT']->height - 30);
	
	//transfer arrows
	$GLOBALS['eyeFTP_transferToRight_IMG']->setX($GLOBALS['eyeFTP_leftRight_SPLT']->position);
	$GLOBALS['eyeFTP_transferToRight_IMG']->setY(150 + ($GLOBALS['eyeFTP_leftRight_SPLT']->height / 2));
	$GLOBALS['eyeFTP_transferToLeft_IMG']->setX($GLOBALS['eyeFTP_leftRight_SPLT']->position);
	$GLOBALS['eyeFTP_transferToLeft_IMG']->setY(182 + ($GLOBALS['eyeFTP_leftRight_SPLT']->height / 2));
}

function eyeFTP_on_fullScreen(){
	global $myPid;
	$GLOBALS['eyeFTP_WND']->setFullScreen();
}

function eyeFTP_on_Message($params=null) {
	reqLib('eyeWidgets','updateContent',$params);
}

function eyeFTP_on_Close(){
	proc('end');
}

?>