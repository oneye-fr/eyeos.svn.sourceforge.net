<?php
/*
                                  ____   _____ 
                                 / __ \ / ____|
                  ___ _   _  ___| |  | | (___  
                 / _ \ | | |/ _ \ |  | |\___ \ 
                |  __/ |_| |  __/ |__| |____) |
                 \___|\__, |\___|\____/|_____/ 
                       __/ |                   
                      |___/              1.8

                     Web Operating System
                           eyeOS.org

             eyeOS Engineering Team - eyeOS.org/whoarewe

     eyeOS is released under the GNU Affero General Public License Version 3 (AGPL3)
            provided with this release in license.txt
             or via web at gnu.org/licenses/agpl-3.0.txt

        Copyright 2005-2008 eyeOS Team (team@eyeos.org)         
*/

function eyeConsole_on_Close($params=null) {
	proc('end');
}

function eyeConsole_on_Resize($params=null) {
	$width = $params['arg'][0];
	$height = $params['arg'][1];
	$GLOBALS['cmd']->setWidth($width-80);
	$GLOBALS['consoleOutput']->setWidth($width-25);
	$GLOBALS['consoleOutput']->setHeight($height-44);
}

function eyeConsole_on_sendCmd($params=null) {
	$cmd = $GLOBALS['cmd']->text;
	$GLOBALS['cmd']->setText("");
	$arguments = parseArguments($cmd);
	$myApp = $arguments[0];	
	array_shift($arguments);
	eyeX('print',array('eyeOS> '.$cmd));
	if(!service('proc','launch',array($myApp,$arguments))) {
		eyeX('print',array("Command not found"));
	}
}

//steal from eyeLaunch
function parseArguments($myApp){
/*Remplacing escaped quotes and spaces
 * 
 * We can do it with a conditional in a regexp, but i decide dot it because more programers
 * don't know more abou regexp.
 * 
 * First remplace \" and \ for unique number.
 * Then, apply the regexp for extract every quoted text "text here"
 * and then, split the text. 
 */
 
 //Remplace scaped chars with a rand string
	if(utf8_strpos($myApp,'\"')){
		//remplace
		$quoteRemplace = utf8_substr(uniqid(rand()),0,8);
		$myApp = str_replace('\"',$quoteRemplace,$myApp);
	}
	//Remplacing scaped spaces
	if(utf8_strpos($myApp,'\ ')){
		//remplace
		$quoteRemplace = utf8_substr(uniqid(rand()),0,8);
		$myApp = str_replace('\ ',$quoteRemplace,$myApp);
	}
	
	$items = array();
//Getting the name if it is a quoted string.
	if($myApp{0} == '"'){
		preg_match("/\".+\"/U",$myApp,$appName);
		//Removing from myApp string
		$myApp = str_replace($appName[0],'',$myApp);
		//Removing the quotes
		$appName = str_replace('"','',$appName[0]);
		$items[0] = $appName;
	}else{
		if(utf8_strpos($myApp,' ')){
			$appName = utf8_substr($myApp,0,utf8_strpos($myApp,' '));
			$myApp = str_replace($appName,'',$myApp);
			$items[0] = $appName;	
		}else{
			$appName = $myApp;
			$items[0] = $appName;
			return $items;
		}	
		
	}
	
//Getting quoted arguments
	$con = array();	
	preg_match_all("/\".+\"/U",$myApp,$con);
	foreach ($con[0] as $quotedString){
		//First delete it from myApp string
		$myApp = str_replace($quotedString,'',$myApp);
		//Add word without quotes to items
		$quotedString = str_replace('"','',$quotedString);
		//Add it to items array
		$items[] = $quotedString; 
	}
//Getting rest of arguments
	preg_match_all("/ .+ /U",$myApp,$rest);
	foreach($rest[0] as $argument){
		$myApp = str_replace($argument,'',$myApp);		
		$items[] = utf8_trim($argument);
	}
	
//The last argument if it exists	
	$items[] = utf8_trim($myApp);	
	return $items;	
}

?>