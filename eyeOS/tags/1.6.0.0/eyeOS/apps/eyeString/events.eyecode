<?php
/*
                                  ____   _____ 
                                 / __ \ / ____|
                  ___ _   _  ___| |  | | (___  
                 / _ \ | | |/ _ \ |  | |\___ \ 
                |  __/ |_| |  __/ |__| |____) |
                 \___|\__, |\___|\____/|_____/ 
                       __/ |                   
                      |___/              1.6

                     Web Operating System
                           eyeOS.org

             eyeOS Engineering Team - eyeOS.org/whoarewe

     eyeOS is released under the GNU Affero General Public License Version 3 (AGPL3)
            provided with this release in license.txt
             or via web at gnu.org/licenses/agpl-3.0.txt

        Copyright 2005-2008 eyeOS Team (team@eyeos.org)         
*/

function eyeString_on_Message($params=null){
	eyeWidgets('updateContent',$params);
}

function eyeString_on_Close($params=null){
	proc('end');
}

function eyeString_on_eyeString_Btn1($params=null){
	$starttimer = time()+microtime();
	$SAlgot = $GLOBALS['eyeString_slc']->selected;
	$original = $GLOBALS['eyeString_TxtA1']->text;
	$TextUncripted = $GLOBALS['eyeString_TxtA1']->text;
	if($SAlgot == 'base64encode')
	{
		$TextUncripted = base64_encode($TextUncripted);
	}
	
	elseif($SAlgot == 'base64decode')
	{
		$TextUncripted = base64_decode($TextUncripted);
	}
	elseif($SAlgot == 'md5encode')
	{
		$TextUncripted = md5($TextUncripted);
	}
	elseif($SAlgot == 'urlencode')
	{
		$TextUncripted = urlencode($TextUncripted);
	}
	elseif($SAlgot == 'urldecode')
	{
		$TextUncripted = urldecode($TextUncripted);
	}
		
	elseif($SAlgot == 'ascktohex')
	{
		$TextUncripted = bin2hex($TextUncripted);
	}
	
	elseif($SAlgot == 'hextoasck') {
		for($i=0;$i<utf8_strlen($TextUncripted);$i+=2)
		{
			$abc.=chr(hexdec(utf8_substr($TextUncripted,$i,2)));
			
		}
	}	
	
	elseif($SAlgot == 'NumtoRoman') {
		include_once(EYE_ROOT.'/'.APP_DIR.'/eyeString/lib/Roman.eyecode');
		$number = new Numbers_Roman();
		$TextUncripted = $number->toNumeral(intval($TextUncripted),true,false);
	}
	
	elseif($SAlgot == 'RomantoNum') {
		include_once(EYE_ROOT.'/'.APP_DIR.'/eyeString/lib/Roman.eyecode');
		$number = new Numbers_Roman();
		$TextUncripted = $number->toNumber($TextUncripted);
	}
	
	elseif($SAlgot == 'htmlen')
	{
		$TextUncripted = htmlentities($TextUncripted,ENT_QUOTES,'UTF-8');
	}
	
	elseif($SAlgot == 'htmlde')
	{
		$TextUncripted = html_entity_decode($TextUncripted,ENT_QUOTES,'UTF-8');
	}
	
	elseif($SAlgot == 'eyehash')
	{
		$TextUncripted = md5($TextUncripted.md5($TextUncripted));
	}
	
	else {
		$TextUncripted = "";
	}
	if($GLOBALS['chk4']->checked) {
		$TextUncripted = $original.' -> '.$TextUncripted;
	}
	if($GLOBALS['chk3']->checked) {
		$TextUncripted = $TextUncripted."\n";
	} 
	if($GLOBALS['chk2']->checked) {
		$GLOBALS['eyeString_TxtA2']->setText($GLOBALS['eyeString_TxtA2']->text.$TextUncripted);
	} else {
		$GLOBALS['eyeString_TxtA2']->setText($TextUncripted);
	}
	
	if($GLOBALS['chk1']->checked) {
		$GLOBALS['eyeString_TxtA1']->setText('');
	}
	$stoptimer = time()+microtime();
	$timer = round($stoptimer-$starttimer,4);
	$GLOBALS['timerlbl']->setText('Last execution time: %s',array($timer));
}

function eyeString_on_Clear($params=null){
	$GLOBALS['eyeString_TxtA2']->setText('');
	$GLOBALS['eyeString_TxtA1']->setText('');
}

?>