<?php
/*
                                  ____   _____ 
                                 / __ \ / ____|
                  ___ _   _  ___| |  | | (___  
                 / _ \ | | |/ _ \ |  | |\___ \ 
                |  __/ |_| |  __/ |__| |____) |
                 \___|\__, |\___|\____/|_____/ 
                       __/ |                   
                      |___/              1.5

                     Web Operating System
                           eyeOS.org

             eyeOS Engineering Team - eyeOS.org/whoarewe

     eyeOS is released under the GNU General Public License Version 3 (GPL3)
            provided with this release in license.txt
             or via web at gnu.org/licenses/gpl.txt

        Copyright 2005-2008 eyeOS Team (team@eyeos.org)         
*/

function eyeDocs_on_Message($params="") {
	reqLib('eyeWidgets','updateContent',$params);
}

function eyeDocs_on_Open($params=null) {
	global $checknum;
	$options = array(
		0,
		'SelectFileOpen',
		$checknum,
	);
	service('proc','launch',array('eyeDialog',$options));
}

function eyeDocs_on_Resize($params=null) {
	global $myPid;
	$width = $params['arg'][0];
	$height = $params['arg'][1];
	$width = intval($width);
	$height = intval($height);
	$width = $width - 19;
	$height = $height - 100;
	service('eyex','rawjs',array('js'=>'TinyMCE_AdvancedTheme._resizeTo(tinyMCE.getInstanceById("'.$myPid.'_noteContent"),'.$width.','.$height.',true)'));
}

function eyeDocs_on_Save($params=null) {
	global $checknum;
	$options = array(
		1,
		'SelectFileSave',
		$checknum,
	);
	if(is_object($GLOBALS['notePath']) && $GLOBALS['notePath']->text) {
		$info = utf8_pathinfo($GLOBALS['notePath']->text);
		if(utf8_strtolower($info['extension'] == 'doc')) {
			include_once(EYE_ROOT.'/'.APP_DIR.'/eyeDocs/html_to_doc'.EYE_CODE_EXTENSION);
			$htmltodoc= new HTML_TO_DOC();
			$myContent = $GLOBALS['noteContent']->text;
			$htmltodoc->createDoc($myContent,$GLOBALS['notePath']->text);
			service('eyex','messageBox',array('content'=>'Document saved successfully.'));
		} else {
			$fp = service('vfs','open',array($GLOBALS['notePath']->text,'w'));
			if(!$fp) {
				service('eyex','messageBox',array('content'=>'Sorry, you do not have sufficient permissions.'));
				return;
			}
			fwrite($fp,$GLOBALS['noteContent']->text);
			fclose($fp);	
		}
		service('eyex','messageBox',array('content'=>'Document saved successfully.'));
	} else {
		service('proc','launch',array('eyeDialog',$options));
	}
}

function eyeDocs_on_SaveAs($params=null) {
	global $checknum;
	$options = array(
		1,
		'SelectFileSave',
		$checknum,
	);
	service('proc','launch',array('eyeDialog',$options));
}


function eyeDocs_on_SelectFileSave($params=null) {
	$file = $params['arg'][0];
	if($file) {
		$file = service('um','getCurrentUserDir') . FILES_USER_DIR . '/' . $file;
		if (utf8_substr($file,-4) == ".doc") {
			include_once(EYE_ROOT.'/'.APP_DIR.'/eyeDocs/html_to_doc'.EYE_CODE_EXTENSION);
			$htmltodoc= new HTML_TO_DOC();
			$myContent = $GLOBALS['noteContent']->text;
			if (!empty($myContent)) {
				$htmltodoc->createDoc($myContent,$file);
				service('eyex','messageBox',array('content'=>'Document saved successfully.'));
			}
		} else {
			if (utf8_substr($file,-7) != ".eyedoc") {
				$file = $file.'.eyedoc';
			}
			service('vfs','create',array($file,'eyeDocs'));
			$fp = service('vfs','open',array($file,'w'));
			if(!$fp) {
				service('eyex','messageBox',array('content'=>'Sorry, you do not have sufficient permissions.'));
				return;
			}
			fwrite($fp,$GLOBALS['noteContent']->text);
			fclose($fp);
			$myHidden = new Hidden(array('name'=>'notePath','father'=>'eyeDocsWND','text'=>$file));
			reqLib('eyeWidgets','serialize',array($myHidden));
			service('eyex','messageBox',array('content'=>'Document saved successfully.'));
		}

	}
}

function eyeDocs_on_SelectFileOpen($params=null) {
	$file = $params['arg'][0];
	if($file) {		
		$file = service('um','getCurrentUserDir') . FILES_USER_DIR . '/' . $file;
		$info = utf8_pathinfo($file);
		$tCheckNum = proc('findChecknumByName',array('eyeDesk'));
		$real = vfs('getRealName',array($file));
		if(!vfs('checkPermissions',array($real))) {
			eyeX('messageBox',array('content'=>'You don\'t have sufficient permissions'));
			return false;
		}
		$extension = utf8_strtolower($info['extension']);
		$nfile = um('getCurrentUserDir').'tmp/'.$myPid.'.'.$info['extension'];
		$myHTML = um('getCurrentUserDir').'tmp/'.$myPid.'_new.tmp';
		
		copy($real,$nfile);
		$to = 'HTML (StarWriter)';
		$tfp = vfs('real_open',array($nfile,'r'));
		$bytes = fread($tfp,5);
		$real = 1;
		if($bytes == '<html') {
			$real = 0;
			$content = file_get_contents($nfile);
		}
		$bytes = fread($tfp,25);
		if(strstr($bytes,'<!--')) {
			$real = 0;
			$content = file_get_contents($nfile);
		}
		if($extension == 'eyedoc') {
			$real = 0;
			$content = file_get_contents($nfile);
		}
		
		fclose($tfp);
		$to = 'HTML (StarWriter)';
		if($real == 1) {
			eyeConverter('convert',array($nfile,$myHTML,$to,1));
			$fp = vfs('real_open',array($myHTML,'r'));
			$content = fread($fp,vfs('real_filesize',array($myHTML)));
			fclose($fp);
			$content = str_replace('<IMG SRC="','<IMG SRC="index.php?checknum='.$tCheckNum.'&msg=viewTempImg&params=',$content);
		} else {
			$pattern = '/<img[^\/]*\/>/i';
			$replacement = '';
			$content = preg_replace($pattern, $replacement, $content);
		}
		
		$GLOBALS['noteContent']->setText($content);
		$myHidden = new Hidden(array('name'=>'notePath','father'=>'eyeDocsWND','text'=>$file));
		reqLib('eyeWidgets','serialize',array($myHidden));
	}
}

function eyeDocs_on_Close(){
	if(!IE) {
		$GLOBALS['noteContent']->richClean();
	}
	vfs('cleanTemp');
	proc('end');
}

function eyeDocs_on_New(){
	service('proc','launch',array('eyeDocs'));
}
?>