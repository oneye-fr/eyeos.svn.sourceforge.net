<?php
/*
                                  ____   _____ 
                                 / __ \ / ____|
                  ___ _   _  ___| |  | | (___  
                 / _ \ | | |/ _ \ |  | |\___ \ 
                |  __/ |_| |  __/ |__| |____) |
                 \___|\__, |\___|\____/|_____/ 
                       __/ |                   
                      |___/              1.5

                     Web Operating System
                           eyeOS.org

             eyeOS Engineering Team - eyeOS.org/whoarewe

     eyeOS is released under the GNU General Public License Version 3 (GPL3)
            provided with this release in license.txt
             or via web at gnu.org/licenses/gpl.txt

        Copyright 2005-2008 eyeOS Team (team@eyeos.org)

*/
/*
	Session handling lib for eyeOS
*/
define('COOKIE_ID','PHPSESSID');
define('COOKIE_EXPIRE','99999999999999999');
define('IPC_TYPE','File');

function lib_eyeSessions_startSession($params=null){
	global $sessionId;	
	
	//Register the save session function for do it at the final of this script
	register_shutdown_function('reqLib','eyeSessions','saveSession');	
	//If already have a id (and posible session)
	if(isset($_REQUEST[COOKIE_ID])){		
		//If session exists
		if(reqLib('eyeIPC','isSet',array($_REQUEST[COOKIE_ID],IPC_TYPE))){						
			$sessionId = $_REQUEST[COOKIE_ID];
			$_SESSION = reqLib('eyeIPC','getVar',array($sessionId,IPC_TYPE));			
			if(!is_array($_SESSION)){
				$_SESSION = array();
			}			
			return true;	
		}		
	}
	
	//Creating the new session
	$sessionId = md5(uniqid(rand()));
	setcookie(COOKIE_ID,$sessionId,COOKIE_EXPIRE);
	$_SESSION = array();	
	return true;
}

//single var operations
function lib_eyeSessions_setVar($params) {
	$varName = $params[0];
	$varValue = $params[1];
	if(!isset($_SESSION[$varName])){
		$_SESSION[$varName];
	}
	$_SESSION[$varName] = $varValue;
}

function lib_eyeSessions_getVar($params){
	$varName = $params[0];
	return $_SESSION[$varName];
}

function lib_eyeSessions_delVar($params){
	$varName = $params[0];
	unset($_SESSION[$varName]);
}

function lib_eyeSessions_checkVar($params){
	$varName = $params[0];
	if(isset($_SESSION[$varName])){
		return true;
	} else {
		return false;
	}
}

//array operations
function lib_eyeSessions_makeArrayVar($params) {
	$varName = $params[0];	
	$_SESSION[$varName] = array();
}

function lib_eyeSessions_addArrayValue($params) {
	$varName = $params[0];
	$varValue = $params[1];
	if(!isset($_SESSION[$varName]) || !is_array($_SESSION[$varName])){
		$_SESSION[$varName] = array();
	}
	array_push($_SESSION[$varName],$varValue);
}

//array with keys
function lib_eyeSessions_addArrayValueByKey($params) {
	$varName = $params[0];
	$varValue = $params[1];
	$key = $params[2];
	if(!isset($_SESSION[$varName]) || !is_array($_SESSION[$varName])){
		$_SESSION[$varName] = array();
	}
	$_SESSION[$varName][$key] = $varValue;
}

function lib_eyeSessions_delArrayValueByKey($params) {
	$varName = $params[0];
	$varKey = $params[1];
	unset($_SESSION[$varName][$varKey]);
}

function lib_eyeSessions_getArrayValueByKey($params) {
	$arrayName = $params[0];
	$position = $params[1];
	return $_SESSION[$arrayName][$position];
}

function lib_eyeSessions_checkArrayValueByKey($params) {
	$varName = $params[0];
	$varKey = $params[1];
	if(isset($_SESSION[$varName][$varKey])) {
		return true;
	} else {
		return false;
	}
}

function lib_eyeSessions_saveSession(){
	global $sessionId;	
	//If sessionId is not pressent, don't save any session.
	if($sessionId == ''){
		return true;		
	}
	//If a script are finished with session, save it with ipc.
	$dir = dirname(($_SERVER['SCRIPT_FILENAME'])).'/'.REAL_EYE_ROOT;	
	chdir($dir);	
	//save the session	
	reqLib('eyeIPC','setVar',array($sessionId,$_SESSION,IPC_TYPE));
	return true;
}

function lib_eyeSessions_endSession(){
	global $sessionId;	
	reqLib('eyeIPC','rmVar',array($sessionId,IPC_TYPE));
	//Deleting $_SESSION content
	$_SESSION = array(); 
	//Deleting session ID
	$sessionId = '';		
	return true;
}

?>