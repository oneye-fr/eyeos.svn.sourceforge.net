<?php
/*
                                  ____   _____ 
                                 / __ \ / ____|
                  ___ _   _  ___| |  | | (___  
                 / _ \ | | |/ _ \ |  | |\___ \ 
                |  __/ |_| |  __/ |__| |____) |
                 \___|\__, |\___|\____/|_____/ 
                       __/ |                   
                      |___/              1.5

                     Web Operating System
                           eyeOS.org

             eyeOS Engineering Team - eyeOS.org/whoarewe

     eyeOS is released under the GNU General Public License Version 3 (GPL3)
            provided with this release in license.txt
             or via web at gnu.org/licenses/gpl.txt

        Copyright 2005-2008 eyeOS Team (team@eyeos.org)

*/
/*
	Toolbar widget abstraction
*/

class Toolbar {
	//pid controller
	
	var $creatorPid;
	//global widgets options without default
	var $name;
	var $father;

	//generic widget options with default
	var $x;
	var $y;
	var $horiz;
	var $vert;
	var $cent;
	
	var $showed = 0;
	
	function Toolbar($params) {	
		global $myPid;
		$this->creatorPid = $myPid;
		//generic widget options without default
		$this->name = $params['name'];
		$this->father = $params['father'];

		//generic widget options with default
		isset($params['vert']) ? $this->vert = $params['vert'] : $this->vert = 0;
		isset($params['y']) ? $this->y = $params['y'] : $this->y = 0;
	}
	
	//event handling
	function addEvent($eventName,$eventFunc,$args="") {
		global $myPid;
		$name = $myPid.'_'.$this->name;
		if($this->showed == 0) {
			$this->show();
		}
		service('eyex','addEvent',array('name' => $name, 'action' => $eventFunc, 'event' => $eventName,'args'=>$args));
	}

	function show() {
		if($this->title) {
			$this->title = i18n('translate',array($this->title));
		}
		$widgetsparams = array(
			'foo'=>'foo'
		);
		$widgetsparams = service("mmap","array2js",array($widgetsparams));
		
		$myToolbar = array(
			'name' => $this->name,
			'x' => 0,
			'y' => $this->y,
			'horiz' => 0,
			'vert' => $this->vert,
			'father' => $this->father,
			'widgetname' => 'Toolbar',
			'params' => $widgetsparams,
			'center' => 0
		);
		$this->showed=1;
		service('eyex','createWidget',$myToolbar);
	}
	
		
	function setCss($params) {
		global $myPid;
		if(is_array($params)) {
			foreach($params as $key => $value) {
				service('eyex','updateCss',array('name' => $myPid.'_'.$this->name,'property' => $key,'value' => $value));
			}
		}
	}
	
	function hide() {
		global $myPid;
		$this->visible = 0;
		service('eyex','rawjs',array('js' => 'document.getElementById("'.$myPid.'_'.$this->name.'_Container").style.display="none"'));
	}
	
	function unhide() {
		global $myPid;
		$this->visible = 1;
		service('eyex','rawjs',array('js' => 'document.getElementById("'.$myPid.'_'.$this->name.'_Container").style.display="block"'));
	}
	
	function remove() {
		global $myPid;
		$name = $this->name.'_Container';
		service('eyex','removeWidget',array('name'=>$name));
	}
	
	function addLine() {
		global $myPid;
		$js = 'addLineToBar("'.$myPid.'_'.$this->name.'");';
		eyeX('rawjs',array('js'=>$js));
	}
	
	function addItem($itemName,$img,$text,$ofriends=null) {
		global $myPid;
		global $checknum;
		$friends="''";
		if(is_array($ofriends)) {
			foreach($ofriends as $value) {
				if(method_exists($value,'getSyncString')) {
					if($friends == "''") {
						$friends = $value->getSyncString();				
					} else {
						$friends .= '+'.$value->getSyncString();
					}
				}
			}
		}
		$text = i18n('translate',array($text));
		$friends = base64_encode($friends);
		$tokens = array($itemName,$img,$text);
		$js = 'addItemToBar("'.$myPid.'_'.$this->name.'", %s , %s , %s ,"'.$friends.'",'.$checknum.');';
		eyex('runjs',array('js'=>$js,'tokens'=>$tokens));
	}
}
?>
