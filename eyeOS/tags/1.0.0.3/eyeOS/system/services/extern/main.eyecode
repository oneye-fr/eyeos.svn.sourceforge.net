<?php
/*
                                  ____   _____ 
                                 / __ \ / ____|
                  ___ _   _  ___| |  | | (___  
                 / _ \ | | |/ _ \ |  | |\___ \ 
                |  __/ |_| |  __/ |__| |____) |
                 \___|\__, |\___|\____/|_____/ 
                       __/ |                   
                      |___/              1.0

                     Web Operating System
                           eyeOS.org

             eyeOS Engineering Team - eyeOS.org/whoarewe

     eyeOS is released under the GNU General Public License (GPL)
            provided with this release in license.txt
             or via web at gnu.org/licenses/gpl.txt

        Copyright 2005-2007 eyeOS Team (team@eyeos.org)

*/
/*
	eyeOS external files service
*/
/*
	extern service is the way to get files, like css, js and images ignoring the EYE_ROOT content
	because EYE_ROOT can change in each installation, and should be "secret"
*/

define('MAX_FILE_EXTENSION',8);
define('MAX_FILE_NAME_LEN',40);

/***
* 
* Description: get a file located at the extern dir
*
* Arguments:
* 	+ file: path to the file into extern directory 
*	- type: type of the header to use, related to the format of the file
* 
* Return: the contents of the file requested
* 
* Last update 2007-06-1
***/
function service_extern_getFile($params) {
	$info = pathinfo($params[0]);
	$type = $params[1];
	$myDir = $info['dirname'];
	$myFile = $info['basename'];
	$myExt = $info['extension'];

	//let's protect against header tricks	
	$myExt = str_replace("\n",'',$myExt);
	$myExt = str_replace("\r",'',$myExt);
	$myFile = str_replace("\n",'',$myFile);
	$myFile = str_replace("\r",'',$myFile);
	
	if(strlen($myExt) > MAX_FILE_EXTENSION) {
		return;
	}
	
	if(strlen($myFile > MAX_FILE_NAME_LEN)) {
		return;
	}
	
	unset($info); //we don't need it anymore
	
	$myDir = realpath(EYE_ROOT.'/'.EXTERN_DIR.'/'.$myDir); //needed? maybe
	
	$extern_path = realpath(EYE_ROOT.'/'.EXTERN_DIR.'/');

	if (0 !== strpos ($myDir,$extern_path)) { //check dir
		return;
	} 

	if(is_readable($myDir.'/'.$myFile)) {		
		$len = filesize($myDir.'/'.$myFile);
		if($type == 'text') {
			header("Content-type: text/plain");	
		} elseif ($type == 'image' || $myExt == 'png' || $myExt == 'jpg' || $myExt == 'gif') {
			header('Content-Type: image/'.$myExt);
		} elseif ($type == 'download') {
			header('Content-Type: application/force-download');
			header("Content-Description: File Transfer");
			header('Content-Disposition: attachment; filename="'.$myFile.'"');
		} elseif ($type == 'css' || $myExt == 'css') {
			header("Content-type: text/css");
		} elseif($type == 'swf'  || $myExt == 'swf'){
			header("Content-type: application/x-shockwave-flash");
		} elseif($type == 'dynamic') {
			include_once($myDir.'/'.$myFile);
			if(function_exists('get_dynamic_content')) {
				$return = get_dynamic_content($_GET['params']);
				$len = strlen($return);
			}
		}
		header("Content-Length: $len");
		header("Accept-Ranges: bytes");
		header("X-Pad: avoid browser bug");
		if($type == 'dynamic') {
			echo $return;
		} else {
			readfile($myDir.'/'.$myFile);
		}
	} 
}
