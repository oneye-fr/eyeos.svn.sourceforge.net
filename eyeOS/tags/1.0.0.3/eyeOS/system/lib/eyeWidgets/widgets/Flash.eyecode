<?php
/*                            eyeOS project
                     Internet Based Operating System
                               Version 1.0
                     www.eyeOS.org - www.eyeOS.info
       -----------------------------------------------------------------
                                 eyeOS Team
                        http://www.eyeos.org/whoarewe
       -----------------------------------------------------------------
          eyeOS is released under the GNU General Public License - GPL
               provided with this release in license.txt
                   or via web at www.gnu.org/licenses/gpl.txt

                Copyright 2005-2007 eyeOS Team (team@eyeos.org)

          To help continued development please consider a donation at
            http://www.eyeos.org/donations         
*/

class Flash {
	//pid controller
	
	var $creatorPid;
	
	//global widgets options without default
	var $name;
	var $father;

	//generic widget options with default
	var $x;
	var $y;
	var $horiz;
	var $vert;
	var $cent;
	
	var $showed = 0;
	
	//custom widget options
	var $src;
	var $visible;
	var $width;
	var $height;
	var $flashParamsNames;
	var $flashParamsValues;
	//constructor
	function Flash($params) {	
		global $myPid;
		$this->creatorPid = $myPid;
		//generic widget options without default
		$this->name = $params['name'];
		isset($params['father']) ? $this->father = $params['father'] : $this->father = 'eyeApps';	
		//generic widget options with default
		isset($params['horiz']) ? $this->horiz = $params['horiz'] : $this->horiz = 0;
		isset($params['vert']) ? $this->vert = $params['vert'] : $this->vert = 0;
		isset($params['cent']) ? $this->cent = $params['cent'] : $this->cent = 0;
		isset($params['x']) ? $this->x = $params['x'] : $this->x = 20;
		isset($params['y']) ? $this->y = $params['y'] : $this->y = 20;
		//especific options
		isset($params['src']) ? $this->src = $params['src'] : $this->src = "";
		isset($params['visible']) ? $this->visible = $params['visible'] : $this->visible = 1;
		isset($params['width']) ? $this->width = $params['width'] : $this->width = -1;
		isset($params['height']) ? $this->height = $params['height'] : $this->height = -1;
		
		if(isset($params['flashParamsNames']) || isset($params['flashParamsValues'])){
			//Every value need name
			//service('eyex','messageBox',array('content'=>'kakakakaka','type'=>2));
			if(count($params['flashParamsNames']) != count($params['flashParamsValues'])){
				$this->flashParamsNames = "";
				$this->flashParamsValues = "";
			}else{
				$this->flashParamsNames = $params['flashParamsNames'];
				$this->flashParamsValues = $params['flashParamsValues'];
			}
		}
	}
	
	//widget show method, send a createWidget message
		
	function show($noserialize=1) {
		global $myPid;
		if(is_array($this->flashParamsNames) && is_array($this->flashParamsValues)){
			$flashParamsNames =service("mmap","array2jsArg",array($this->flashParamsNames));
			$flashParamsValues =service("mmap","array2jsArg",array($this->flashParamsValues));
		}else{
			$flashParamsNames = '';
			$flashParamsValues ='';
		}
		$widgetsparams = array(
			'src' => $this->src,
			'visible' => $this->visible,
			'width' => $this->width,
			'height' => $this->height,
			'flashParamsNames' => $flashParamsNames,
			'flashParamsValues'=>$flashParamsValues
		);		
		$widgetsparams = service("mmap","array2js",array($widgetsparams));
		
		$myFlash = array(
			'name' => $this->name,
			'x' => $this->x,
			'y' => $this->y,
			'horiz' => $this->horiz,
			'vert' => $this->vert,
			'father' => $this->father,
			'widgetname' => 'Flash',
			'params' => $widgetsparams,
			'center' => $this->cent
		);
		service('eyex','createWidget',$myFlash);
		$this->showed=1;
		if($noserialize == 0) {
			reqLib('eyeWidgets','serialize',array($this));
		}
	}
	
		
	//event handling
	function addEvent($eventName,$eventFunc,$args='') {
		global $myPid;
		$myname = $myPid.'_'.$this->name.'_Container';
		if($this->showed == 0) {
			$this->show();
		}		
		service('eyex','addEvent',array('name' => $myname, 'action' => $eventFunc, 'event' => $eventName,'args'=>$args));
	}
	
	function setCss($params) {
		global $myPid;
		if(is_array($params)) {
			foreach($params as $key => $value) {
				service('eyex','updateCss',array('name' => $myPid.'_'.$this->name,'property' => $key,'value' => $value));
			}
		}
	}
	
	//set properties functions.
	
	function hide() {
		global $myPid;
		$this->visible = 0;
		service('eyex','rawjs',array('js' => 'document.getElementById("'.$myPid.'_'.$this->name.'").style.visibility=visible'));
	}
	
	function unhide() {
		global $myPid;
		$this->visible = 1;
		service('eyex','rawjs',array('js' => 'document.getElementById("'.$myPid.'_'.$this->name.'").style.visibility=hidden'));
	}
	
	function setSrc($newUrl) {
		global $myPid;
		$this->src = $newUrl;
		service('eyex','rawjs',array('js' => 'document.getElementById("'.$myPid.'_'.$this->name.'").src="'.$newUrl.'"'));
	}
	
	function validSrc($url) {
		$extension = substr($url, -4);
		
		return ($extension === ".swf");
	}
	
	function setWidth($width) {
		global $myPid;
		$this->width = intval($width);
		service('eyex','rawjs',array('js' => 'document.getElementById("'.$myPid.'_'.$this->name.'_Container").style.width="'.$this->width.'px";'));
		service('eyex','rawjs',array('js' => 'document.getElementById("'.$myPid.'_'.$this->name.'").style.width="'.$this->width.'px";'));
	}
	
	function setHeight($height) {
		global $myPid;
		$this->height = intval($height);
		service('eyex','rawjs',array('js' => 'document.getElementById("'.$myPid.'_'.$this->name.'").style.height="'.$this->height.'px";'));
		service('eyex','rawjs',array('js' => 'document.getElementById("'.$myPid.'_'.$this->name.'_Container").style.height="'.$this->height.'px";'));
	}
	
	function setX($x) {
		global $myPid;
		$this->x = intval($x);
		service('eyex','rawjs',array('js' => 'document.getElementById("'.$myPid.'_'.$this->name.'_Container").style.left="'.$this->x.'px";'));
	}
	
	function setY($y) {
		global $myPid;
		$this->y = intval($y);
		service('eyex','rawjs',array('js' => 'document.getElementById("'.$myPid.'_'.$this->name.'_Container").style.top="'.$this->y.'px";'));
	}
}

?>
