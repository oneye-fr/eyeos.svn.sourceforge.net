<?php
/*
                                  ____   _____ 
                                 / __ \ / ____|
                  ___ _   _  ___| |  | | (___  
                 / _ \ | | |/ _ \ |  | |\___ \ 
                |  __/ |_| |  __/ |__| |____) |
                 \___|\__, |\___|\____/|_____/ 
                       __/ |                   
                      |___/              1.6

                     Web Operating System
                           eyeOS.org

             eyeOS Engineering Team - eyeOS.org/whoarewe

     eyeOS is released under the GNU Affero General Public License Version 3 (AGPL3)
            provided with this release in license.txt
             or via web at gnu.org/licenses/agpl-3.0.txt

        Copyright 2005-2008 eyeOS Team (team@eyeos.org)

*/

/**
* Loads the desired language file of the specified application.
* 
* @param $params array(app)
* @param $app Name of the application.
* @return If the application or the user's language file cannot be
*	found, returns false.
* @date 2008/03/11
*/
function lib_i18n_loadLang($params) {
	if(!isset($params[0])){
		errorCodes('setErrorCode',array(INCORRECT_PARAMS));
		return false;
	}	
	$app = utf8_basename($params[0]);
	
	if(isset($_SESSION['lang'])){
		$lang = $_SESSION['lang'];
		//loading the global strings
		if(file_exists(EYE_ROOT.'/i18n/'.$lang.EYE_CODE_EXTENSION) &&
		is_readable(EYE_ROOT.'/i18n/'.$lang.EYE_CODE_EXTENSION)) {
			include_once(EYE_ROOT.'/i18n/'.$lang.EYE_CODE_EXTENSION);
		}
		if(file_exists(EYE_ROOT.'/'.APP_DIR.'/'.$app.'/lang/'.$lang.EYE_CODE_EXTENSION) &&
		is_readable(EYE_ROOT.'/'.APP_DIR.'/'.$app.'/lang/'.$lang.EYE_CODE_EXTENSION)) {
			include_once(EYE_ROOT.'/'.APP_DIR.'/'.$app.'/lang/'.$lang.EYE_CODE_EXTENSION);
		}
		return true;
	}else{
		return false;		
	}	
}

/**
* Returns a string translated in the eyeOS' language of the user.
* 
* @param $params array(string,[tokens])
* @param $string Native string of an application to translate.
* @param $tokens Indexed array containing the value of the tokens appearing
*	on  the string.
* @return Returns the translated string into the user's eyeOS
*	language.
* @date 2008/03/11
*/
function lib_i18n_translate($params) {
	if(!isset($params[0])){
		errorCodes('setErrorCode',array(INCORRECT_PARAMS));
		return false;
	}
	
	$string = $params[0];
	if(isset($params[1])) {
		$tokens = $params[1];
	} else {
		$tokens=null;
	}
	//todo: parse tokens
	global $language;
	if(isset($language[$string]) && !$tokens) {
		return $language[$string];
	}else if(isset($language['share'][$string]) && !$tokens){
		return $language['share'][$string];
	}else {
		if(isset($language[$string])) {
			$string = $language[$string];
		}else if(isset($language['share'][$string])){
			$string = $language['share'][$string];
		}
		if(isset($tokens) && !empty($tokens)) {
			$pieces = explode("%s",$string);
			$string = "";
			$i = 0;
			foreach($pieces as $value) {
				$string .= $pieces[$i];
				if(isset($tokens[$i])) {
					$string .= $tokens[$i];
				}
				$i++;
			}
		} 
		return $string;
	}
}

/**
* Retrieves the eyeOS language of the user.
* 
* @return Returns an string with the language of the user's eyeOS
*	session.
* @date 2008/03/11
*/
function lib_i18n_getLang($params=null) {
	return $_SESSION['lang'];
}

/**
* Sets the eyeOS language of the user.
* 
* @param $params array(lang)
* @param $lang String containing the international code of the language to
*	be set as the user's language.
* @return If the function succeeds, it does not return any value.
*	Else, if the new language is not specified, return false.
* @date 2008/03/11
*/
function lib_i18n_setLang($params) {
	if(!isset($params[0])){
		errorCodes('setErrorCode',array(INCORRECT_PARAMS));
		return false;
	}
	$lang = utf8_basename($params[0]);
	$_SESSION['lang'] = $lang;
}

?>