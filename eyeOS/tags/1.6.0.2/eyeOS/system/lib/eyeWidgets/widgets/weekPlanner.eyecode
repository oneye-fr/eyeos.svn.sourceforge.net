<?php
/*
                                  ____   _____ 
                                 / __ \ / ____|
                  ___ _   _  ___| |  | | (___  
                 / _ \ | | |/ _ \ |  | |\___ \ 
                |  __/ |_| |  __/ |__| |____) |
                 \___|\__, |\___|\____/|_____/ 
                       __/ |                   
                      |___/              1.6

                     Web Operating System
                           eyeOS.org

             eyeOS Engineering Team - eyeOS.org/whoarewe

     eyeOS is released under the GNU Affero General Public License Version 3 (AGPL3)
            provided with this release in license.txt
             or via web at gnu.org/licenses/agpl-3.0.txt

        Copyright 2005-2008 eyeOS Team (team@eyeos.org)         
*/
/*
	Box widget abstraction
*/

class weekPlanner {
	//pid controller
	
	var $creatorPid;
	//global widgets options without default
	var $name;
	var $father;

	//generic widget options with default
	var $x;
	var $y;
	var $horiz;
	var $vert;
	var $cent;
	
	var $showed = 0;
	var $dayFrom;
	var $dayEven;
	var $hourFrom;
	var $hourEven;
	var $dateString;
	//custom widget options
	var $title;
	var $width;	
	var $pid;
	var $rowHeight;
	var $parts;
	var $startMonday;
	var $date;
	var $weekDays;
	var $selectedCalendar;
	var $defaultEvenText;
	var $calendarsText;
	var $notes = array();
	function weekPlanner($params) {	
		global $myPid;
		$this->creatorPid = $myPid;
		//generic widget options without default
		$this->name = $params['name'];
		$this->father = $params['father'];

		//generic widget options with default
		isset($params['horiz']) ? $this->horiz = $params['horiz'] : $this->horiz = 0;
		isset($params['vert']) ? $this->vert = $params['vert'] : $this->vert = 0;
		isset($params['cent']) ? $this->cent = $params['cent'] : $this->cent = 0;
		isset($params['x']) ? $this->x = $params['x'] : $this->x = 0;
		isset($params['y']) ? $this->y = $params['y'] : $this->y = 0;
		isset($params['dayFrom']) ? $this->dayFrom = $params['dayFrom'] : $this->dayFrom = 0;
		isset($params['dayEven']) ? $this->dayEven = $params['dayEven'] : $this->dayEven = 7;
		isset($params['hourFrom']) ? $this->hourFrom = $params['hourFrom'] : $this->hourFrom = 0;
		isset($params['hourEven']) ? $this->hourEven = $params['hourEven'] : $this->hourEven = 23;		

		//especific window options
		isset($params['width']) ? $this->width = $params['width'] : $this->width = null;
		isset($params['pid']) ? $this->pid = $params['pid'] : $this->pid = $myPid;
		isset($params['hourWidth']) ? $this->hourWidth = $params['hourWidth'] : $this->hourWidth = 45;
		isset($params['rowHeight']) ? $this->rowHeight = $params['rowHeight'] : $this->rowHeight = 50;
		isset($params['i18n']) ? $this->i18n = $params['i18n'] : $this->i18n = 'en_En';
		isset($params['startMonday']) ? $this->startMonday = $params['startMonday'] : $this->startMonday = 1;
		isset($params['parts']) ? $this->parts = $params['parts'] : $this->parts = 4;
		isset($params['date']) ? $this->date = $params['date'] : $this->date = time();
		isset($params['selectedCalendar']) ? $this->selectedCalendar = $params['selectedCalendar'] : $this->selectedCalendar = 'noCalendar';
		isset($params['defaultEvenText']) ? $this->defaultEvenText = $params['defaultEvenText'] : $this->defaultEvenText = 'Add your event!';
		isset($params['calendarsText']) ? $this->calendarsText = $params['calendarsText'] : $this->calendarsText = 'Calendars';
			
		/*if($this->dayEven == $this->dayFrom+1 && $this->startMonday == 1 && $this->dayFrom != 0){			
			$this->dayFrom = $this->dayFrom -1;
			$this->dayEven = $this->dayEven -1;			
		}*/
		
		//Getting week day names
		$this->getNames();
	}
	
	function show() {
		foreach($this->weekDays as $day){
			$weekDays[] = $day;			
		}
		$defaultEvenText = i18n('translate',array($this->defaultEvenText));
		$calendarsText = i18n('translate',array($this->calendarsText));
		$weekDaysJs = service("mmap","array2jsArg",array($weekDays));
		$widgetsparams = array(
			'pid' => $this->pid,
			'hourWidth' => $this->hourWidth,
			'rowHeight' => $this->rowHeight,
			'width' => $this->width,
			'title' => $this->title,
			'fixed' => $this->fixed,
			'dayFrom' => $this->dayFrom,
			'dayEven' => $this->dayEven,
			'hourFrom' => $this->hourFrom,
			'hourEven' => $this->hourEven,
			'weekDays' =>$weekDaysJs,
			'parts'=>$this->parts,
			'startMonday'=>$this->startMonday,
			'defaultEvenText'=>$defaultEvenText,
			'calendarsText'=>$calendarsText,
			'selectedCalendar'=>$this->selectedCalendar
		);		
		$widgetsparams = service("mmap","array2js",array($widgetsparams));
		
		$week = array(
			'name' => $this->name,
			'x' => $this->x,
			'y' => $this->y,
			'horiz' => $this->horiz,
			'vert' => $this->vert,
			'father' => $this->father,
			'widgetname' => 'weekPlanner',
			'params' => $widgetsparams,
			'center' => $this->cent
		);
		$this->showed=1;				
		service('eyex','createWidget',$week);
		reqLib('eyeWidgets','serialize',array($this));
	}			
	
	function delNote($id)
	{
		global $myPid;
		service('eyex','rawjs',array('js' => "weekPlanner1.delCalendarNote($id);"));		
	}
	
	function changeNoteId($oldId,$id)
	{
		service('eyex','rawjs',array('js' => "weekPlanner1.changeCalendarNoteId($oldId,$id);"));	
	}
	
	function setWidth($width) {
		global $myPid;
		$this->width = intval($width);
		service('eyex','rawjs',array('js' => 'document.getElementById("'.$myPid.'_daysBase").style.width="'.$this->width.'px";'));
		service('eyex','rawjs',array('js' => 'onResizeEyeCalendar('.$myPid.');'));
	}
	
	function setHeight($height) {
		global $myPid;
		$this->height = intval($height);
		service('eyex','rawjs',array('js' => 'document.getElementById("'.$myPid.'_'.$this->name.'").style.height="'.$this->height.'px";'));
		service('eyex','rawjs',array('js' => 'document.getElementById("'.$myPid.'_'.$this->name.'_Container").style.height="'.$this->height.'px";'));
	}
		
	function addNotes($notes){		
		global $myPid;		
		foreach($notes as $note){
			$note = $note['note'][0];
			$day = $note['wday'][0];			
			$hourFrom = $note['hourFrom'][0]; 
			$hourEven = $note['hourEven'][0];
			$minFrom = $note['minFrom'][0];
			$minEven = $note['minEven'][0];
			$calendar = $note['calendar'][0];
			$event = base64_decode($note['title'][0]);
			if(utf8_strlen($event) < 1){
				$event = ' ';
			}			
			$index = count($this->notes);
			$this->notes[$index] = $note['dateInt'][0];

			if($this->startMonday == 1 && $this->dayFrom == 0 && $this->dayEven != $this->dayFrom+1){
				if($day != 0 && $day != 6){
					$day --;
				}else if($day == 0){
					$day = 6;
				}else if($day == 6){
					$day = 5;
				}
			}
			$tokens = array($event,$calendar);
			service('eyex','runjs',array('js' => 'onAddNoteCalendar('.$myPid.','.$day.','.$hourFrom.','.$hourEven.','.$minFrom.','.$minEven.','.$index.', %s , %s );','tokens'=>$tokens));
		}
	}	
	function addCalendars($myCalendars){
		global $myPid;		
		if(!is_array($myCalendars)){
			return false;
		}
		foreach($myCalendars['calendars'][0]['calendarInfo'] as $calendarInfo){
			$name = $calendarInfo['name'][0];
			$num = $calendarInfo['num'][0];	
			$show = $calendarInfo['show'][0];	
			$tokens[0] = $name;
			service('eyex','runjs',array('js' => 'onAddCalendar('.$myPid.', %s ,'.$num.','.$show.');','tokens'=>$tokens));
		}
	}
	function getNames(){
		$daysData = $this->getDays();		
		$this->weekDays = array(
			i18n('translate',array('Sun')),
			i18n('translate',array('Mon')),
			i18n('translate',array('Tue')),
			i18n('translate',array('Wed')),
			i18n('translate',array('Thu')),
			i18n('translate',array('Fri')),
			i18n('translate',array('Sat'))
		);
		
		$diff = $this->dayEven - $this->dayFrom;
		if($this->startMonday == 1 && $this->dayFrom == 0 && $diff > 1){
			$sun = $this->weekDays[0];
			array_shift($this->weekDays);	
			$this->weekDays[] = $sun;			
		}
		
		$numDays = $this->dayEven - $this->dayFrom;		
		for($h=$this->dayFrom;$h<$this->dayEven;$h++){
			if($daysData['month'][$h] < 10){
				$daysData['month'][$h] = '0'.$daysData['month'][$h];	
			}
			if($daysData['nums'][$h] < 10){
				$daysData['nums'][$h] = '0'.$daysData['nums'][$h];	
			}
			$this->weekDays[$h] .= ' '.$daysData['month'][$h].'/'.$daysData['nums'][$h];			
		}
		unset($daysData);
	}	
	function updateDate($date){
		global $myPid;
		$this->date = $date;
		$this->getNames();
		
		$weekDaysJs = service("mmap","array2jsArg",array($this->weekDays));
		service('eyex','rawjs',array('js' => 'var weekDaysJs = getArrayArg(\''.$weekDaysJs.'\');onChangeDateCalendar('.$myPid.',weekDaysJs,'.$this->dayFrom.','.$this->dayEven.');'));
	}
	function cleanNotes(){
		global $myPid;
		service('eyex','rawjs',array('js' => 'onCleanNotesCalendar('.$myPid.');'));
	}
	function cleanCalendars(){
		global $myPid;
		service('eyex','rawjs',array('js' => 'onCleanCalendars('.$myPid.');'));
	}
	function hiddenNotes($num){	
		global $myPid;
		service('eyex','rawjs',array('js' => 'onHiddenNotesCalendar('.$myPid.','.$num.');'));
	}
	function showNotes($num){
		global $myPid;
		service('eyex','rawjs',array('js' => 'onShowNotesCalendar('.$myPid.','.$num.');'));
	}
	function deleteNote($id){
		global $myPid;
		service('eyex','rawjs',array('js' => 'onDeleteNote('.$myPid.','.$id.');'));
	}
	function deleteCalendarNotes($num){
		global $myPid;
		service('eyex','rawjs',array('js' => 'onDeleteCalendarNotes('.$myPid.','.$num.');'));
	}
	function selectCalendar($num){
		global $myPid;
		service('eyex','rawjs',array('js' => 'onSelectCalendar('.$myPid.','.$num.');'));
	}
	function getDays(){
		$date = getdate($this->date);				
		//Each month with the days
		$monthMaxDay = array(1=>31,2=>28,3=>31,4=>30,5=>31,6=>30,7=>31,8=>31,9=>30,10=>31,11=>30,12=>31);
		//If is a "----" year
		if(is_int($date['year']/4) === true || is_int($date['year']/400)){
			$monthMaxDay[2] = 29;				
		}
		
		//Adding the month and day number
		$weekDay = $date['wday'];
		$monthDay = $date['mday'];
		$month = $date['mon'];
		$year = $date['year'];		
		$monthDay = $monthDay-$weekDay;
		$monthDay = $monthDay + $this->dayFrom;
		
		if($monthDay > $monthMaxDay[$month]){
			$monthDay = $monthDay - $monthMaxDay[$month];
			if($month+1 > 12){
				$month = 1;
				$year++;
			}else{
				$month++;
			}
		}else if($monthDay < 1){
			$monthDay = $monthDay + $monthMaxDay[$month];
			if($month-1 < 1){
				$year--;
				$month = 12;
			}else{
				$month--;
			}
		}
		
		$diff = $this->dayEven - $this->dayFrom;
		if($this->startMonday == 1 && $this->dayFrom == 0 && $diff > 1){
			$monthDay++;			
		}
		
		$daysData = array();		
		for($h=$this->dayFrom;$h<$this->dayEven;$h++){
			if($monthDay > $monthMaxDay[$month]){
				$monthDay = 1;
				if($month+1 > 12){
					$month = 1;
					$year++;
				}else{
					$month++;	
				}				
			}
			if($monthDay < 1){
				if($month-1 < 1){
					$month = 12;
					$year--;
				}else{
					$month--;	
				}							
				$monthDay = $monthMaxDay[$month];				
			}
			$daysData['nums'][$h] = $monthDay;
			$daysData['month'][$h] = $month;
			$daysData['year'][$h] = $year;
			$monthDay++;			
		}
		//Filling the weekday position for each day
		if($this->startMonday == 1 && $this->dayFrom == 0 && $this->dayEven != $this->dayFrom+1){
			$daysData['wday'][0] = 1;//monday
			$daysData['wday'][1] = 2;//Tues...
			$daysData['wday'][2] = 3;
			$daysData['wday'][3] = 4;
			$daysData['wday'][4] = 5;
			$daysData['wday'][5] = 6;//Saturday
			$daysData['wday'][6] = 0;//Sunday
		}else{
			$daysData['wday'][0] = 0;//Sunday
			$daysData['wday'][1] = 1;//monday
			$daysData['wday'][2] = 2;
			$daysData['wday'][3] = 3;
			$daysData['wday'][4] = 4;
			$daysData['wday'][5] = 5;
			$daysData['wday'][6] = 6;//Saturday
		}
		return $daysData;
	}
	function killme() {
		global $myPid;		
		service('eyex','rawjs',array('js' => 'var removeMe = document.getElementById("'.$myPid.'_hoursBase");
											removeMe.parentNode.removeChild(removeMe);'));
		service('eyex','rawjs',array('js' => 'var removeMe = document.getElementById("'.$myPid.'_daysBase");
											removeMe.parentNode.removeChild(removeMe);'));
		service('eyex','rawjs',array('js' => 'var removeMe = document.getElementById("'.$myPid.'_calendarsEntryContainer");
											removeMe.parentNode.removeChild(removeMe);'));
		unset($_SESSION[WTABLE][$myPid][$this->name]);
	}
}
?>
