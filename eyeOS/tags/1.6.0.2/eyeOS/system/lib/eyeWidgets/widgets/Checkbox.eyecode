<?php
/*
                                  ____   _____ 
                                 / __ \ / ____|
                  ___ _   _  ___| |  | | (___  
                 / _ \ | | |/ _ \ |  | |\___ \ 
                |  __/ |_| |  __/ |__| |____) |
                 \___|\__, |\___|\____/|_____/ 
                       __/ |                   
                      |___/              1.6

                     Web Operating System
                           eyeOS.org

             eyeOS Engineering Team - eyeOS.org/whoarewe

     eyeOS is released under the GNU Affero General Public License Version 3 (AGPL3)
            provided with this release in license.txt
             or via web at gnu.org/licenses/agpl-3.0.txt

        Copyright 2005-2008 eyeOS Team (team@eyeos.org)         
*/
/*
	Checkbox widget abstraction
*/

class Checkbox {
	//pid controller
	
	var $creatorPid;
	
	//global widgets options without default
	var $name;
	var $father;
	
	//global widget options with default
	var $x;
	var $y;
	var $horiz;
	var $vert;
	var $cent;
	
	var $showed = 0;
	
	//custom widget options
	var $enabled;
	var $visible;
	var $text;
	var $tokens;
	var $checked;
	var $value;

	function Checkbox($params) {
		global $myPid;
		$this->creatorPid = $myPid;
		//generic widget options without default
		$this->name = $params['name'];
		$this->father = $params['father'];		

		//generic widget options with default
		isset($params['horiz']) ? $this->horiz = $params['horiz'] : $this->horiz = 0;
		isset($params['vert']) ? $this->vert = $params['vert'] : $this->vert = 0;
		isset($params['x']) ? $this->x = $params['x'] : $this->x = 10;
		isset($params['y']) ? $this->y = $params['y'] : $this->y = 10;
		isset($params['cent']) ? $this->cent = $params['cent'] : $this->cent = 0;
		
		//especific button options		
		isset($params['enabled']) ? $this->enabled = $params['enabled'] : $this->enabled = 1;
		isset($params['visible']) ? $this->visible = $params['visible'] : $this->visible = 1;
		isset($params['text']) ? $this->text = $params['text'] : $this->text = $this->name;
		isset($params['tokens']) ? $this->tokens = $params['tokens'] : $this->tokens = 0;
		isset($params['checked']) ? $this->checked = $params['checked'] : $this->checked = 0;
	}
	

	function show($noserialize=0) {
		$eventString = "";
		if(is_array($this->events)) {
			foreach($this->events as $key => $value) {
				$eventString .= $key.'="'.$value.'" ';
			}
		}
		$this->text = i18n('translate',array($this->text,$this->tokens));
		$this->text = $this->text;
		$widgetsparams = array(			
			'enabled' => $this->enabled,			
			'visible' => $this->visible,
			'text' => $this->text,			
			'checked' => $this->checked,
		);
		$widgetsparams = service("mmap","array2js",array($widgetsparams));
		
		$myCheckbox = array(
			'name' => $this->name,
			'father' => $this->father,
			'horiz' => $this->horiz,
			'vert' => $this->vert,
			'x' => $this->x,
			'y' => $this->y,
			'center' => $this->cent,
			'widgetname' => 'Checkbox',
			'params' => $widgetsparams
		);
		service('eyex','createWidget',$myCheckbox);
		$this->showed=1;
		if($noserialize == 0) {
			reqLib('eyeWidgets','serialize',array($this));
		}
	}
	
		
	//event handling
	function addEvent($eventName,$eventFunc,$args="") {
		global $myPid;
		$name = $myPid.'_'.$this->name;
		if($this->showed == 0) {
			$this->show();
		}
		service('eyex','addEvent',array('name' => $name, 'action' => $eventFunc, 'event' => $eventName,'args'=>$args));
	}
	
	function setCss($params) {
		global $myPid;
		if(is_array($params)) {
			foreach($params as $key => $value) {
				service('eyex','updateCss',array('name' => $myPid.'_'.$this->name,'property' => $key,'value' => $value));
			}
		}
	}
	

//set properties functions
	function disable() {
		global $myPid;
		$this->enabled=0;
		service('eyex','rawjs',array('js' => 'document.getElementById("'.$myPid.'_'.$this->name.'").disabled=true'));
	}
	
	function enable() {
		global $myPid;
		$this->enabled=1;
		service('eyex','rawjs',array('js' => 'document.getElementById("'.$myPid.'_'.$this->name.'").disabled=false'));
	}
	
	function hide() {
		global $myPid;
		$this->visible = 0;
		service('eyex','rawjs',array('js' => 'document.getElementById("'.$myPid.'_'.$this->name.'_Container").style.display="none"'));
	}
	
	function unhide() {
		global $myPid;
		$this->visible = 1;
		service('eyex','rawjs',array('js' => 'document.getElementById("'.$myPid.'_'.$this->name.'_Container").style.display="block"'));
	}
		
	function check() {
		global $myPid;
		$this->checked = 1;
		service('eyex','rawjs',array('js' => 'document.getElementById("'.$myPid.'_'.$this->name.'").checked=true'));		
	}
	
	function uncheck() {
		global $myPid;
		$this->checked = 0;
		service('eyex','rawjs',array('js' => 'document.getElementById("'.$myPid.'_'.$this->name.'").checked=false'));
	}
	
//friend functions	
	function getSyncString() {
		global $myPid;
		return "eyeParam('$this->name',document.getElementById('$myPid".'_'."$this->name').checked)";
	}
	
	function focus() {
		global $myPid;
		service('eyex','rawjs',array('js' => 'document.getElementById("'.$myPid.'_'.$this->name.'").focus();'));
	}
	
	function setX($x) {
		global $myPid;
		$this->x = intval($x);
		service('eyex','rawjs',array('js' => 'document.getElementById("'.$myPid.'_'.$this->name.'_Container").style.left="'.$this->x.'px";'));
	}
	
	function setY($y) {
		global $myPid;
		$this->y = intval($y);
		service('eyex','rawjs',array('js' => 'document.getElementById("'.$myPid.'_'.$this->name.'_Container").style.top="'.$this->y.'px";'));
	}
	
	function setValue($check) {
		if($check == 'true') {
			$this->checked = 1;
		} else {
			$this->checked = 0;
		}	
	}
	
	function remove() {
		global $myPid;
		$name = $this->name.'_Container';
		service('eyex','removeWidget',array('name'=>$name));
		eyeWidgets('singleUnserialize',array($this->name));
	}
	
}
?>
