<?php
/* 
                                  ____   _____ 
                                 / __ \ / ____|
                  ___ _   _  ___| |  | | (___  
                 / _ \ | | |/ _ \ |  | |\___ \ 
                |  __/ |_| |  __/ |__| |____) |
                 \___|\__, |\___|\____/|_____/ 
                       __/ |                   
                      |___/              1.7

                     Web Operating System
                           eyeOS.org

             eyeOS Engineering Team - eyeOS.org/whoarewe

     eyeOS is released under the GNU Affero General Public License Version 3 (AGPL3)
            provided with this release in license.txt
             or via web at gnu.org/licenses/agpl-3.0.txt

        Copyright 2005-2008 eyeOS Team (team@eyeos.org)
*/

function restoreTrash_on_Message($params="") {
	reqLib('eyeWidgets','updateContent',$params);
}

function restoreTrash_on_yes($params=null) {
	$myUserDir = service('um','getCurrentUserDir').TRASH_USER_DIR.'/';
	$file =$GLOBALS['nfFile']->text;
	$myArray = reqLib('eyeXML','getXMLfile',array($myUserDir.$file));
	$myArray = $myArray['eyeTrash'][0];
    $file = utf8_substr($file,0,utf8_strrpos($file,'.'));
    if($myArray['type'][0] == 'dir') {
    	if (vfs('real_move',array($myUserDir . $file,$myArray['restorePoint'][0]))) {
			vfs('real_delete',array($myUserDir . '/' . $file . '.' . EYEOS_TRASH_EXT));
		} else {
			$url = um('getCurrentUserDir') . FILES_USER_DIR . '/' . utf8_basename($myArray['restorePoint'][0]) . '/';
			if (vfs('real_move',array($myUserDir . $file . '.' . EYEOS_INFO_EXT,$url))) {
				vfs('real_delete',array($myUserDir . '/' . $file . '.' . EYEOS_TRASH_EXT));
				eyex('messageBox',array('content' => 'The file has been restored to the home folder!'));
			} else {
				eyex('messageBox',array('content' => 'The file could not be restored!'));
			}
		}
		
    } else {
		if (vfs('real_move',array($myUserDir . $file . '.' . EYEOS_INFO_EXT,$myArray['restorePoint'][0] . '.' . EYEOS_INFO_EXT))) {
			vfs('real_move',array($myUserDir . $file . '.' . EYEOS_FILE_EXT,$myArray['restorePoint'][0] . '.' . EYEOS_FILE_EXT));
			vfs('real_delete',array($myUserDir.$file.'.'.EYEOS_TRASH_EXT));
		} else {
			$url = um('getCurrentUserDir') . FILES_USER_DIR . '/' . utf8_basename($myArray['restorePoint'][0]);
			if (vfs('real_move',array($myUserDir . $file . '.' . EYEOS_INFO_EXT,$url . '.' . EYEOS_INFO_EXT))) {
				vfs('real_move',array($myUserDir . $file . '.' . EYEOS_FILE_EXT,$url . '.' . EYEOS_FILE_EXT));
				vfs('real_delete',array($myUserDir.$file.'.'.EYEOS_TRASH_EXT));
				eyex('messageBox',array('content' => 'The folder has been restored to the home folder!'));
			} else {
				eyex('messageBox',array('content' => 'The folder could not be restored!'));
			}
		}
	}
	$callback = $GLOBALS['nfCallback']->text;
	if($callback) {
		service('eyex','rawjs',array('js'=>$callback));
	}
	$icon = 'unknown';
	service('eyex','messageBox',array('content'=>'Restore completed successfully.'));
	proc('end');
}

function restoreTrash_on_no($params=null) {
	proc('end');	
}

function restoreTrash_on_Close(){
	proc('end');
}