<?php
/*
                                  ____   _____ 
                                 / __ \ / ____|
                  ___ _   _  ___| |  | | (___  
                 / _ \ | | |/ _ \ |  | |\___ \ 
                |  __/ |_| |  __/ |__| |____) |
                 \___|\__, |\___|\____/|_____/ 
                       __/ |                   
                      |___/              1.7

                     Web Operating System
                           eyeOS.org

             eyeOS Engineering Team - eyeOS.org/whoarewe

     eyeOS is released under the GNU Affero General Public License Version 3 (AGPL3)
            provided with this release in license.txt
             or via web at gnu.org/licenses/agpl-3.0.txt

        Copyright 2005-2008 eyeOS Team (team@eyeos.org)

*/

/**
* Ciphers a string with a specified encryption algorithm.
* 
* @param $params array(data,key,cipher)
* @param $data String to crypt.
* @param $key Key needed to crypt the string.
* @param $cipher Ciphering algorithm in which to encrypt the data. The
*	supported algorithms are rc4 and xxtea for eyeOS 1.2.
* @return If the function succeeds, returns the crypted string. Else,
*	if the specified algorithm is not present in the system,
*	returns false.
* @date 2008/03/11
*/
function lib_eyeCrypt_crypt($params) {
	
	if($params == null || count($params) < 3 || !isset($params['data']) || !isset($params['key']) || !isset($params['cipher']) ){
		reqLib('errorCodes','setErrorCode',array(INCORRECT_PARAMS));
		return false;
	}
	
	$str = $params['data'];
	$key = $params['key'];
	$cip = utf8_basename($params['cipher']);
	
	if(file_exists(EYE_ROOT.'/'.SYSTEM_DIR.'/'.LIB_DIR.'/eyeCrypt/lib/'.$cip.'.eyecode')) {
		include_once(EYE_ROOT.'/'.SYSTEM_DIR.'/'.LIB_DIR.'/eyeCrypt/lib/'.$cip.'.eyecode');
		if(function_exists('crypt_'.$cip.'_crypt')) {
			return call_user_func('crypt_'.$cip.'_crypt',array($str,$key));	
		}
	}
	return false;
}

/**
* Decrypts a string with a given key.
* 
* @param $params array(data,key,cipher)
* @param $data String to decrypt.
* @param $key Key needed for decrypting the string.
* @param $cipher Ciphering algorithm needed to decrypt the data. The
*	supported algorithms are rc4 and xxtea for eyeOS 1.2.
* @return If the function succeeds, returns the decrypted string.
*	Else, if the specified algorithm is not present in the
*	system, returns false.
* @date 2008/03/11
*/
function lib_eyeCrypt_decrypt($params) {
	
	if($params == null || count($params) < 3 || !isset($params['data']) || !isset($params['key']) || !isset($params['cipher']) ){
		reqLib('errorCodes','setErrorCode',array(INCORRECT_PARAMS));
		return false;
	}
	
	$str = $params['data'];
	$key = $params['key'];
	$cip = utf8_basename($params['cipher']);
	
	if(file_exists(EYE_ROOT.'/'.SYSTEM_DIR.'/'.LIB_DIR.'/eyeCrypt/lib/'.$cip.'.eyecode')) {
		include_once(EYE_ROOT.'/'.SYSTEM_DIR.'/'.LIB_DIR.'/eyeCrypt/lib/'.$cip.'.eyecode');
		if(function_exists('crypt_'.$cip.'_crypt')) {
			return call_user_func('crypt_'.$cip.'_decrypt',array($str,$key));	
		}
	}
	return false;
}

?>