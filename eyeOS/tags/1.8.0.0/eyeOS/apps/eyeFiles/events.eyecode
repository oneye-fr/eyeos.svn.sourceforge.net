<?php
/*
                                  ____   _____
                                 / __ \ / ____|
                  ___ _   _  ___| |  | | (___
                 / _ \ | | |/ _ \ |  | |\___ \
                |  __/ |_| |  __/ |__| |____) |
                 \___|\__, |\___|\____/|_____/
                       __/ |
                      |___/              1.8

                     Web Operating System
                           eyeOS.org

             eyeOS Engineering Team - www.eyeos.org/team

     eyeOS is released under the GNU Affero General Public License Version 3 (AGPL3)
            provided with this release in license.txt
             or via web at gnu.org/licenses/agpl-3.0.txt

        Copyright 2005-2009 eyeOS Team (team@eyeos.org)
*/

function eyeFiles_on_Close($params = '') {
	$xml = eyeXML('getXMLconfig',array('eyeFiles','conf.xml'));
	$xml['eyeFiles'][0]['Box'][0] = $GLOBALS['eyeFiles_Hidden_Box']->text;
	if ($GLOBALS['eyeFiles_Box_View_Radio_Details']->checked) {
		$xml['eyeFiles'][0]['View'][0] = 3;
	} elseif ($GLOBALS['eyeFiles_Box_View_Radio_List']->checked) {
		$xml['eyeFiles'][0]['View'][0] = 2;
	} else {
		$xml['eyeFiles'][0]['View'][0] = 1;
	}
	eyeXML('setXMLconfig',array('eyeFiles','conf.xml',$xml));
	proc('end');
}

function eyeFiles_on_Message($params = '') {
	eyeWidgets('updateContent',$params);
}

function eyeFiles_on_Resize($params = '') {
	global $myPid;
	$GLOBALS['eyeFiles_Box_Tree']->setHeight(intval($params['arg'][1]) - 155);
	if (is_object($GLOBALS['eyeFiles_Box_Tree_Tree'])) {
		$GLOBALS['eyeFiles_Box_Tree_Tree']->setHeight($GLOBALS['eyeFiles_Box_Tree']->height - 45);
	}
	$GLOBALS['eyeFiles_Window']->width = $params['arg'][0];
	$GLOBALS['eyeFiles_Window']->height = $params['arg'][1];
	$GLOBALS['eyeFiles_Box_View']->setHeight($GLOBALS['eyeFiles_Box_Tree']->height);
	$GLOBALS['eyeFiles_Box_View_Container2']->setHeight($GLOBALS['eyeFiles_Box_View']->height - 35);
	$GLOBALS['eyeFiles_Box_Actions']->setHeight($GLOBALS['eyeFiles_Box_Tree']->height);
	$GLOBALS['eyeFiles_Box_Actions_menu_files_Container']->setHeight($GLOBALS['eyeFiles_Box_Actions']->height - 35);
	$GLOBALS['eyeFiles_Box_Actions_menu_trash_Container']->setHeight($GLOBALS['eyeFiles_Box_Actions']->height - 35);
	$GLOBALS['eyeFiles_Box_Actions_menu_real_Container']->setHeight($GLOBALS['eyeFiles_Box_Actions']->height - 35);
	$GLOBALS['eyeFiles_Textbox_Path']->setWidth(intval($params['arg'][0]) - $GLOBALS['eyeFiles_Box_Tree']->width - 57);
	$GLOBALS['eyeFiles_Imagebox_Path_Right']->setX($GLOBALS['eyeFiles_Textbox_Path']->x + $GLOBALS['eyeFiles_Textbox_Path']->width);
	$GLOBALS['eyeFiles_Container']->setHeight($GLOBALS['eyeFiles_Box_Tree']->height + 35);
	$GLOBALS['eyeFiles_Container']->setWidth($GLOBALS['eyeFiles_Textbox_Path']->width + 32);
	if ($GLOBALS['eyeFiles_Box_View_Radio_Details']->checked) {
		$GLOBALS['eyeFiles_View_Details_Sortabletable']->setHeight($GLOBALS['eyeFiles_Container']->height - 2);
		$GLOBALS['eyeFiles_View_Details_Sortabletable']->setWidth($GLOBALS['eyeFiles_Container']->width - 2);
	} elseif ($GLOBALS['eyeFiles_Box_View_Radio_List']->checked) {
		eyex('rawjs',array('js' => 'i = 0;
		x = 20;
		y = 20;
		e = xGetElementById("' . $myPid . '_eyeFiles_View_List_Icon_0_Container");
		while (e) {
			xSlideTo("' . $myPid . '_eyeFiles_View_List_Icon_" + i + "_Container",x,y,500);
			y += 30;
			if (xHeight("' . $myPid . '_eyeFiles_Container") - y - 30 < 0) {
				x += 140;
				y = 20;
			}
			i++;
			e = xGetElementById("' . $myPid . '_eyeFiles_View_List_Icon_" + i + "_Container");
		}'));
	} else {
		eyex('rawjs',array('js' => 'i = 0;
		x = 20;
		y = 20;
		e = xGetElementById("' . $myPid . '_eyeFiles_View_Icons_Icon_0_Container");
		while (e) {
			xSlideTo("' . $myPid . '_eyeFiles_View_Icons_Icon_" + i + "_Container",x,y,500);
			x += 88;
			if (xWidth("' . $myPid . '_eyeFiles_Container") - x - 88 < 0) {
				x = 20;
				y += 88;
			}
			i++;
			e = xGetElementById("' . $myPid . '_eyeFiles_View_Icons_Icon_" + i + "_Container");
		}'));
	}
}

function eyeFiles_on_Fullscreen($params = '') {
	global $myPid;
	$GLOBALS['eyeFiles_Window']->setFullScreen();
	if ($GLOBALS['eyeFiles_Window']->fullScreen) {
		$press = 'Press';
	}
	eyex('rawjs',array('js' => 'e = xGetElementById("' . $myPid . '_eyeFiles_Toolbar");
	for (var i = 0; i < e.childNodes.length; i++) {
		if (e.childNodes[i].id == "Fullscreen_Container") {
			e.childNodes[i].className = "blockbarItem' . $press . '_right";
		}
	}'));
}

function eyeFiles_on_Back($params = '') {
	if (utf8_strtolower(utf8_substr($GLOBALS['eyeFiles_Hidden_Path']->text,0,8)) == 'trash://') {
		eyeFiles_on_OpenPath(array('home:///'));
	} else {
		eyeFiles_on_OpenPath(array($GLOBALS['eyeFiles_Hidden_Path']->text . '/..'));
	}
}

function eyeFiles_on_Home($params = '') {
	eyeFiles_on_OpenPath(array('/','home'));
}

function eyeFiles_on_Groups($params = '') {
	eyeFiles_on_OpenPath(array('/','groups'));
}

function eyeFiles_on_Trash($params = '') {
	eyeFiles_on_OpenPath(array('/','trash'));
}

function eyeFiles_on_Users($params = '') {
	eyeFiles_on_OpenPath(array('/','users'));
}

function eyeFiles_on_Real($params = '') {
	eyeFiles_on_OpenPath(array('/','real'));
}

function eyeFiles_on_Upload($params = '') {
	proc('launch',array('eyeUpload',array($GLOBALS['eyeFiles_Hidden_Path']->text)));
}

function eyeFiles_on_NewFolder($params = '') {
	proc('launch',array('eyeMkDir',array($GLOBALS['eyeFiles_Hidden_Path']->text)));
}

function eyeFiles_on_NewFile($params = '') {
	proc('launch',array('newFile',array($GLOBALS['eyeFiles_Hidden_Path']->text)));
}

function eyeFiles_on_Paste($params = '') {
	proc('launch',array('eyePaste',array($GLOBALS['eyeFiles_Hidden_Path']->text)));
}

function eyeFiles_on_EmptyTrash($params = '') {
	proc('launch',array('emptyTrash'));
}

function eyeFiles_on_Help($params = '') {
	proc('launch',array('eyeHelp','eyeFiles'));
}

function eyeFiles_on_Action($params = '') {
	global $myPid;
	$path = eyeFiles('cleanPath',array($GLOBALS['eyeFiles_Hidden_Path']->text));
	if ($params['File'][0]) {
		if ($params['Action'][0] == 'launch') {
			$xml = eyeXML('getXMLfile',array($path[0] . '/' . $params['File'][0]));
			if (strrchr($xml['eyeLink'][0]['content'][0],'.') == '.app') {
				proc('launch',array(utf8_basename($xml['eyeLink'][0]['content'][0],'.app')));
			} else {
				$file = utf8_basename($xml['eyeLink'][0]['content'][0]);
				$path = eyeFiles('cleanPath',array(utf8_substr(utf8_trim($xml['eyeLink'][0]['content'][0],'/\\'),0,- utf8_strlen($file))));
				$path[0] .= '/' . $file;
				if (vfs('isdir',array($path[0]))) {
					proc('launch',array('eyeFiles',array($path[2] . '/' . $file,$path[1])));
				} else {
					$xml = getConfig('filetypes',utf8_strtolower(utf8_substr(strrchr($path[0],'.'),1)) . '.xml');
					if ($xml['fileType'][0]['app'][0]) {
						proc('launch',array($xml['fileType'][0]['app'][0],$path[0]));
					} else {
						proc('launch',array('eyeOpen',$path[0]));
					}
				}
			}
		} else {
			proc('launch',array($params['Action'][0],array($path[1] . '://' . $path[2] . '/' . $params['File'][0])));
		}
	} else {
		if ($GLOBALS['eyeFiles_Hidden_Action']->text != '') {
			$father = 'files';
			if ($path[1] == 'trash') {
				$father = 'trash';
			} elseif ($path[1] == 'real') {
				$father = 'real';
			}
			eyex('rawjs',array('js' => 'e = xGetElementById("' . $myPid . '_eyeFiles_Box_Actions_menu_' . $father . '_Container_' . $GLOBALS['eyeFiles_Hidden_Action']->text . '_Container"); e.className = ""; e.style.backgroundColor = "";'));
		}
		$GLOBALS['eyeFiles_Hidden_Action']->setText($params['Action'][0]);
	}
}

function eyeFiles_on_GetThumbnail($params = '') {
	eyeFiles('createThumbnail',array($GLOBALS['eyeFiles_Hidden_Path']->text,$params['File'][0]));
}

function eyeFiles_on_Icon_Clicked($params = '') {
	global $myPid;
	$path = eyeFiles('cleanPath',array($GLOBALS['eyeFiles_Hidden_Path']->text));
	if ($params['arg0'][0]) {
		$file = $params['arg0'][0];
		if ($GLOBALS['eyeFiles_Hidden_Action']->text != '') {
			proc('launch',array($GLOBALS['eyeFiles_Hidden_Action']->text,array($path[1] . '://' . $path[2] . '/' . $params['arg0'][0])));
			$father = 'files';
			if ($path[1] == 'trash') {
				$father = 'trash';
			} elseif ($path[1] == 'real') {
				$father = 'real';
			}
			eyex('rawjs',array('js' => 'e = xGetElementById("' . $myPid . '_eyeFiles_Box_Actions_menu_' . $father . '_Container_' . $GLOBALS['eyeFiles_Hidden_Action']->text . '_Container"); e.className = ""; e.style.backgroundColor = "";'));
			$GLOBALS['eyeFiles_Hidden_Action']->setText('');
			return;
		}
	} else {
		$file = $GLOBALS['eyeFiles_View_Details_Sortabletable']->selected;
	}
	if ($path[1] == 'trash') {
		proc('launch',array('restoreTrash',array($file)));
	} else {
		$path[0] .= '/' . $file;
		if (vfs('isdir',array($path[0]))) {
			eyeFiles_on_OpenPath(array($path[2] . '/' . $file,$path[1]));
		} elseif ($path[1] != 'real') {
			$xml = getConfig('filetypes',utf8_strtolower(utf8_substr(strrchr($path[0],'.'),1)) . '.xml');
			if ($xml['fileType'][0]['app'][0]) {
				proc('launch',array($xml['fileType'][0]['app'][0],$path[0]));
			} else {
				proc('launch',array('eyeOpen',$path[0]));
			}
		}
	}
}

function eyeFiles_on_Icon_Dropped($params = '') {
	if (in_array(utf8_strtolower($params['arg0'][0]),array('file','folder','link'))) {
		proc('launch',array('moveDrag',array($params['arg1'][0],$GLOBALS['eyeFiles_Hidden_Path']->text . '/' . $params['arg2'][0])));
	}
}

function eyeFiles_on_OpenPath($params = '') {
	global $myPid;
	if (isset($params[0])) {
		$path = $params[0];
		$type = $params[1];
	} else {
		$path = $GLOBALS['eyeFiles_Textbox_Path']->text;
		$type = '';
	}
	$path = eyeFiles('cleanPath',array($path,$type));
	$show = $path[2];
	$type = $path[1];
	$path = $path[0];
	
	if ($GLOBALS['eyeFiles_Hidden_Action']->text != '') {
		$father = 'files';
		if ($type == 'trash') {
			$father = 'trash';
		} elseif ($type == 'real') {
			$father = 'real';
		}
		eyex('rawjs',array('js' => 'e = xGetElementById("' . $myPid . '_eyeFiles_Box_Actions_menu_' . $father . '_Container_' . $GLOBALS['eyeFiles_Hidden_Action']->text . '_Container"); e.className = ""; e.style.backgroundColor = "";'));
		$GLOBALS['eyeFiles_Hidden_Action']->setText('');
	}
	if ($type == 'groups') {
		eyex('rawjs',array('js' => 'e = xGetElementById("' . $myPid . '_eyeFiles_Window_Content").style.backgroundImage = "url(index.php?version=' . EXTERN_CACHE_VERSION . '&theme=1&extern=images/apps/eyeFiles/eyegroupsbg.png)";'));
	} else {
		eyex('rawjs',array('js' => 'e = xGetElementById("' . $myPid . '_eyeFiles_Window_Content").style.backgroundImage = "url(index.php?version=' . EXTERN_CACHE_VERSION . '&theme=1&extern=images/apps/eyeFiles/eyefilesbg.png)";'));
	}
	if ($show == '/') {
		$title = i18n('translate',array(ucfirst($type)));
	} else {
		$title = utf8_basename($show);
	}
	$GLOBALS['eyeFiles_Window']->setTitle($title . ' - ' . i18n('translate',array('Files Manager')));
	$GLOBALS['eyeFiles_Textbox_Path']->setText($type . '://' . $show);
	$GLOBALS['eyeFiles_Hidden_Path']->setText($type . '://' . $show);
	$eyeFiles_menus = 1;
	if ($type == 'trash') {
		$GLOBALS['eyeFiles_Box_Actions_menu_files_Container']->hide();
		$GLOBALS['eyeFiles_Box_Actions_menu_trash_Container']->unhide();
		$GLOBALS['eyeFiles_Box_Actions_menu_real_Container']->hide();
		$hide = 'e.childNodes[i].id == "Upload_Container" || e.childNodes[i].id == "NewFolder_Container" || e.childNodes[i].id == "NewFile_Container"';
		$unhide = 'e.childNodes[i].id == "ActionsLine" || e.childNodes[i].id == "EmptyTrash_Container"';
	} elseif ($type == 'groups' && $show == '/' || $type == 'users' && substr_count($show,'/') < 2) {
		$eyeFiles_menus = 0;
		$GLOBALS['eyeFiles_Box_Actions_menu_files_Container']->hide();
		$GLOBALS['eyeFiles_Box_Actions_menu_trash_Container']->hide();
		$GLOBALS['eyeFiles_Box_Actions_menu_real_Container']->hide();
		$hide = 'e.childNodes[i].id == "ActionsLine" || e.childNodes[i].id == "Upload_Container" || e.childNodes[i].id == "NewFolder_Container" || e.childNodes[i].id == "NewFile_Container" || e.childNodes[i].id == "EmptyTrash_Container"';
		$unhide = '1 == 2';
	} elseif ($type == 'real') {
		$GLOBALS['eyeFiles_Box_Actions_menu_files_Container']->hide();
		$GLOBALS['eyeFiles_Box_Actions_menu_trash_Container']->hide();
		$GLOBALS['eyeFiles_Box_Actions_menu_real_Container']->unhide();
		$hide = 'e.childNodes[i].id == "EmptyTrash_Container"';
		$unhide = 'e.childNodes[i].id == "ActionsLine" || e.childNodes[i].id == "Upload_Container" || e.childNodes[i].id == "NewFolder_Container" || e.childNodes[i].id == "NewFile_Container"';
	} else {
		$hide = 'e.childNodes[i].id == "EmptyTrash_Container"';
		$unhide = 'e.childNodes[i].id == "ActionsLine" || e.childNodes[i].id == "Upload_Container" || e.childNodes[i].id == "NewFolder_Container" || e.childNodes[i].id == "NewFile_Container"';
		$GLOBALS['eyeFiles_Box_Actions_menu_files_Container']->unhide();
		$GLOBALS['eyeFiles_Box_Actions_menu_trash_Container']->hide();
		$GLOBALS['eyeFiles_Box_Actions_menu_real_Container']->hide();
	}
	eyex('rawjs',array('js' => 'e = xGetElementById("' . $myPid . '_eyeFiles_Toolbar");
	for (var i = 0; i < e.childNodes.length; i++) {
		if (e.childNodes[i].id == "' . ucfirst($type) . '_Container") {
			e.childNodes[i].className = "blockbarItemPress";
		} else if (e.childNodes[i].id == "Home_Container" || e.childNodes[i].id == "Groups_Container" || e.childNodes[i].id == "Trash_Container" || e.childNodes[i].id == "Users_Container" || e.childNodes[i].id == "Real_Container") {
			e.childNodes[i].className = "blockbarItem";
		}
		if (' . $unhide . ') {
			e.childNodes[i].style.display = "";
		} else if (' . $hide . ') {
			e.childNodes[i].style.display = "none";
		}
	}'));
	
	if (is_object($GLOBALS['eyeFiles_Container'])) {
		$GLOBALS['eyeFiles_Container']->remove();
	}
	$myContainer = new Container(array(
		'father' => 'eyeFiles_Window_Content',
		'height' => $GLOBALS['eyeFiles_Box_Tree']->height + 35,
		'name' => 'eyeFiles_Container',
		'width' => $GLOBALS['eyeFiles_Textbox_Path']->width + 32,
		'x' => $GLOBALS['eyeFiles_Textbox_Path']->x - 11,
		'y' => $GLOBALS['eyeFiles_Box_Tree']->y + 25
	));
	$myContainer->show();
	$myContainer->setCss(array('display' => 'block','overflow' => 'auto','position' => 'absolute'));
	eyeWidgets('serialize',array($myContainer));
	
	if ($GLOBALS['eyeFiles_Box_View_Radio_Details']->checked) {
		include(EYE_ROOT . '/' . APP_DIR . '/eyeFiles/views/details' . EYE_CODE_EXTENSION);
	} elseif ($GLOBALS['eyeFiles_Box_View_Radio_List']->checked) {
		include(EYE_ROOT . '/' . APP_DIR . '/eyeFiles/views/list' . EYE_CODE_EXTENSION);
	} else {
		include(EYE_ROOT . '/' . APP_DIR . '/eyeFiles/views/icons' . EYE_CODE_EXTENSION);
	}
	eyeFiles_on_ChangeBox();
	return $type;
}

function eyeFiles_on_OpenTree($params = '') {
	$path = $GLOBALS['eyeFiles_Box_Tree_Tree']->selected;
	$type = utf8_substr($path,0,utf8_strpos($path,'/'));
	$path = utf8_substr($path,utf8_strlen($type));
	eyeFiles_on_OpenPath(array($path,$type));
}

function eyeFiles_on_ChangeBox($params = array()) {
	global $myPid;
	if ($params['Box'][0] && in_array($params['Box'][0],array('Tree','View','Actions'))) {
		$path = eyeFiles('cleanPath',array($GLOBALS['eyeFiles_Hidden_Path']->text));
		if ($GLOBALS['eyeFiles_Hidden_Action']->text != '') {
			$father = 'files';
			if ($path[1] == 'trash') {
				$father = 'trash';
			} elseif ($path[1] == 'real') {
				$father = 'real';
			}
			eyex('rawjs',array('js' => 'e = xGetElementById("' . $myPid . '_eyeFiles_Box_Actions_menu_' . $father . '_Container_' . $GLOBALS['eyeFiles_Hidden_Action']->text . '_Container"); e.className = ""; e.style.backgroundColor = "";'));
			$GLOBALS['eyeFiles_Hidden_Action']->setText('');
		}
		$GLOBALS['eyeFiles_Hidden_Box']->setText($params['Box'][0]);
	}
	if ($GLOBALS['eyeFiles_Hidden_Box']->text == 'Tree') {
		$path = eyeFiles('cleanPath',array($GLOBALS['eyeFiles_Hidden_Path']->text));
		if (is_object($GLOBALS['eyeFiles_Box_Tree_Tree'])) {
			$GLOBALS['eyeFiles_Box_Tree_Tree']->remove();
		}
		$myTree = new Tree(array(
			'clickTree' => 1,
			'father' => 'eyeFiles_Box_Tree',
			'height' => $GLOBALS['eyeFiles_Box_Tree']->height - 45,
			'name' => 'eyeFiles_Box_Tree_Tree',
			'signal' => 'OpenTree',
			'width' => $GLOBALS['eyeFiles_Box_Tree']->width - 8,
			'x' => 1,
			'y' => 25
		));
		$myTree->show();
		$myTree->setCss(array('overflow' => 'auto'));
		$myTree->addItem('eyeFiles_Box_Tree_Tree','item_' . $path[1],i18n('translate',array(ucfirst($path[1]))));
		$myTree->addSubList('item_' . $path[1],'list_' . $path[1]);
		include_once(EYE_ROOT . '/' . APP_DIR . '/eyeFiles/lib' . EYE_CODE_EXTENSION);
		if ($path[1] == 'groups') {
			$content = vfs('getDirContent',array($path[3]));
			foreach ($content as $folder) {
				if (vfs('isdir',array($folder))) {
					$md5 = md5(realpath($folder . '/' . FILES_GROUP_DIR . '/'));
					$myTree->addItem('list_' . $path[1],'item_' . FILES_GROUP_DIR . '_' . $md5,utf8_basename($folder));
					$myTree->addSubList('item_' . FILES_GROUP_DIR . '_' . $md5,'list_' . FILES_GROUP_DIR . '_' . $md5);
					$expand = realpath($path[0] . '/');
					if (utf8_strpos($expand,realpath($folder)) === 0 && $expand != realpath($folder . '/')) {
						eyeFiles_lib_CreateTree($path[1],$folder . '/' . FILES_GROUP_DIR . '/',$myTree,'list_' . FILES_GROUP_DIR . '_' . $md5,$expand);
					}
				}
			}
		} elseif ($path[1] == 'users') {
			$content = vfs('getDirContent',array($path[3]));
			foreach ($content as $folder) {
				if (vfs('isdir',array($folder))) {
					$md5 = md5(realpath($folder . '/'));
					$tree = 'list_' . utf8_basename($folder) . '_' . $md5;
					$myTree->addItem('list_' . $path[1],'item_' . utf8_basename($folder) . '_' . $md5,utf8_basename($folder));
					$myTree->addSubList('item_' . utf8_basename($folder) . '_' . $md5,$tree);
					if (utf8_strpos(realpath($path[0] . '/'),realpath($path[3])) === 0 && realpath($path[0] . '/') != realpath($path[3] . '/')) {
						$content2 = vfs('getDirContent',array($folder));
						foreach ($content2 as $folder) {
							if (vfs('isdir',array($folder))) {
								$md5 = md5(realpath($folder . '/' . FILES_USER_DIR . '/'));
								$myTree->addItem($tree,'item_' . FILES_USER_DIR . '_' . $md5,utf8_basename($folder));
								$myTree->addSubList('item_' . FILES_USER_DIR . '_' . $md5,'list_' . FILES_USER_DIR . '_' . $md5);
								if (utf8_strpos(realpath($path[0] . '/'),realpath($folder . '/' . FILES_USER_DIR)) === 0 && realpath($path[0] . '/') != realpath($folder . '/')) {
									eyeFiles_lib_CreateTree($path[1],$folder . '/' . FILES_USER_DIR . '/',$myTree,'list_' . FILES_USER_DIR . '_' . $md5,realpath($path[0] . '/'));
								}
							}
						}
					}
				}
			}
		} elseif ($path[1] != 'trash') {
			eyeFiles_lib_CreateTree($path[1],$path[3],$myTree,'list_' . $path[1],realpath($path[0] . '/'));
		}
		$myTree->processList();
		if ($path[1] == 'real') {
			$content = vfs('real_getDirContent',array($path[0]));
		} else {
			$content = vfs('getDirContent',array($path[0]));
		}
		$x = 0;
		while ($content[$x] && !vfs('isdir',array($content[$x]))) {
			$x++;
		}
		if ($content[$x] && vfs('isdir',array($content[$x]))) {
			if ($path[1] == 'groups' && $path[2] == '/') {
				$path[0] = $content[$x] . '/' . FILES_GROUP_DIR . '/';
			} elseif ($path[1] == 'users' && $path[2] != '/' && substr_count($path[2],'/') === 1) {
				$path[0] = $content[$x] . '/' . FILES_USER_DIR . '/';
			} else {
				$path[0] = $content[$x];
			}
		}
		$myTree->expandTree('item_' . utf8_basename($path[0]) . '_' . md5(realpath($path[0])));
	}
}
?>