<?php
/*
                                  ____   _____
                                 / __ \ / ____|
                  ___ _   _  ___| |  | | (___
                 / _ \ | | |/ _ \ |  | |\___ \
                |  __/ |_| |  __/ |__| |____) |
                 \___|\__, |\___|\____/|_____/
                       __/ |
                      |___/              1.8

                     Web Operating System
                           eyeOS.org

             eyeOS Engineering Team - www.eyeos.org/team

     eyeOS is released under the GNU Affero General Public License Version 3 (AGPL3)
            provided with this release in license.txt
             or via web at gnu.org/licenses/agpl-3.0.txt

        Copyright 2005-2009 eyeOS Team (team@eyeos.org)
*/

function eyeApps_run($params = '') {
	global $currentUser;
	global $myPid;
	addListenerServiceCall('fullResized','eyex','resizedbrowser');
	$myWindow = new Window(array(
		'cent' => 1,
		'father' => 'eyeApps',
		'height' => 400,
		'name' => 'eyeApps_Window',
		'title' => 'Applications',
		'savePosition' => 1,
		'sendResizeMsg' => 1,
		'sigResize' => 'Resize',
		'width' => 500
	));
	$myWindow->show();
	
	$myToolbar = new Toolbar(array(
		'father' => 'eyeApps_Window_Content',
		'name' => 'eyeApps_Toolbar'
	));
	$myToolbar->show();
	$myToolbar->addItem('ManageDock','index.php?version=' . EXTERN_CACHE_VERSION . '&theme=1&extern=images/toolbar/lin_agt_wrench.png','Manage Dock');
	if ($currentUser == ROOTUSER) {
		$myToolbar->addItem('InstallApps','index.php?version=' . EXTERN_CACHE_VERSION . '&theme=1&extern=images/toolbar/installapps.png','Install Apps');
	}
	$myToolbar->addItem('fullscreen','index.php?version='.EXTERN_CACHE_VERSION.'&theme=1&extern=images/toolbar/fullScreen.png','Full Screen','',1);
	$myContainer = new Container(array(
		'father' => 'eyeApps_Window_Content',
		'height' => $myWindow->height - 84,
		'name' => 'eyeApps_Container',
		'width' => $myWindow->width - 4,
		'x' => intval(!IE || IE > 6),
		'y' => 59
	));
	$myContainer->show();
	$myContainer->setCss(array(
		'display' => 'block',
		'overflow' => 'auto',
		'position' => 'absolute'
	));
	eyeWidgets('serialize',array($myContainer));
	
	$conf = eyeXML('getXMLconfig',array('eyeFiles','conf.xml'));
	if (!isset($conf['eyeFiles'][0]['clickMethod'][0])) {
		$conf['eyeFiles'][0]['clickMethod'][0] = 1;
	}
	$path = EYE_ROOT . '/' . APP_DIR . '/';
	$folders = scandir($path);
	$i = 0;
	$x = 20;
	$y = 20;
	foreach ($folders as $folder) {
		$xml = getAppInfo($folder);
		if ($xml['package'][0]['type'][0] == 'Application') {
			$myIcon = new Icon(array(
				'content' => array($folder),
				'draggable' => 0,
				'father' => 'eyeApps_Container',
				'image' => $xml['package'][0]['icon'][0],
				'name' => 'eyeApps_Icon_' . $i,
				'onclick' => $conf['eyeFiles'][0]['clickMethod'][0],
				'overClass' => 'eyeFiles_icons',
				'text' => $xml['package'][0]['name'][0],
				'useClass' => 1,
				'x' => $x,
				'y' => $y
			));
			$myIcon->show();
			eyex('rawjs',array('js' => 'xGetElementById("' . $myPid . '_' . $myIcon->name . '_Container").style.textAlign = "center"; xGetElementById("img_' . $myPid . '_' . $myIcon->name . '").style.marginLeft = "-1px";'));
			$x += 88;
			if ($myContainer->width - $x - 88 < 0) {
				$x = 20;
				$y += 88;
			}
			$i++;
			$myWidgetDrag = new widgetDrag(array(
				'content' => array('app',$folder),
				'dragAlpha' => 75,
				'dragCss' => array(array('border'),array('1px #000000 dotted')),
				'father' => $myIcon->name . '_Container',
				'name' => $myIcon->name . '_WidgetDrag'
			));
			$myWidgetDrag->show();
		}
	}
}

function eyeApps_end($params = '') {
	eyeWidgets('unserialize',$params);
}
?>