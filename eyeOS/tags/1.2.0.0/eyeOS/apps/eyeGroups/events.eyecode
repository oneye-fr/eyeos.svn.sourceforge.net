<?php
/*
                                  ____   _____ 
                                 / __ \ / ____|
                  ___ _   _  ___| |  | | (___  
                 / _ \ | | |/ _ \ |  | |\___ \ 
                |  __/ |_| |  __/ |__| |____) |
                 \___|\__, |\___|\____/|_____/ 
                       __/ |                   
                      |___/              1.2

                     Web Operating System
                           eyeOS.org

             eyeOS Engineering Team - eyeOS.org/whoarewe

     eyeOS is released under the GNU General Public License Version 3 (GPL3)
            provided with this release in license.txt
             or via web at gnu.org/licenses/gpl.txt

        Copyright 2005-2007 eyeOS Team (team@eyeos.org)         
*/

define('EYEFILES_ICON_SIZE','48x48');
define('EYEFILES_ICON_SEPARATION',30);
define('EYEFILES_TOP_MARGIN',10);
define('EYEFILES_ICON_START',10);

function eyeGroups_on_Message($params="") {
	reqLib('eyeWidgets','updateContent',$params);
}

function eyeGroups_on_openFile($params=null) {
	global $myPid;
	global $checknum;
	if(!is_array($params)) {
		return false;
	}

	if(empty($params['file']) || $params['file'] == '/') {
		$fileToShow = '/';
		$listGroups=true;
	} else {
		$listGroups=false;
		$fileToShow = $params['file'];
		if($fileToShow{0} != '/') {
			$fileToShow = '/'.$fileToShow;
		}
	}
	$myUserDir = EYE_ROOT.'/'.GROUPS_DIR.'/';
	$file = $myUserDir.'/'.$fileToShow;
	
	$userTheme = eyeSessions('getVar',array('usertheme'));
	//TODO: hardcoded
	$windowWidth = $params['size'];
	
	if(is_dir($file)) {
		service('eyex','rawjs',array('js'=>"document.getElementById('".$myPid."_WND_2_Content').innerHTML='';"));
		if(!$listGroups) {
			$content = service('vfs','getDirContent',array($file));
			$mime = getConfig('mime','mime.xml');
			if(isset($GLOBALS['eyeFilesText']) && is_object($GLOBALS['eyeFilesText'])) {
				$myText = $GLOBALS['eyeFilesText'];
				$myText->setText(str_replace('//','/',$fileToShow));
			}
			if($content) {
				if(is_array($content)) {
					$counter = 0;
					$x = EYEFILES_ICON_START;
					$y = EYEFILES_TOP_MARGIN;
					foreach($content as $current) {	
						$fileName = false;
						if(is_dir($current)) {
							$icon = 'index.php?extern=apps/eyeX/themes/'.$userTheme.'/icons/'.EYEFILES_ICON_SIZE.'/filetypes/folder.png';
							$fileName = basename($current);
							$realFileName = str_replace($myUserDir,'',$current);
						}else {
							$icon = 'unknown';
							$fileName = basename($current);
							$realFileName = substr($current,strlen($myUserDir));
							$tmpName = basename($realFileName);
							$realFileName = substr($realFileName,0,strlen($realFileName)-strlen($tmpName));
							$realFileName .= $fileName;
							$info = pathinfo($realFileName);
							$extension = strtolower($info['extension']);
							if(($extension == 'jpeg' || $extension == 'gif' || $extension == 'png' || $extension == 'jpg') && function_exists("gd_info")) {
								$icon = 'index.php?checknum='.$checknum.'&msg=getTh&params=<arg>'.$realFileName.'</arg>';
							} else {
								foreach($mime['mimeTypes'][0]['mime'] as $value) {
									if($value['extension'][0] == $extension) {
										$icon = $value['type'][0];
									}
								} 
								$icon = 'index.php?extern=apps/eyeX/themes/'.$userTheme.'/icons/'.EYEFILES_ICON_SIZE.'/filetypes/'.$icon.'.png';
							}
							//TODO: HANDLE ICONS
						}
						if($fileName) {
							//create new icon using a folder icon.
							$myName = "eyeFiles_icon_$counter";	
							//get icon size using eyeGraphics
							$myWidth = 60;
							$myHeight = 60;
							//TODO: MAKE A BETTER AND CONFIGURABLE TOOLTIPS
							$myTooltip = filesize($current);
							$myIcon = new Icon(array('name'=>$myName,'text'=>$fileName,'father'=>'WND_2_Content',
							'image'=>$icon,
							'content'=>array($realFileName,$windowWidth),'x'=>$x,'y'=>$y,'overBorder'=>1));	        			
							$myIcon->show();
							$counter++;
							$x += $myHeight+EYEFILES_ICON_SEPARATION;
							if($x > $windowWidth-$myHeight) {
								$x = EYEFILES_ICON_START;
								$y += $myWidth+EYEFILES_ICON_SEPARATION;
							}
							$myIcon->setCssText(array('color'=>'black','font-weight'=>'normal'));
							$myIcon->setCss(array('z-index'=>'1'));
						}
					}
				} 
			}
		} else {
			$groups = service('um','getCurrentGroups');
			if(isset($GLOBALS['eyeFilesText']) && is_object($GLOBALS['eyeFilesText'])) {
  				$myText = $GLOBALS['eyeFilesText'];
 				$myText->setText(str_replace('//','/',$fileToShow)); 
			}
			if(is_array($groups)) {
				$counter = 0;
				$x = EYEFILES_ICON_START;
				$y = EYEFILES_TOP_MARGIN;
				foreach($groups as $key=>$value) {
					$icon='folder';
					//create new icon using a folder icon.
					$myName = "eyeFiles_icon_$counter";	
					//get icon size using eyeGraphics
					$info = getimagesize(EYE_ROOT.'/'.EXTERN_DIR.'/apps/eyeX/themes/'.$userTheme.'/icons/'.EYEFILES_ICON_SIZE.'/filetypes/'.$icon.'.png');
					$myWidth = $info[0];
					$myHeight = $info[1];
					//TODO: MAKE A BETTER AND CONFIGURABLE TOOLTIPS
					$myTooltip = $key;
					$myIcon = new Icon(array('name'=>$myName,'text'=>$key,'father'=>'WND_2_Content',
					'image'=>'index.php?extern=apps/eyeX/themes/'.$userTheme.'/icons/'.EYEFILES_ICON_SIZE.'/filetypes/'.$icon.'.png',
					'realname'=>EYE_ROOT.'/'.EXTERN_DIR.'/apps/eyeX/themes/'.$userTheme.'/icons/'.EYEFILES_ICON_SIZE.'/filetypes/'.$icon.'.png',
					'content'=>array($key,$windowWidth),'x'=>$x,'y'=>$y,'tooltip'=>$myTooltip,'overBorder'=>1));	        			
					$myIcon->show();
					$counter++;
					$x += $myHeight+EYEFILES_ICON_SEPARATION;
					if($x > $windowWidth-$myHeight) {
						$x = EYEFILES_ICON_START;
						$y += $myWidth+EYEFILES_ICON_SEPARATION;
					}
					$myIcon->setCssText(array('color'=>'black','font-weight'=>'normal'));
					$myIcon->setCss(array('z-index'=>'1'));
				}	
			}
		}
	}
}


function eyeGroups_on_getTh($params=null) {
	$img = $params['arg'][0];	
	thumbimg($img,60);
}

function thumbimg($image,$max) {	
	$myUserDir = EYE_ROOT.'/'.GROUPS_DIR.'/'.$image;
	//if(!vfs('checkPermissions',array($myUserDir))) {		
		//return;
	//}
	$info = pathinfo($image);
	$extension = strtolower($info['extension']);
	$name = vfs('getRealName',array($myUserDir));
	if($extension == 'jpeg' || $extension == 'jpg') {
		$img = @imagecreatefromjpeg($name);
	} elseif($extension == 'png') {
		$img = @imagecreatefrompng($name);
	} elseif ($extension == 'gif') {
		$img = @imagecreatefromgif($name);
	} else {
		return;
	}
	$info = getimagesize($name);
	if($info[0] > $info[1]) {
		$porc = $max * 100 / $info[0];
	} else {
		$porc = $max * 100 / $info[1];
	}
	$width = $info[0] / 100 * $porc;
	$height = $info[1] / 100 * $porc;
	$thumb = imagecreatetruecolor($width,$height);
	imagecopyresized ($thumb, $img, 0, 0, 0, 0, $width, $height, $info[0], $info[1]);
	header('Content-type: '.$info['mime']);
	if($extension == 'jpeg' || $extension == 'jpg') {
		imagejpeg($thumb);
	} elseif($extension == 'png') {
		imagepng($thumb);
	} elseif ($extension == 'gif') {
		imagegif($thumb);
	}
	exit;
}  


function eyeGroups_on_Icon_Clicked($params=null) {
	if(isset($GLOBALS['execApp']) && is_object($GLOBALS['execApp']) && $GLOBALS['execApp']->text != "") {
		global $myPid;
		global $checknum;
		$callback = "eyeFiles_reloadFiles($myPid,$checknum);";
		$app = $GLOBALS['execApp']->text;
		if(!empty($app)) {
			service('proc','launch',array($app,array(EYE_ROOT.'/'.GROUPS_DIR.'/'.$params['arg0'][0],$callback)));
			$myHidden = new Hidden(array('name'=>'execApp','father'=>'WND_1','text'=>''));
			reqLib('eyeWidgets','serialize',array($myHidden));
			service('eyex','rawjs',array('js'=>"eyeFiles_clean($myPid);"));
		}
	} else {
		$file = $params['arg0'][0];
		$myUserDir = EYE_ROOT.'/'.GROUPS_DIR.'/';
		$realfile = $myUserDir.'/'.$file;
		if(is_dir($realfile)) {
			eyeGroups_on_openFile(array('file'=>$file,'size'=>$params['arg1'][0]));
		} else {
			$info = pathinfo($realfile);
			$extension = strtolower($info['extension']);
			$asoc = getConfig('filetypes',$extension.'.xml');
			if(is_array($asoc)) {
				$execApp = $asoc['fileType'][0]['app'][0];
				service('proc','launch',array($execApp,$realfile));
			}
		}
	}
}

function eyeGroups_on_actionExecute($params=null) {
	global $myPid;
	global $checknum;
	$callback = "eyeFiles_reloadFiles($myPid,$checknum);";
	service('eyex','rawjs',array('js'=>"eyeFiles_clean($myPid);"));
	foreach($params as $key=>$value) {
		if(strstr($key,'action_hid_')) {
			service('proc','launch',array($value[0],array(EYE_ROOT.'/'.GROUPS_DIR.'/'.$GLOBALS['eyeFilesText']->text,$callback)));
			return;
		}
	}
}

function eyeGroups_on_siteExecute($params=null) {
	global $myPid;
	global $checknum;
	foreach($params as $key=>$value) {
		if(strstr($key,'place_hid_')) {
			service('proc','launch',array('eyeFiles',$value[0]));
			return;
		}
	}
}

function eyeGroups_on_actionSelect($params=null) {
	foreach($params as $key=>$value) {
		if(strstr($key,'action_hid_')) {
			if(is_object($GLOBALS['execApp'])) {
				if($GLOBALS['execApp']->text == $value[0]) {
					$myHidden = new Hidden(array('name'=>'execApp','father'=>'WND_1','text'=>''));
					reqLib('eyeWidgets','serialize',array($myHidden));
					return;
				}
			}
			$myHidden = new Hidden(array('name'=>'execApp','father'=>'WND_1','text'=>$value[0]));
			reqLib('eyeWidgets','serialize',array($myHidden));
			return;
		}
	}
}

function eyeGroups_on_goTop($params=null) {
	global $myPid;
	global $checknum;
	$path = $GLOBALS['eyeFilesText']->text;
	$info = pathinfo($path);
	$myHidden = new Hidden(array('name'=>'execApp','father'=>'WND_1','text'=>''));
	service('eyex','rawjs',array('js'=>"eyeFiles_clean($myPid);"));
	reqLib('eyeWidgets','serialize',array($myHidden));
	service('eyex','rawjs',array('js'=>"eyeFiles_reloadFiles($myPid,$checknum,'".$info['dirname']."');"));
}

function eyeGroups_on_goToPath($params=null) {
	global $myPid;
	global $checknum;
	$path = $GLOBALS['eyeFilesText']->text;
	$myHidden = new Hidden(array('name'=>'execApp','father'=>'WND_1','text'=>''));
	service('eyex','rawjs',array('js'=>"eyeFiles_clean($myPid);"));
	reqLib('eyeWidgets','serialize',array($myHidden));
	service('eyex','rawjs',array('js'=>"eyeFiles_reloadFiles($myPid,$checknum,'".$path."');"));
}

function eyeGroups_on_EnterBar($params=null) {
	$myHidden = new Hidden(array('name'=>'execApp','father'=>'WND_1','text'=>''));
	service('eyex','rawjs',array('js'=>"eyeFiles_clean($myPid);"));
	reqLib('eyeWidgets','serialize',array($myHidden));
	eyeGroups_on_Icon_Clicked($params);
}

function eyeGroups_on_Close(){
	proc('end');
}

?>