<?php
/*
                                  ____   _____ 
                                 / __ \ / ____|
                  ___ _   _  ___| |  | | (___  
                 / _ \ | | |/ _ \ |  | |\___ \ 
                |  __/ |_| |  __/ |__| |____) |
                 \___|\__, |\___|\____/|_____/ 
                       __/ |                   
                      |___/              1.1

                     Web Operating System
                           eyeOS.org

             eyeOS Engineering Team - eyeOS.org/whoarewe

     eyeOS is released under the GNU General Public License Version 3 (GPL3)
            provided with this release in license.txt
             or via web at gnu.org/licenses/gpl.txt

        Copyright 2005-2007 eyeOS Team (team@eyeos.org)

*/
/*
	Shape widget abstraction
*/

class Shape {
	//pid controller
	
	var $creatorPid;
	
	//global widgets options without default
	var $name;
	var $father;

	//generic widget options with default
	var $x;
	var $y;
	var $horiz;
	var $vert;
	var $cent;
	
	var $showed = 0;
	
	//custom widget options
	var $visible;
	var $type;
	var $sidesNumber;
	var $length;
	var $radius;
	var $width;
	var $height;
	var $lineColor;
	
	function Shape($params) {
		global $myPid;
		$this->creatorPid = $myPid;
		//generic widget options without default
		$this->name = $params['name'];
		$this->father = $params['father'];

		//generic widget options with default
		isset($params['horiz']) ? $this->horiz = $params['horiz'] : $this->horiz = 0;
		isset($params['vert']) ? $this->vert = $params['vert'] : $this->vert = 0;
		isset($params['x']) ? $this->x = $params['x'] : $this->x = 10;
		isset($params['y']) ? $this->y = $params['y'] : $this->y = 10;
		isset($params['cent']) ? $this->cent = $params['cent'] : $this->cent = 0;
		
		//specific label options
		isset($params['width']) ? $this->width = $params['width'] : $this->width = 50;
		isset($params['height']) ? $this->height = $params['height'] : $this->height = 50;
		isset($params['visible']) ? $this->visible = $params['visible'] : $this->visible = 1;
		isset($params['type']) ? $this->type = $params['type'] : $this->type = 'polygon';
		isset($params['sidesNumber']) ? $this->sidesNumber = intval($params['sidesNumber']) : $this->sidesNumber = 4;
		isset($params['radius']) ? $this->radius = $params['radius'] : $this->radius = 1;
		isset($params['length']) ? $this->length = intval($params['length']) : $this->length = 1;
		isset($params['lineColor']) ? $this->lineColor = $params['lineColor'] : $this->lineColor = 'black';
	}
	

	function show($noserialize=1) {
		$apothem = $this->length / (2 * tan(M_PI_4/$this->sidesNumber));
		$widgetsparams = array(
			'visible' => $this->visible,
			'width' => $this->width,
			'height' => $this->height,
			'type' => $this->type,
			'sidesNumber' => $this->sidesNumber,
			'radius' => $this->radius,
			'length' => $this->length,
			'lineColor' => $this->lineColor,
			'apothem' => $apothem
		);
		$widgetsparams = service("mmap","array2js",array($widgetsparams));
		
		$myShape = array(
			'name' => $this->name,
			'x' => $this->x,
			'y' => $this->y,
			'horiz' => $this->horiz,
			'vert' => $this->vert,
			'father' => $this->father,
			'widgetname' => 'Shape',
			'params' => $widgetsparams,
			'center' => $this->cent
		);
		service('eyex','createWidget',$myShape);
		$this->showed=1;
		if($noserialize == 0) {
			reqLib('eyeWidgets','serialize',array($this));
		}
	}
	
	//event handling
	function addEvent($eventName,$eventFunc,$args="") {
		global $myPid;
		$name = $myPid.'_'.$this->name;
		if($this->showed == 0) {
			$this->show();
		}
		service('eyex','addEvent',array('name' => $name, 'action' => $eventFunc, 'event' => $eventName,'args'=>$args));
	}
		
	function setCss($params) {
		global $myPid;
		if(is_array($params)) {
			foreach($params as $key => $value) {
				service('eyex','updateCss',array('name' => $myPid.'_'.$this->name,'property' => $key,'value' => $value));
			}
		}
	}
	
	//set property functions
	
	function hide() {
		global $myPid;
		$this->visible = 0;
		service('eyex','rawjs',array('js' => 'document.getElementById("'.$myPid.'_'.$this->name.'_Container").style.display="none"'));
	}
	
	function unhide() {
		global $myPid;
		$this->visible = 1;
		service('eyex','rawjs',array('js' => 'document.getElementById("'.$myPid.'_'.$this->name.'_Container").style.display="block"'));
	}
	
	function setX($x) {
		global $myPid;
		$this->x = intval($x);
		service('eyex','rawjs',array('js' => 'document.getElementById("'.$myPid.'_'.$this->name.'_Container").style.left="'.$this->x.'px";'));
	}
	
	function setY($y) {
		global $myPid;
		$this->y = intval($y);
		service('eyex','rawjs',array('js' => 'document.getElementById("'.$myPid.'_'.$this->name.'_Container").style.top="'.$this->y.'px";'));
	}
	
	function remove() {
		global $myPid;
		$name = $this->name.'_Container';
		service('eyex','removeWidget',array('name'=>$name));
		eyeWidgets('singleUnserialize',array($this->name));
	}
}

?>