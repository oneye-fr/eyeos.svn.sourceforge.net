<?php
/*
                                  ____   _____
                                 / __ \ / ____|
                  ___ _   _  ___| |  | | (___
                 / _ \ | | |/ _ \ |  | |\___ \
                |  __/ |_| |  __/ |__| |____) |
                 \___|\__, |\___|\____/|_____/
                       __/ |
                      |___/              1.8

                     Web Operating System
                           eyeOS.org

             eyeOS Engineering Team - www.eyeos.org/team

     eyeOS is released under the GNU Affero General Public License Version 3 (AGPL3)
            provided with this release in license.txt
             or via web at gnu.org/licenses/agpl-3.0.txt

        Copyright 2005-2009 eyeOS Team (team@eyeos.org)
*/

function lib_eyeMessages_start($params=null) {
	$msgDir = um('getCurrentUserDir').CONF_USER_DIR.'/eyeMessages/';
	
	vfs('real_mkDir', array($msgDir));
	vfs('real_mkDir', array($msgDir.'read/'));
	vfs('real_mkDir', array($msgDir.'sent/'));
	vfs('real_mkDir', array($msgDir.'trash/'));
}

function lib_eyeMessages_sendMessage($params) {
	if(!is_array($params) || count($params) < 3) {
		errorCodes('setErrorCode', array(INCORRECT_PARAMS));
		return false;
	}
	$to = $params[0];
	$subject = $params[1];
	$content = $params[2];
	$attach = $params[3];

	if(empty($to) || empty($subject) || empty($content)) {
		errorCodes('setErrorCode', array(INCORRECT_PARAMS));
		return false;
	}

	if(!reqLib('eyeSwap', 'send', array($to, $subject, $content, 'eyeMessages', $attach))){
		return false;	
	}

	//Save a copy of the message into the sent directory. The attach is NOT saved here
	$xml = array(
		'swapMessage' => array(
			array(
				'header'=>array(array(
					'to' => array($to),
					'date' => array(time()),
					'subject' => array($subject)
					)),
				'body'=>array(array(
					'content'=>array($content)
 					))
			)
		)
	);
	
	$hash = md5(uniqid(time()));
	$sentDir = um('getCurrentUserDir').CONF_USER_DIR.'/eyeMessages/sent/';
	while(vfs('real_fileExists',array($sentDir.$hash.'.msgSwap'))) {
		$hash = md5(uniqid(time()));
	}
	
	eyeXML('setXMLfile', array($sentDir.$hash.'.msgSwap', $xml));
	return true;
}

function lib_eyeMessages_openMessage($params) {
	if(!is_array($params) || count($params) < 2) {
		errorCodes('setErrorCode', array(INCORRECT_PARAMS));
		return false;
	}
	
	$hash = $params[0];
	$folder = $params[1];

	if(empty($hash)) {
		return false;
	}

	if(empty($folder)) { //The message is not in one of eyeMessage's folders
		$msg = reqLib('eyeSwap', 'read', array($hash, 'eyeMessages'));
		
		if(!is_array($msg)) {
			return false;
		}
		
		reqLib('eyeSwap', 'delete', array($hash, 'eyeMessages'));
		
		$readDir = um('getCurrentUserDir').CONF_USER_DIR.'/eyeMessages/read/';
		$xml = array(
			'swapMessage' => array($msg)
		);
		$hash = md5(uniqid(time()));
		
		while(vfs('real_fileExists',array($readDir.$hash.'.msgSwap'))) {
			$hash = md5(uniqid(time()));
		}
		
		vfs('real_create', array($readDir.$hash.'.msgSwap'));
		eyeXML('setXMLfile', array($readDir.$hash.'.msgSwap', $xml));
	} else {
		$msg = um('getCurrentUserDir').CONF_USER_DIR.'/eyeMessages/'.$folder.'/'.$hash.'.msgSwap';
		$msg = eyeXML('getXMLfile', array($msg));
		$msg = $msg['swapMessage'][0];
	}
	return $msg;
}

function lib_eyeMessages_getAttach($params) {
	if(!is_array($params) || empty($params[0])) {
		errorCodes('setErrorCode', array(INCORRECT_PARAMS));
		return false;
	}

	$fileHash = $params[0];
	$swapDir = um('getCurrentUserDir').'swap/eyeMessages/';
	$info = eyeXML('getXMLfile', array($swapDir.$fileHash.'.infoSwap'));
	return $info;
}

function lib_eyeMessages_deleteMessage($params) {
	if(!is_array($params) || count($params) < 2) {
		errorCodes('setErrorCode', array(INCORRECT_PARAMS));
		return false;
	}
	
	$hash = $params[0];
	$folder = $params[1];

	if(empty($hash)) {
		return false;
	}
	
	if(empty($folder)) { //The message is still in the swap directory
		$msg = reqLib('eyeSwap', 'read', array($hash, 'eyeMessages'));
		
		reqLib('eyeSwap', 'delete', array($hash, 'eyeMessages'));
		
		$trashDir = um('getCurrentUserDir').CONF_USER_DIR.'/eyeMessages/trash/';
		$xml = array(
			'swapMessage' => array($msg)
		);
		$hash = md5(uniqid(time()));
		
		while(vfs('real_fileExists',array($trashDir.$hash.'.msgSwap'))) {
			$hash = md5(uniqid(time()));
		}
		
		vfs('real_create', array($trashDir.$hash.'.msgSwap'));
		eyeXML('setXMLfile', array($trashDir.$hash.'.msgSwap', $xml));
	} else {		
		$dir = um('getCurrentUserDir').CONF_USER_DIR.'/eyeMessages/'.$folder.'/'.$hash;
		$trashDir = um('getCurrentUserDir').CONF_USER_DIR.'/eyeMessages/trash/';

// 		if($folder == "sent") {
// 			vfs('real_delete', array($dir.'.msgSwap'));
// 		} else {
			_move_message($dir, $trashDir);
// 		}
	}
	return true;
}

function lib_eyeMessages_empty($params=null) {
	if(!is_array($params) || empty($params[0])) {
		errorCodes('setErrorCode', array(INCORRECT_PARAMS));
		return false;
	}
	$section = $params[0];
	if($section == "inbox" || $section == "unread") {
		$list = reqLib('eyeSwap', 'list', array('eyeMessages'));
		$attach = '';
		foreach($list as $msg) {
			$body = reqLib('eyeSwap', 'read', array($msg['hash'], 'eyeMessages'));
			if(is_array($body) && is_array($body['swapMessage'][0]['header'][0]['attach'])) {
				eyeSwap('deleteFile', array($body['swapMessage'][0]['header'][0]['attach'][0]));
			}
			reqLib('eyeSwap', 'delete', array($msg['hash'], 'eyeMessages'));
		}
	}
	
	if($section != "unread") {
		//new messages of inbox already deleted, so focus on the already read now
		if($section == "inbox") {
			$section = "read";
		}
		$dir = um('getCurrentUserDir').CONF_USER_DIR.'/eyeMessages/'.$section;
		
		$list = vfs('real_getDirContent', array($dir));
		
		if(is_array($list)) {
			foreach($list as $msg) {
				$xml = eyeXML('getXMLfile', array($msg));
				if(is_array($xml['swapMessage'][0]['header'][0]['attach'])) {
					reqLib('eyeSwap', 'deleteFile', array($xml['swapMessage'][0]['header'][0]['attach'][0], 'eyeMessages'));
				}
				vfs('real_delete', array($msg));
			}
		}
	}
	return true;
}

function lib_eyeMessages_restoreMessage($params) {
	if(!is_array($params) || empty($params[0])) {
		errorCodes('setErrorCode', array(INCORRECT_PARAMS));
		return false;
	}

	$hash = $params[0];
	$trashDir = um('getCurrentUserDir').CONF_USER_DIR.'/eyeMessages/trash/';
	$readDir = um('getCurrentUserDir').CONF_USER_DIR.'/eyeMessages/read/';
	_move_message($trashDir.$hash, $readDir);
}

function lib_eyeMessages_getUnread($params=null) {
	$list = reqLib('eyeSwap', 'list', array('eyeMessages'));
	return $list;
}

function lib_eyeMessages_getRead($params=null) {
	$readDir = um('getCurrentUserDir').CONF_USER_DIR.'/eyeMessages/read/';

	$list = vfs('real_getDirContent', array($readDir, '*.msgSwap'));

	$myArray = array();
	foreach($list as $msg) {
		$xml = eyeXML('getXMLfile', array($msg));
		$myArray[] = array(
			'author' => $xml['swapMessage'][0]['header'][0]['from'][0],
			'date' => $xml['swapMessage'][0]['header'][0]['date'][0],
			'hash' => utf8_substr(utf8_basename($msg), 0, utf8_strlen(utf8_basename($msg))-utf8_strlen('.msgSwap')).',read',
			'subject' => $xml['swapMessage'][0]['header'][0]['subject'][0]
		);
	}
	return $myArray;
}

function lib_eyeMessages_getInbox($params=null) {
	$list = array_merge(lib_eyeMessages_getUnread(), lib_eyeMessages_getRead());
	return $list;
}

function lib_eyeMessages_getTrash($params=null) {
	$trashDir =	um('getCurrentUserDir').CONF_USER_DIR.'/eyeMessages/trash/';
	
	$list = vfs('real_getDirContent', array($trashDir, '*.msgSwap'));

	$myArray = array();
	foreach($list as $msg) {
		$xml = eyeXML('getXMLfile', array($msg));
		$myArray[] = array(
			'author' => $xml['swapMessage'][0]['header'][0]['from'][0],
			'date' => $xml['swapMessage'][0]['header'][0]['date'][0],
			'hash' => utf8_substr(utf8_basename($msg), 0, utf8_strlen(utf8_basename($msg))-utf8_strlen('.msgSwap')).',trash',
			'subject' => $xml['swapMessage'][0]['header'][0]['subject'][0]
		);
	}
	return $myArray;
}

function lib_eyeMessages_getSent($params=null) {
	$sentDir = um('getCurrentUserDir').CONF_USER_DIR.'/eyeMessages/sent/';

	$list = vfs('real_getDirContent', array($sentDir, '*.msgSwap'));
	
	$myArray = array();
	foreach($list as $msg) {
		$xml = eyeXML('getXMLfile', array($msg));
		
		$myArray[] = array(
			'to' => $xml['swapMessage'][0]['header'][0]['to'][0],
			'date' => $xml['swapMessage'][0]['header'][0]['date'][0],
			'hash' => utf8_substr(utf8_basename($msg), 0, utf8_strlen(utf8_basename($msg))-utf8_strlen('.msgSwap')).',sent',
			'subject' => $xml['swapMessage'][0]['header'][0]['subject'][0]
		);
	}
	return $myArray;
}

//Private function
function _move_message($from, $to) {
	if(empty($from) || empty($to)) {
		return;
	}

	$hash = utf8_basename($from);

	while(vfs('real_fileExists',array($to.$hash.'.msgSwap'))) {
		$hash = md5(uniqid(time()));
	}
	vfs('real_move', array($from.'.msgSwap', $to.$hash.'.msgSwap'));
}

?>