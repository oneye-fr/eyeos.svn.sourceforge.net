<?php
/*
  ___  _ __   ___ _   _  ___
 / _ \| '_ \ / _ \ | | |/ _ \
| (_) | | | |  __/ |_| |  __/
 \___/|_| |_|\___|\__, |\___|
                  |___/

oneye is released under the GNU Affero General Public License Version 3 (AGPL3)
 -> provided with this release in license.txt
 -> or via web at www.gnu.org/licenses/agpl-3.0.txt

Copyright Â© 2005 - 2010 eyeos Team (team@eyeos.org)
             since 2010 Lars Knickrehm (mail@lars-sh.de)
*/

function lib_eyeConverter_convert($params) {

	if($params == null || count($params) < 3){
		errorCodes('setErrorCode',array(INCORRECT_PARAMS));
		return false;
	}

	$orig = $params[0];
	$dest = $params[1];
	$format = $params[2];

	if(isset($params[3])) {
		$useReal = $params[3];
	} else {
		$useReal = false;
	}

	if(!vfs('real_checkPermissions',array($orig)) && !vfs('checkPermissions',array($orig))) {
		errorCodes('setErrorCode',array(VFS_INSUFFICIENT_PERMISSIONS));
		return false;
	}

	if(!vfs('real_checkPermissions',array($dest)) && !vfs('checkPermissions',array($dest))) {
		errorCodes('setErrorCode',array(VFS_INSUFFICIENT_PERMISSIONS));
		return false;
	}

	if($useReal) {
		$forig = $orig;
	} else {
		$forig = vfs('getRealName',array($orig));
	}

	$forig = realpath(dirname($forig)).'/'.basename($forig);
	$dest = realpath(dirname($dest)).'/'.basename($dest);

	$format = escapeshellarg($format);
	$format = /* utf8 */ substr($format, 1, -1);

	$forig = escapeshellarg($forig);
	$forig = /* utf8 */ substr($forig, 1, -1);

	$dest = escapeshellarg($dest);
	$dest = /* utf8 */ substr($dest, 1, -1);

	if(FORMAT_PARSER == 'OpenOffice') {
		if($format == 'pdf') {
			$format = 'writer_pdf_Export';
		}
		if (strtolower(substr(PHP_OS, 0, 3)) === 'win') { // Check for windows systems // utf8
			$forig = str_replace('/','\\',$forig);
			$dest = str_replace('/','\\',$dest);
			$content = 'cd /d "' . OFFICE_COMMAND . '"' . "\n" . 'soffice.exe -nofirststartwizard -headless -norestore macro:///Tools.eyeOS.ConvertAny(' . OFFICE_SEPARATOR_ARG . $forig . OFFICE_SEPARATOR_ARG . ',' . OFFICE_SEPARATOR_ARG . $dest . OFFICE_SEPARATOR_ARG . ',' . OFFICE_SEPARATOR_ARG . $format . OFFICE_SEPARATOR_ARG . ')';
			file_put_contents($dest . '.bat',$content);
			$cmd = '"' . $dest . '.bat"';
		} elseif(OFFICE_USE_DISPLAY == 1) {
			$cmd = OFFICE_COMMAND.' -invisible -nologo -nodefault -nofirststartwizard -headless -norestore -display :'.intval(OFFICE_SCREEN).'.0 '.OFFICE_SEPARATOR_ARG.'macro:///Tools.eyeOS.ConvertAny('.$forig.','.$dest.','.$format.')'.OFFICE_SEPARATOR_ARG;
		} else {
			$cmd = OFFICE_COMMAND.' -invisible -nologo -nodefault -nofirststartwizard -headless -norestore '.OFFICE_SEPARATOR_ARG.'macro:///Tools.eyeOS.ConvertAny('.$forig.','.$dest.','.$format.')'.OFFICE_SEPARATOR_ARG;
		}
		$env = array();
		$pipe = array();
		$desc = array();
		proc_open($cmd,$desc,$pipe,null,$env);
		return true;
	} else if(FORMAT_PARSER == 'unoconv') {
		if($format == 'writerglobal8_writer') {
			$format = 'odt';
		} else if($format == 'MS Word 97') {
			$format = 'doc';
		} else if($format == 'HTML (StarWriter)') {
			$format = 'html';
		} else if($format == 'calc8') {
			$format = 'ods';
		} else if($format == 'MS Excel 97') {
			$format = 'xls';
		}

		$cmd = 'unoconv --format='.$format.' --output=file://'.$dest.' '.$forig;
		shell_exec($cmd);
		return true;
	}
	return false;
}

function lib_eyeConverter_cleanTmp(){
	global $myPid;
	$udir = um('getCurrentUserDir').'/tmp/';
	$filesToClean = vfs('real_getDircontent',array($udir,'*'.$myPid.'*'));
	foreach($filesToClean as $file){
		vfs('real_delete',array($file));
	}
}
?>