<?php
/*
                                  ____   _____ 
                                 / __ \ / ____|
                  ___ _   _  ___| |  | | (___  
                 / _ \ | | |/ _ \ |  | |\___ \ 
                |  __/ |_| |  __/ |__| |____) |
                 \___|\__, |\___|\____/|_____/ 
                       __/ |                   
                      |___/              1.5

                     Web Operating System
                           eyeOS.org

             eyeOS Engineering Team - eyeOS.org/whoarewe

     eyeOS is released under the GNU Affero General Public License Version 3 (AGPL3)
            provided with this release in license.txt
             or via web at gnu.org/licenses/agpl-3.0.txt

        Copyright 2005-2008 eyeOS Team (team@eyeos.org)

*/
/*
	Box widget abstraction
*/

class Tree {
	//pid controller
	
	var $creatorPid;
	//global widgets options without default
	var $name;
	var $father;

	//generic widget options with default
	var $x;
	var $y;
	var $horiz;
	var $vert;
	var $cent;
	
	var $showed = 0;
	
	//custom widget options
	var $width;
	var $height;
	var $signal;
	var $clickTree;
	
	//firends abstraction
	var $friends="''";
	
	function Tree($params) {	
		global $myPid;
		$this->creatorPid = $myPid;
		//generic widget options without default
		$this->name = $params['name'];
		$this->father = $params['father'];

		//generic widget options with default
		isset($params['horiz']) ? $this->horiz = $params['horiz'] : $this->horiz = 0;
		isset($params['vert']) ? $this->vert = $params['vert'] : $this->vert = 0;
		isset($params['cent']) ? $this->cent = $params['cent'] : $this->cent = 0;
		isset($params['x']) ? $this->x = $params['x'] : $this->x = 20;
		isset($params['y']) ? $this->y = $params['y'] : $this->y = 20;
		
		//especific window options
		isset($params['width']) ? $this->width = $params['width'] : $this->width = 200;
		isset($params['height']) ? $this->height = $params['height'] : $this->height = 200;
		isset($params['signal']) ? $this->signal = $params['signal'] : $this->signal = $this->name;
		isset($params['clickTree']) ? $this->clickTree = $params['clickTree'] : $this->clickTree = 0;
		$this->addFriend($this); //hack :)
	}
	
	//event handling
	function addEvent($eventName,$eventFunc,$args="") {
		global $myPid;
		$name = $myPid.'_'.$this->name;
		if($this->showed == 0) {
			$this->show();
		}
		service('eyex','addEvent',array('name' => $name, 'action' => $eventFunc, 'event' => $eventName,'args'=>$args));
	}

	function show($noserialize=0) {
		/*if($this->title) {
			$this->title = i18n('translate',array($this->title));
		}*/
		$widgetsparams = array(
			'height' => $this->height,
			'width' => $this->width,
			'signal' => $this->signal,
			'clickTree' => $this->clickTree,
			'sync' => $this->friends,
		);
		$widgetsparams = service("mmap","array2js",array($widgetsparams));
		
		$myBox = array(
			'name' => $this->name,
			'x' => $this->x,
			'y' => $this->y,
			'horiz' => $this->horiz,
			'vert' => $this->vert,
			'father' => $this->father,
			'widgetname' => 'Tree',
			'params' => $widgetsparams,
			'center' => $this->cent
		);
		$this->showed=1;
		service('eyex','createWidget',$myBox);
		if($noserialize == 0) {
			$mySelector = new TreeSelected(array('name'=>$this->name));
			reqLib('eyeWidgets','serialize',array($mySelector));
		}
	}
	
		
	function setCss($params) {
		global $myPid;
		if(is_array($params)) {
			foreach($params as $key => $value) {
				service('eyex','updateCss',array('name' => $myPid.'_'.$this->name,'property' => $key,'value' => $value));
			}
		}
	}
	
	function hide() {
		global $myPid;
		$this->visible = 0;
		service('eyex','rawjs',array('js' => 'document.getElementById("'.$myPid.'_'.$this->name.'_Container").style.display="none"'));
	}
	
	function unhide() {
		global $myPid;
		$this->visible = 1;
		service('eyex','rawjs',array('js' => 'document.getElementById("'.$myPid.'_'.$this->name.'_Container").style.display="block"'));
	}

	function setWidth($width) {
		global $myPid;
		$this->width = intval($width);
		service('eyex','rawjs',array('js' => 'document.getElementById("'.$myPid.'_'.$this->name.'_Container").style.width="'.$this->width.'px";'));
		service('eyex','rawjs',array('js' => 'document.getElementById("'.$myPid.'_'.$this->name.'").style.width="'.$this->width.'px";'));
	}
	
	function setHeight($height) {
		global $myPid;
		$this->height = intval($height);
		service('eyex','rawjs',array('js' => 'document.getElementById("'.$myPid.'_'.$this->name.'").style.height="'.$this->height.'px";'));
		service('eyex','rawjs',array('js' => 'document.getElementById("'.$myPid.'_'.$this->name.'_Container").style.height="'.$this->height.'px";'));
	}
	
	function setX($x) {
		global $myPid;
		$this->x = intval($x);
		service('eyex','rawjs',array('js' => 'document.getElementById("'.$myPid.'_'.$this->name.'_Container").style.left="'.$this->x.'px";'));
	}
	
	function setY($y) {
		global $myPid;
		$this->y = intval($y);
		service('eyex','rawjs',array('js' => 'document.getElementById("'.$myPid.'_'.$this->name.'_Container").style.top="'.$this->y.'px";'));
	}
	
	function remove() {
		global $myPid;
		$name = $this->name.'_Container';
		service('eyex','removeWidget',array('name'=>$name));
		eyeWidgets('singleUnserialize',array($this->name));
	}
	
	function addSubList($itemName,$listname) {
		global $myPid;
		$rItemName = $myPid.'_'.$itemName;
		$rlistname = $myPid.'_'.$listname;
		$tokens[] = $rItemName ;
		$tokens[] = $rlistname;		
		$js = "addSubList( %s , %s );";
		eyeX('runjs',array('js'=>$js,'tokens'=>$tokens));
	}
	
	function addItem($listname,$itemName,$text) {
		global $myPid;
		$rItemName = $myPid.'_'.$itemName;
		$rlistname = $myPid.'_'.$listname;
		$tokens[] = $rlistname;
		$tokens[] = $rItemName ;		
		$tokens[] = $text;
		$js = "addItem( %s , %s , %s );";		
		eyeX('runjs',array('js'=>$js,'tokens'=>$tokens));
	}
	
	function processList() {
		global $myPid;
		$listname = $myPid.'_'.$this->name;
		$js ="processList(document.getElementById('$listname'));";
		eyeX('rawjs',array('js'=>$js));
	}
	
	//comunication functions
	function getSyncString() {
		global $myPid;
		return "eyeParam('$this->name',tree_".$myPid."_".$this->name.".getValue())";
	}
	
	//friends handler 
	function addFriend($friend) {
		if(method_exists($friend,'getSyncString')) {
			if($this->friends == "''") {
				$this->friends = $friend->getSyncString();				
			} else {
				$this->friends .= '+'.$friend->getSyncString();
			}
		}
	}
}

class TreeSelected {
	var $selected;
	var $name;
	
	function TreeSelected($params) {
		$this->name = $params['name'];
		$this->selected="";
	}
	
	function setValue($newText) {
		$this->selected = $newText;	
	}
	
	function addSubList($itemName,$listname) {
		global $myPid;
		$rItemName = $myPid.'_'.$itemName;
		$rlistname = $myPid.'_'.$listname;
		$tokens[] = $rItemName ;
		$tokens[] = $rlistname;		
		$js = "addSubList( %s , %s );";
		eyeX('runjs',array('js'=>$js,'tokens'=>$tokens));
	}	
	
	function addItem($listname,$itemName,$text) {
		global $myPid;
		$rItemName = $myPid.'_'.$itemName;
		$rlistname = $myPid.'_'.$listname;
		$tokens[] = $rlistname;
		$tokens[] = $rItemName ;		
		$tokens[] = $text;
		$js = "addItem( %s , %s , %s );";		
		eyeX('runjs',array('js'=>$js,'tokens'=>$tokens));
	}
	
	function processList() {
		global $myPid;
		$listname = $myPid.'_'.$this->name;
		$js ="processList(document.getElementById('$listname'));";
		eyeX('rawjs',array('js'=>$js));
	}
	
	function setCss($params) {
		global $myPid;
		if(is_array($params)) {
			foreach($params as $key => $value) {
				service('eyex','updateCss',array('name' => $myPid.'_'.$this->name,'property' => $key,'value' => $value));
			}
		}
	}
	
	function hide() {
		global $myPid;
		$this->visible = 0;
		service('eyex','rawjs',array('js' => 'document.getElementById("'.$myPid.'_'.$this->name.'_Container").style.display="none"'));
	}
	
	function unhide() {
		global $myPid;
		$this->visible = 1;
		service('eyex','rawjs',array('js' => 'document.getElementById("'.$myPid.'_'.$this->name.'_Container").style.display="block"'));
	}

	function setWidth($width) {
		global $myPid;
		$this->width = intval($width);
		service('eyex','rawjs',array('js' => 'document.getElementById("'.$myPid.'_'.$this->name.'_Container").style.width="'.$this->width.'px";'));
		service('eyex','rawjs',array('js' => 'document.getElementById("'.$myPid.'_'.$this->name.'").style.width="'.$this->width.'px";'));
	}
	
	function setHeight($height) {
		global $myPid;
		$this->height = intval($height);
		service('eyex','rawjs',array('js' => 'document.getElementById("'.$myPid.'_'.$this->name.'").style.height="'.$this->height.'px";'));
		service('eyex','rawjs',array('js' => 'document.getElementById("'.$myPid.'_'.$this->name.'_Container").style.height="'.$this->height.'px";'));
	}
	
	function setX($x) {
		global $myPid;
		$this->x = intval($x);
		service('eyex','rawjs',array('js' => 'document.getElementById("'.$myPid.'_'.$this->name.'_Container").style.left="'.$this->x.'px";'));
	}
	
	function setY($y) {
		global $myPid;
		$this->y = intval($y);
		service('eyex','rawjs',array('js' => 'document.getElementById("'.$myPid.'_'.$this->name.'_Container").style.top="'.$this->y.'px";'));
	}
	
	function remove() {
		global $myPid;
		$name = $this->name;
		service('eyex','removeWidget',array('name'=>$name));
		eyeWidgets('singleUnserialize',array($this->name));
	}
}

?>
