<?php
/*
                                  ____   _____ 
                                 / __ \ / ____|
                  ___ _   _  ___| |  | | (___  
                 / _ \ | | |/ _ \ |  | |\___ \ 
                |  __/ |_| |  __/ |__| |____) |
                 \___|\__, |\___|\____/|_____/ 
                       __/ |                   
                      |___/              1.2

                     Web Operating System
                           eyeOS.org

             eyeOS Engineering Team - eyeOS.org/whoarewe

     eyeOS is released under the GNU Affero General Public License Version 3 (AGPL3)
            provided with this release in license.txt
             or via web at gnu.org/licenses/agpl-3.0.txt

        Copyright 2005-2007 eyeOS Team (team@eyeos.org)

*/
/*
	Table widget abstraction
*/

class Table {
	
	//pid controller
	var $creatorPid;
	
	//global widgets options without default
	var $name;
	var $father;

	//generic widget options with default
	var $x;
	var $y;
	var $horiz;
	var $vert;
	var $cent;
	
	var $showed = 0;
	
	//custom widget options
	var $height;
	var $width;
	var $visible;
	var $theader;
	var $sizeUnit;
	var $border;
	var $spacing;
	var $padding;
	var $cssClass;

	function Table($params) {
		global $myPid;
		$this->creatorPid = $myPid;
		//generic widget options without default
		$this->name = $params['name'];
		$this->father = $params['father'];

		//generic widget options with default
		isset($params['horiz']) ? $this->horiz = $params['horiz'] : $this->horiz = 0;
		isset($params['vert']) ? $this->vert = $params['vert'] : $this->vert = 0;
		isset($params['x']) ? $this->x = $params['x'] : $this->x = 10;
		isset($params['y']) ? $this->y = $params['y'] : $this->y = 10;
		isset($params['cent']) ? $this->cent = $params['cent'] : $this->cent = 0;
		
		//especific button options	
		isset($params['height']) ? $this->height = $params['height'] : $this->height = 100;
		isset($params['width']) ? $this->width = $params['width'] : $this->width = 100;
		isset($params['visible']) ? $this->visible = $params['visible'] : $this->visible = 1;
		isset($params['theader']) ? $this->theader = $params['theader'] : $this->theader = "";
		isset($params['sizeUnit']) ? $this->sizeUnit = $params['sizeUnit'] : $this->sizeUnit = 'px';
		isset($params['border']) ? $this->border = intval($params['border']) : $this->border = 1;
		isset($params['spacing']) ? $this->spacing = intval($params['spacing']) : $this->spacing = 1;
		isset($params['padding']) ? $this->padding = intval($params['padding']) : $this->padding = 1;
		isset($params['cssClass']) ? $this->cssClass = $params['cssClass'] : $this->cssClass = 'eyeTable';
	}
	
	function show() {
		if(is_array($this->theader)) {
			$newHeader = array();
			foreach($this->theader as $value) {
				$newHeader[] = htmlentities(i18n('translate',array($value)),ENT_QUOTES,'UTF-8');
			}
			$this->theader = $newHeader;
		}
		$myHeader = service("mmap","array2jsArg",array($this->theader));
		$widgetsparams = array(
			'visible' => $this->visible,
			'theader' => $myHeader,
			'height' => $this->height,
			'width' => $this->width,
			'sizeUnit' => $this->sizeUnit,
			'border' => $this->border,
			'cssClass' => $this->cssClass,
			'spacing' => $this->spacing,
			'padding' => $this->padding
		);
		$widgetsparams = service("mmap","array2js",array($widgetsparams));
		
		$myTable = array(
			'name' => $this->name,
			'x' => $this->x,
			'y' => $this->y,
			'horiz' => $this->horiz,
			'vert' => $this->vert,
			'father' => $this->father,
			'widgetname' => 'Table',
			'params' => $widgetsparams,
			'center' => $this->cent
		);
		eyeX('createWidget',$myTable);
		$this->showed=1;
	}
	
	function setCss($params) {
		global $myPid;
		if(is_array($params)) {
			foreach($params as $key => $value) {
				service('eyex','updateCss',array('name' => $myPid.'_'.$this->name,'property' => $key,'value' => $value));
			}
		}
	}
	
	//event handling
	function addEvent($eventName,$eventFunc,$args="") {
		global $myPid;
		$name = $myPid.'_'.$this->name;
		if($this->showed == 0) {
			$this->show();
		}
		service('eyex','addEvent',array('name' => $name, 'action' => $eventFunc, 'event' => $eventName,'args'=>$args));
	}
	
	//comunication functions
	function getSyncString() {
		global $myPid;
		return "eyeParam('$this->name',table_".$myPid."_".$this->name.".getSelectValue($this->master))";
	}
	
	//custom functions
	
	function addRow($params){
		global $myPid;
		$name = 'table_'.$myPid.'_'.$this->name;
		for($i=0;$i<count($params);$i++) {
			$params[$i] = htmlentities($params[$i],ENT_QUOTES,'UTF-8');
		}
		$rows = mmap('array2jsArg',array($params));
		eyeX('messageBox', array('content' => 'Name: '.$name.' Rows: '.$rows));
		eyeX('rawjs',array('js' => "Table_addRow('$name','$rows');"));
	}

	function delRow($params) {
		global $myPid;
		$name = 'table_'.$myPid.'_'.$this->name;
		$params = addslashes($params);
		eyeX('rawjs',array('js' => "if($name){".$name.".delEntry('$params');}"));
	}
	
	function setValue($newText) {
		$this->text = $newText;	
	}
	function setX($x) {
		global $myPid;
		$this->x = intval($x);
		eyeX('rawjs',array('js' => 'document.getElementById("'.$myPid.'_'.$this->name.'_Container").style.left="'.$this->x.'px";'));
	}
	
	function setY($y) {
		global $myPid;
		$this->y = intval($y);
		service('eyex','rawjs',array('js' => 'document.getElementById("'.$myPid.'_'.$this->name.'_Container").style.top="'.$this->y.'px";'));
	}
	function setWidth($width) {
		global $myPid;
		$this->width = intval($width);
		service('eyex','rawjs',array('js' => 'document.getElementById("'.$myPid.'_'.$this->name.'_Container").style.width="'.$this->width.'px";'));
		service('eyex','rawjs',array('js' => 'document.getElementById("'.$myPid.'_'.$this->name.'").style.width="'.$this->width.'px";'));
	}
	
	function setHeight($height) {
		global $myPid;
		$this->height = intval($height);
		service('eyex','rawjs',array('js' => 'document.getElementById("'.$myPid.'_'.$this->name.'").style.height="'.$this->height.'px";'));
		service('eyex','rawjs',array('js' => 'document.getElementById("'.$myPid.'_'.$this->name.'_Container").style.height="'.$this->height.'px";'));
	}
	
	function hide() {
		global $myPid;
		$this->visible = 0;
		service('eyex','rawjs',array('js' => 'document.getElementById("'.$myPid.'_'.$this->name.'_Container").style.display="none"'));
	}
	
	function unhide() {
		global $myPid;
		$this->visible = 1;
		service('eyex','rawjs',array('js' => 'document.getElementById("'.$myPid.'_'.$this->name.'_Container").style.display="block"'));
	}
	
	function remove() {
		global $myPid;
		$name = $this->name.'_Container';
		service('eyex','removeWidget',array('name'=>$name));
	}
}
?>