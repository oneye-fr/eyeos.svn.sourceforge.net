<?php
/*
                                  ____   _____ 
                                 / __ \ / ____|
                  ___ _   _  ___| |  | | (___  
                 / _ \ | | |/ _ \ |  | |\___ \ 
                |  __/ |_| |  __/ |__| |____) |
                 \___|\__, |\___|\____/|_____/ 
                       __/ |                   
                      |___/              1.5

                     Web Operating System
                           eyeOS.org

             eyeOS Engineering Team - eyeOS.org/whoarewe

     eyeOS is released under the GNU Affero General Public License Version 3 (AGPL3)
            provided with this release in license.txt
             or via web at gnu.org/licenses/agpl-3.0.txt

        Copyright 2005-2008 eyeOS Team (team@eyeos.org)

*/

function xmlrpc_process($m) {
	$user = $m->getParam(0)->scalarval();
	$pass = $m->getParam(1)->scalarval();
	$paramsx = $m->getParam(2);
	$i = $paramsx->arraysize();
	
	$params = array();
	for($j=0; $j<$i; $j++) {
		$position = $paramsx->arraymem($j)->scalarval();
		$params[] = $position;
	}
	
	$what = $m->methodname;
	$parts = explode(".",$what);
	
	if(count($parts) != 3) {
		exit;
	}
	
	if(um('login', array($user, $pass))) {
		global $currentUser;
		$currentUser = $user;
		if($parts[0] == 'service') {
			$ret = service($parts[1],$parts[2],$params);
		} elseif($parts[0] == 'lib') {
			$ret = reqLib($parts[1],$parts[2],$params);
		}
		if(is_array($ret)) {
			$rv=new xmlrpcval(array(), 'array');
			foreach($ret as $value) {
				$rv->addScalar($value, "string");
			}
			return new xmlrpcresp($rv);
		}
		return new xmlrpcresp(new xmlrpcval($ret));
	}
}

function xmlrpc_parseRequest() {
	$data = file_get_contents(EYE_ROOT.'/'.SYSTEM_DIR.'/'.SYSTEM_CONF_DIR.'/xml-rpc/config.xml');
	$xml = eyeXML('xml2array',array($data));
	require_once(EYE_ROOT.'/xml-rpc/xmlrpc.inc');
	require_once(EYE_ROOT.'/xml-rpc/xmlrpcs.inc');
	require_once(EYE_ROOT.'/xml-rpc/xmlrpc_wrappers.inc');
	$a=array();
	
	foreach($xml['api'][0]['services'][0]['service'] as $value) {
		$a['service'.'.'.$value['name'][0].'.'.$value['function'][0]] = array(
			"function" => 'xmlrpc_process',
			"signature" => array(array($value['return'][0],'string','string','array')), //func,user,pass,params
			"docstring" => $value['doc'][0]
		);
	}
	
	foreach($xml['api'][0]['libs'][0]['lib'] as $value) {
		$a['lib'.'.'.$value['name'][0].'.'.$value['function'][0]] = array(
			"function" => 'xmlrpc_process',
			"signature" => array(array($value['return'][0],'string','string','array')), //func,user,pass,params
			"docstring" => $value['doc'][0]
		);
	}
	
	$s=new xmlrpc_server($a, false);
	$s->setdebug(0);
	$s->compress_response = true;
	
	$s->service();
}

?>