<?xml version="1.0" encoding="UTF-8"?>
<!-- This document is licensed under the Creative Commons 3.0 BY-NC-ND License
	 available at http://creativecommons.org/licenses/by-nc-nd/3.0/. -->
<info>
	<type>Widget</type>
	<general>
		<name>Tab</name>
		<name>TabBar</name>
		<tags>
			<tag>widget</tag>
		</tags>
		<shortDesc>Allows to switch between pages in a space.</shortDesc>
	</general>
	<name>Tab</name>
	<description>The Tab widget is very useful for separating heterogeneous contents of an application. It consists in a bar containing the different tabs, each one containing its own content independently from the others. Tabs can also be added or removed at any time, and it is even possible to make some tabs closable by the user.</description>
	<image>Two tabs in the eyeUpload application.</image>
	<generic_keys>
		<key>
			<name>name</name>
			<desc>Unique name given to the widget.</desc>
		</key>
		<key>
			<name>father</name>
			<desc>Parent element inside of which the widget is created.</desc>
		</key>
		<key>
			<name>horiz</name>
			<desc>Specifies whether its horizontal coordinate must be taken from the left (0) or the right (1) border of its father element. Default value is 0 (left positioning).</desc>
		</key>
		<key>
			<name>vert</name>
			<desc>Specifies whether its vertical coordinate must be taken from the upper (0) or from the bottom (1) border of its father element. Default value is 0 (upper positioning).</desc> 
		</key>
		<key>
			<name>visible</name>
			<desc>Sets the widget visibility. Possible values are 0 (hidden) or 1 (visible). Default value is 1.</desc>
		</key>
		<key>
			<name>x</name>
			<desc>Specifies the horizontal displacement inside its father element, in pixels. Default value is 10 pixels.</desc> 
		</key>
		<key>
			<name>y</name>
			<desc>Specifies the vertical displacement inside its father element, in pixels. Default value is 10 pixels.</desc> 
		</key>
		<key>
			<name>cent</name>
			<desc>
			Specifies how the widget should be centered. Possible values are:
			 0: no centering. This is the default value.
			 1: center both horizontal and vertically.
			 2: center horizontally.
			 3: center vertically.
			 4: place the widget at the horizontal and vertical center of its container element.
			 5: place the widget at the horizontal center of its container element.
			 6: place the widget at the vertical center of its container element. 

			Please note the difference between options 1-3 and options 4-6. Options 1-3 calculate the size of the widget to ensure that the center of the widget is placed at the central point of its container, while options 4-6 set the central point coordinates as the widget's position, thus making the widget displaced from the central point.
			</desc>
		</key>
		<key>
			<name>width</name>
			<desc>Sets the width of the widget, in the desired size unit. Default width is 200 pixels.</desc>
		</key>
		<key>
			<name>height</name>
			<desc>Sets the height of the widget, in the desired size unit. Default height is 200 pixels.</desc>
		</key> 
	</generic_keys>
	<specific_keys>
		<key>
			<name>signal</name>
			<desc>Specifies the signal to be sent to the system every time a tab is clicked.</desc>
		</key>
	</specific_keys>
	<methods>
		<method>
			<syntax>addEvent(string $eventName, string $eventFunc[, string $args = ''])</syntax>
			<desc>Makes the system execute a given JavaScript code every time certain event of this widget is triggered.</desc>
			<arguments>
				<arg>
					<name>eventName</name>
					<desc>Name of the JS event. Examples: onchange, onmouseup.</desc>
				</arg>
				<arg>
					<name>eventFunc</name>
					<desc>JavaScript code inside the function of the event.</desc>
				</arg>
				<arg>
					<name>args</name>
					<desc>Arguments passed to the function of the event.</desc>
				</arg>
			</arguments>
		</method>
		<method>
			<syntax>addFriendChild(object $friend, string $tab)</syntax>
			<desc>Adds a friend to one of the tabs.</desc>
			<arguments>
				<arg>
					<name>friend</name>
					<desc>Friend widget.</desc>
				</arg>
				<arg>
					<name>tab</name>
					<desc>Name of the tab.</desc>
				</arg>
			</arguments>
		</method>
		<method>
			<syntax>addTab(string $tabname, int $noclose=0)</syntax>
			<desc>Adds a new tab.</desc>
			<arguments>
				<arg>
					<name>tabname</name>
					<desc>Name of the new tab.</desc>
				</arg>
				<arg>
					<name>noclose</name>
					<desc>Specifies whether or not the tab is closable. A value different from zero makes the tab unclosable.</desc>
				</arg>
			</arguments>
		</method>
		<method>
			<syntax>string getRealNameByName(string $tabname)</syntax>
			<desc>Returns the internal name from the visible name of a tab.</desc>
			<arguments>
				<arg>
					<name>tabname</name>
					<desc>Visible name of the tab.</desc>
				</arg>
			</arguments>
		</method>
		<method>
			<syntax>hide()</syntax>
			<desc>Makes the widget invisible.</desc>
		</method>
		<method>
			<syntax>remove()</syntax>
			<desc>Removes this widget, along with its child widgets.</desc>
		</method>
		<method>
			<syntax>removeTab($tabid)</syntax>
			<desc>Removes a tab.</desc>
			<arguments>
				<arg>
					<name>tabid</name>
					<desc>Name of the tab to be closed.</desc>
				</arg>
			</arguments>
		</method>
		<method>
			<syntax>selectTab(string $tabName)</syntax>
			<desc>Displays the contents of a tab.</desc>
			<arguments>
				<arg>
					<name>tabName</name>
					<desc>Name of the tab to select.</desc>
				</arg>
			</arguments>
		</method>
		<method>
			<syntax>setCss(array $params)</syntax>
			<desc>Sets CSS atributes to a widget.</desc>
			<arguments>
				<arg>
					<name>params</name>
					<desc>Specifies, in the form of an associative array, the CSS attributes to be applied. Both the key and value of each element must be valid CSS properties and values respectively.</desc>
				</arg>
			</arguments>
		</method>
		<method>
			<syntax>setHeight(int $height)</syntax>
			<desc>Changes the height of the widget.</desc>
			<arguments>
				<arg>
					<name>height</name>
					<desc>New height, in pixels.</desc>
				</arg>
			</arguments>
		</method>
		<method>
		 	<syntax>setWidth(int $width)</syntax>
			<desc>Changes the width of the widget.</desc>
			<arguments>
				<arg>
					<name>width</name>
					<desc>New width, in pixels.</desc>
				</arg>
			</arguments>
		</method>
		<method>
			<syntax>setX(int $x)</syntax>
			<desc>Changes the horizontal position of the widget.</desc>
			<arguments>
				<arg>
					<name>x</name>
					<desc>New X coordinate.</desc>
				</arg>
			</arguments>
		</method>
		<method>
			<syntax>setY(int $y)</syntax>
			<desc>Changes the vertical position of the widget.</desc>
			<arguments>
				<arg>
					<name>y</name>
					<desc>New Y coordinate.</desc>
				</arg>
			</arguments>
		</method>
		<method>
			<syntax>show(int $noserialize = 0)</syntax>
			<desc>Draws the widget in the screen, allowing to serialize the instance in the session.</desc>
			<arguments>
				<arg>
					<name>noserialize</name>
					<desc>Specifies whether the Tab must be serialized or not. The default value of 0serializes it, while a value of 1 does not.</desc>
				</arg>
			</arguments>
		</method>
		<method>
			<syntax>unhide()</syntax>
			<desc>Makes the widget visible.</desc>
		</method>
	</methods>
	<changelog>
		<trace>
			<version>1.6</version>
			<desc>The new method getRealNameByName() has been added.</desc>
		</trace>
	</changelog>
</info>
