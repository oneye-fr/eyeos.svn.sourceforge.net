<?php
/*
  ___  _ __   ___ _   _  ___
 / _ \| '_ \ / _ \ | | |/ _ \
| (_) | | | |  __/ |_| |  __/
 \___/|_| |_|\___|\__, |\___|
                  |___/

oneye is released under the GNU Affero General Public License Version 3 (AGPL3)
 -> provided with this release in license.txt
 -> or via web at www.gnu.org/licenses/agpl-3.0.txt

Copyright © 2005 - 2010 eyeos Team (team@eyeos.org)
             since 2010 Lars Knickrehm (mail@lars-sh.de)
*/

if(isset($_REQUEST['receive'])) {
	$file = $_REQUEST['receive'];
	$uri = $_REQUEST['uri'];
	
	$http = eyeURL('getHTTPClient');
	$http->setURL($uri);
	$http->sendRequest();
	if ($http->getResponseBody()) {
		$path = eyeFiles('cleanPath', array($userPath));
		$path[0] .= '/' . utf8_basename($file);
		
		// If a file with that name already exists
		$c = 0;
		while (($path[1] == 'real' && vfs('real_fileExists',array($path[0]))) || ($path[1] != 'real' && vfs('fileExists',array($path[0])))) {
			$extPos = utf8_strripos($path[0],".");
			if ($c > 0) {
				$path[0] = utf8_substr($path[0],0, utf8_strripos($path[0],"_")) . "_" . $c . utf8_substr($path[0],$extPos);
			} else {
				$path[0] = utf8_substr($path[0],0,$extPos) . "_" . $c . utf8_substr($path[0],$extPos);
			}
			$c++;
		}

		if ($path[1] == 'real') {
			vfs('real_create',array($path[0]));
			vfs('real_putFileContent',array($path[0],$http->getResponseBody()));
		} else {
			vfs('create',array($path[0]));
			vfs('writeFile',array($path[0],$http->getResponseBody()));
		}
	}
} elseif(isset($_REQUEST['send'])) {
	$tDir = um('getCurrentUserDir') . 'tmp/crossShare';
	mkdir($tDir, 0777, true);
	
	$rFile = vfs('getRealName', array($dir.$_REQUEST['send']));
	$tFile = $tDir . '/' . dechex(time());
	copy($rFile,$tFile);
	
	$jsOut = "parent.postMessage('". $_REQUEST['send'] .",". REAL_EYE_ROOT . utf8_substr($tFile,1) ."', '*')";
	//$jsOut = "parent.postMessage('error,". REAL_EYE_ROOT . utf8_substr($tFile,1) ."', '*')";
}
?>