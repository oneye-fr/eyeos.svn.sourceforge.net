<?php
/*
                                  ____   _____
                                 / __ \ / ____|
                  ___ _   _  ___| |  | | (___
                 / _ \ | | |/ _ \ |  | |\___ \
                |  __/ |_| |  __/ |__| |____) |
                 \___|\__, |\___|\____/|_____/
                       __/ |
                      |___/              1.8

                     Web Operating System
                           eyeOS.org

             eyeOS Engineering Team - www.eyeos.org/team

     eyeOS is released under the GNU Affero General Public License Version 3 (AGPL3)
            provided with this release in license.txt
             or via web at gnu.org/licenses/agpl-3.0.txt

        Copyright 2005-2009 eyeOS Team (team@eyeos.org)
*/

function eyeControl_on_groups_new($params = '') {
	$myWindow = new Window(array(
		'cent' => 1,
		'father' => 'eyeControl_container_big',
		'height' => 180,
		'name' => 'eyeControl_groups_create_window',
		'removepid' => 0,
		'style' => TITLE + CLOSE,
		'title' => 'Create group',
		'width' => 390
	));
	$myWindow->show();
	$myImagebox = new ImageBox(array(
		'father' => 'eyeControl_groups_create_window_Content',
		'name' => 'eyeControl_groups_create_window_Imagebox',
		'url' => 'index.php?version=' . EXTERN_CACHE_VERSION . '&theme=1&extern=icons/48x48/groups.png',
		'x' => 20,
		'y' => 20,
	));
	$myImagebox->show();
	$myLabel = new Label(array(
		'father' => 'eyeControl_groups_create_window_Content',
		'horiz' => 1,
		'name' => 'eyeControl_groups_create_window_Label',
		'text' => 'Type the name of the group you want to create:',
		'x' => 20,
		'y' => 20
	));
	$myLabel->show();
	$myLabel->setCss(array(
		'text-align' => 'justify',
		'width' => '275px'
	));
	$myTextbox = new Textbox(array(
		'father' => 'eyeControl_groups_create_window_Content',
		'horiz' => 1,
		'name' => 'eyeControl_groups_create_textbox',
		'width' => 275,
		'x' => 20,
		'y' => 55
	));
	$myTextbox->show();
	$myTextbox->focus();
	$myTextbox->addEnterEventMsg('groups_create');
	$myCheckbox = new Checkbox(array(
		'name' => 'eyeControl_groups_create_checkbox',
		'father' => 'eyeControl_groups_create_window_Content',
		'horiz' => 1,
		'x' => 20,
		'y' => 80,
		'text' => 'Allow its members to send messages to groups',
		'checked' => 1
	));
	$myCheckbox->show();
	
	$myButton = new Button(array(
		'caption' => 'Accept',
		'father' => 'eyeControl_groups_create_window_Content',
		'horiz' => 1,
		'name' => 'groups_create',
		'signal' => 'groups_create',
		'y' => 120,
		'x' => 20
	));
	$myButton->addFriend($myTextbox);
	$myButton->addFriend($myCheckbox);
	$myButton->show();
	$myButton2 = new Button(array(
		'caption' => 'Cancel',
		'father' => 'eyeControl_groups_create_window_Content',
		'horiz' => 1,
		'name' => 'groups_create_cancel',
		'signal' => 'groups_create_cancel',
		'y' => 120,
		'x' => 100
	));
	$myButton2->addFriend($myTextbox);
	$myButton2->show();
}

function eyeControl_on_groups_create($params = '') {
	global $currentUser;
	
	if ($currentUser != ROOTUSER && !um('checkMaintainer',array(eyeControl_lib_getConfigUser()))) {
		eyex('messageBox',array('content' => 'You are not allowed to manage groups!'));
		eyeControl_lib_loadContent();
		return;
	} elseif (um('checkMaintainer',array(eyeControl_lib_getConfigUser()))) {
		$myUserXml = um('retrieveUser',array(eyeControl_lib_getConfigUser()));
	}
	
	$group = $GLOBALS['eyeControl_groups_create_textbox']->text;
	$dir = EYE_ROOT . '/' . GROUPS_DIR . '/' . $group . '/';
	if (preg_match("/^[-_a-zA-Z0-9]+$/",$group) && !vfs('real_fileExists',array($dir))) {
		$oldUser = $currentUser;
		if (um('checkMaintainer',array(eyeControl_lib_getConfigUser()))) {
			$currentUser = ROOTUSER;
			$myUserXml['eyeUser'][0]['group'][] = $group;
			$myUserXml['eyeUser'][0]['maintain'][] = $group;
			um('updateUser',array(
				'username' => $oldUser,
				'groups' => $myUserXml['eyeUser'][0]['group'],
				'maintain' => $myUserXml['eyeUser'][0]['maintain']
			));
			if ($oldUser == eyeControl_lib_getConfigUser()) {
				$_SESSION['groups'][$group] = 1;
			}
		}
		vfs('real_mkdir',array($dir));
		vfs('real_mkdir',array($dir . CONF_GROUP_DIR . '/'));
		vfs('real_create',array($dir . CONF_GROUP_DIR . '/eyeMessages.xml'));
		vfs('real_putFileContent',array($dir . CONF_GROUP_DIR . '/eyeMessages.xml','<allow_send>'.$GLOBALS['eyeControl_groups_create_checkbox']->checked.'</allow_send>'));
		vfs('real_mkdir',array($dir . FILES_GROUP_DIR . '/'));
		$currentUser = $oldUser;
		eyeControl_lib_loadContent('only_root','groups');
	} elseif (vfs('real_fileExists',array($dir))) {
		eyex('messageBox',array('content' => 'The selected group already exists!'));
	} else {
		eyex('messageBox',array('content' => 'Please type a correct group name!'));
	}
}

function eyeControl_on_groups_create_cancel($params = '') {
	$GLOBALS['eyeControl_groups_create_window']->close();
}

function eyeControl_on_groups_edit($params = '') {
	$group = $GLOBALS['eyeControl_groups_sortabletable']->selected;
	if ($group) {
		$temp = eyeXML('getXMLfile',array(EYE_ROOT.'/'.GROUPS_DIR.'/'.$group.'/'.CONF_GROUP_DIR.'/eyeMessages.xml'));
		$myWindow = new Window(array(
			'cent' => 1,
			'father' => 'eyeControl_container_big',
			'height' => 180,
			'name' => 'eyeControl_groups_edit_window',
			'removepid' => 0,
			'style' => TITLE + CLOSE,
			'title' => 'Edit group',
			'width' => 390
		));
		$myWindow->show();
		$myImagebox = new ImageBox(array(
			'father' => 'eyeControl_groups_edit_window_Content',
			'name' => 'eyeControl_groups_edit_window_Imagebox',
			'url' => 'index.php?version=' . EXTERN_CACHE_VERSION . '&theme=1&extern=icons/48x48/groups.png',
			'x' => 20,
			'y' => 20,
		));
		$myImagebox->show();
		$myLabel = new Label(array(
			'father' => 'eyeControl_groups_edit_window_Content',
			'horiz' => 1,
			'name' => 'eyeControl_groups_edit_window_Label',
			'text' => 'Type the new group\'s name:',
			'x' => 20,
			'y' => 20
		));
		$myLabel->show();
		$myLabel->setCss(array(
			'text-align' => 'justify',
			'width' => '275px'
		));
		$myTextbox = new Textbox(array(
			'father' => 'eyeControl_groups_edit_window_Content',
			'horiz' => 1,
			'name' => 'eyeControl_groups_edit_textbox',
			'width' => 275,
			'x' => 20,
			'y' => 55,
			'text'=>$group
		));
		$myTextbox->show();
		$myTextbox->focus();
		$myTextbox->addEnterEventMsg('groups_create');
		$myCheckbox = new Checkbox(array(
			'name' => 'eyeControl_groups_edit_checkbox',
			'father' => 'eyeControl_groups_edit_window_Content',
			'horiz' => 1,
			'x' => 20,
			'y' => 80,
			'text' => 'Allow its members to send messages to groups',
			'checked' => $temp['allow_send'][0]
		));
		$myCheckbox->show();
		$myHidden = new Hidden(array(
			'father' => 'eyeControl_groups_edit_window_Content',
			'name' => 'eyeControl_groups_edit_hidden',
			'text' => $group
		));
		$myHidden->show();
		$myButton = new Button(array(
			'caption' => 'Accept',
			'father' => 'eyeControl_groups_edit_window_Content',
			'horiz' => 1,
			'name' => 'groups_edit2',
			'signal' => 'groups_edit2',
			'y' => 120,
			'x' => 20
		));
		$myButton->addFriend($myHidden);
		$myButton->addFriend($myTextbox);
		$myButton->addFriend($myCheckbox);
		$myButton->show();
		$myButton2 = new Button(array(
			'caption' => 'Cancel',
			'father' => 'eyeControl_groups_edit_window_Content',
			'horiz' => 1,
			'name' => 'groups_edit_cancel',
			'signal' => 'groups_edit_cancel',
			'y' => 120,
			'x' => 100
		));
		$myButton2->addFriend($myTextbox);
		$myButton2->show();
	} else {
		eyex('messageBox',array('content' => 'Please choose a group to edit.'));
	}
}

function eyeControl_on_groups_edit2($params = '') {
	global $currentUser;
	
	if (um('checkMaintainer',array(eyeControl_lib_getConfigUser()))) {
		$myUserXml = um('retrieveUser',array(eyeControl_lib_getConfigUser()));
	}
	
	$group_old = $GLOBALS['eyeControl_groups_edit_hidden']->text;
	
	if ($currentUser != ROOTUSER && !um('checkMaintainer',array(eyeControl_lib_getConfigUser())) || um('checkMaintainer',array(eyeControl_lib_getConfigUser())) && !in_array($group_old,$myUserXml['eyeUser'][0]['maintain'])) {
		eyex('messageBox',array('content' => 'You are not allowed to manage groups!'));
		eyeControl_lib_loadContent();
		return;
	}
	
	$group_new = $GLOBALS['eyeControl_groups_edit_textbox']->text;
	$dir_old = EYE_ROOT . '/' . GROUPS_DIR . '/' . $group_old . '/';
	$dir_new = EYE_ROOT . '/' . GROUPS_DIR . '/' . $group_new . '/';
	if (preg_match("/^[-_a-zA-Z0-9]+$/",$group_new) && !vfs('real_fileExists',array($dir_new))) {
		$oldUser = $currentUser;
		if (um('checkMaintainer',array(eyeControl_lib_getConfigUser()))) {
			$currentUser = ROOTUSER;
			foreach ($myUserXml['eyeUser'][0]['group'] as $value) {
				if ($value != $group_old) {
					$array[] = $value;
				}
			}
			$array[] = $group_new;
			foreach ($myUserXml['eyeUser'][0]['maintain'] as $value) {
				if ($value != $group_old) {
					$maintain[] = $value;
				}
			}
			$maintain[] = $group_new;
			um('updateUser',array(
				'username' => $oldUser,
				'group' => $array,
				'maintain' => $maintain
			));
		}
		
		vfs('real_move',array($dir_old,$dir_new));
		if ($group_old == DEFAULT_GROUP) {
			$file = EYE_ROOT . '/' . SYSTEM_DIR . '/' . SYSTEM_CONF_DIR . '/' . 'system.xml';
			$XML = eyeXML('getXMLfile',array($file));
			$XML['CONFIG'][0]['DEFAULT_GROUP'][0] = $group_new;
			eyeXML('setXMLFile',array($file,$XML));
		}
		if ($_SESSION['groups'][$group_old] && $oldUser == eyeControl_lib_getConfigUser()) {
			unset($_SESSION['groups'][$group_old]);
			$_SESSION['groups'][$group_new] = 1;
		}
		$temp = eyeXML('getXMLfile',array(EYE_ROOT.'/'.GROUPS_DIR.'/'.$group_new.'/'.CONF_GROUP_DIR.'/eyeMessages.xml'));
		$temp['allow_send'][0]=$GLOBALS['eyeControl_groups_edit_checkbox']->checked;
		eyeXML('setXMLfile',array(EYE_ROOT.'/'.GROUPS_DIR.'/'.$group_new.'/'.CONF_GROUP_DIR.'/eyeMessages.xml',$temp));
		$currentUser = $oldUser;
		eyeControl_lib_loadContent('only_root','groups');
	} elseif (vfs('real_fileExists',array($dir_new))) {
		$temp = eyeXML('getXMLfile',array(EYE_ROOT.'/'.GROUPS_DIR.'/'.$group_new.'/'.CONF_GROUP_DIR.'/eyeMessages.xml'));
		$temp['allow_send'][0]=$GLOBALS['eyeControl_groups_edit_checkbox']->checked;
		eyeXML('setXMLfile',array(EYE_ROOT.'/'.GROUPS_DIR.'/'.$group_new.'/'.CONF_GROUP_DIR.'/eyeMessages.xml',$temp));
		eyeControl_lib_loadContent('only_root','groups');
	} else {
		eyex('messageBox',array('content' => 'Please type a correct group name!'));
	}
}

function eyeControl_on_groups_edit_cancel($params = '') {
	$GLOBALS['eyeControl_groups_edit_window']->close();
}

function eyeControl_on_groups_default($params = '') {
	$group = $GLOBALS['eyeControl_groups_sortabletable']->selected;
	if ($group && $group != DEFAULT_GROUP) {
		$File = EYE_ROOT . '/' . SYSTEM_DIR . '/' . SYSTEM_CONF_DIR . '/' . 'system.xml';
		$XML = eyeXML('getXMLfile',array($File));
		$XML['CONFIG'][0]['DEFAULT_GROUP'][0] = $group;
		eyeXML('setXMLFile',array($File,$XML));
		eyex('messageBox',array('content' => 'Default group successfully saved. You need to restart your session now.'));
	} elseif ($group == DEFAULT_GROUP) {
		eyex('messageBox',array('content' => 'The chosen group is already the default group!'));
	} else {
		eyex('messageBox',array('content' => 'Please choose a group to set it as default group.'));
	}
}

function eyeControl_on_groups_delete($params = '') {
	$group = $GLOBALS['eyeControl_groups_sortabletable']->selected;
	if ($group && $group != DEFAULT_GROUP) {
		eyex('messageBox',array(
			'buttons' => array(array('groups_delete_yes','Yes'),array('groups_delete_no','No')),
			'content' => 'Do you really want to remove this group from the system?',
			'father' => 'eyeControl_container_big',
			'hiddens' => array(array('groups_delete_hidden',$group)),
			'img' => 'index.php?version=' . EXTERN_CACHE_VERSION . '&theme=1&extern=icons/48x48/editClean.png',
			'title' => 'Delete group',
			'type' => 3,
			'win_name' => 'eyeControl_groups_delete_window',
			'win_removepid' => 0,
			'win_style' => TITLE + CLOSE
		));
	} elseif ($group == DEFAULT_GROUP) {
		eyex('messageBox',array('content' => 'You cannot delete the default group!'));
	} else {
		eyex('messageBox',array('content' => 'Please choose a group to delete.'));
	}
}

function eyeControl_on_groups_delete_yes($params = '') {
	global $currentUser;
	
	if (um('checkMaintainer',array(eyeControl_lib_getConfigUser()))) {
		$myUserXml = um('retrieveUser',array(eyeControl_lib_getConfigUser()));
	}
	
	$group = $GLOBALS['groups_delete_hidden']->text;
	
	if ($currentUser != ROOTUSER && !um('checkMaintainer',array(eyeControl_lib_getConfigUser())) || um('checkMaintainer',array(eyeControl_lib_getConfigUser())) && !in_array($group,$myUserXml['eyeUser'][0]['maintain'])) {
		eyex('messageBox',array('content' => 'You are not allowed to manage groups!'));
		eyeControl_lib_loadContent();
		return;
	}
	
	if ($group && $group != DEFAULT_GROUP) {
		$oldUser = $currentUser;
		if (um('checkMaintainer',array(eyeControl_lib_getConfigUser()))) {
			$currentUser = ROOTUSER;
		}
		
		if (vfs('real_rmdir',array(EYE_ROOT . '/' . GROUPS_DIR . '/' . $group . '/'))) {
			if ($oldUser != ROOTUSER) {
				$array = array();
				foreach ($myUserXml['eyeUser'][0]['group'] as $value) {
					if ($value != $group) {
						$array[] = $value;
					}
				}
				$maintain = array();
				foreach ($myUserXml['eyeUser'][0]['maintain'] as $value) {
					if ($value != $group) {
						$maintain[] = $value;
					}
				}
				um('updateUser',array(
					'username' => $oldUser,
					'group' => $array,
					'maintain' => $maintain
				));
			}
			if ($_SESSION['groups'][$group] && $oldUser == eyeControl_lib_getConfigUser()) {
				unset($_SESSION['groups'][$group]);
			}
			eyex('messageBox',array('content' => 'Group successfully deleted.'));
			$currentUser = $oldUser;
			eyeControl_lib_loadContent('only_root','groups');
		} else {
			eyex('messageBox',array('content' => 'There was a problem while deleting the group.'));
			$currentUser = $oldUser;
		}
	}
}

function eyeControl_on_groups_delete_no($params = '') {
	$GLOBALS['eyeControl_groups_delete_window']->close();
}

function eyeControl_on_groups_users($params = '') {
	$group = $GLOBALS['eyeControl_groups_sortabletable']->selected;
	proc('launch',array('eyeControl',array(
		'category' => 'only_root',
		'content' => 'users',
		'contentParams' => array('/g'.$group),
		'hidemenu' => 1
	)));
}

function eyeControl_on_groups_search($params = '') {
	if($GLOBALS['eyeControl_groups_search']->text!='')eyeControl_lib_loadContent('only_root','groups',$GLOBALS['eyeControl_groups_search']->text);
}

?>
