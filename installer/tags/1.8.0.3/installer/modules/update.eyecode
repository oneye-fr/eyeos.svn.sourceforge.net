<?php/*                                  ____   _____                                 / __ \ / ____|                  ___ _   _  ___| |  | | (___                 / _ \ | | |/ _ \ |  | |\___ \                |  __/ |_| |  __/ |__| |____) |                 \___|\__, |\___|\____/|_____/                       __/ |                      |___/              1.8                     Web Operating System                           eyeOS.org             eyeOS Engineering Team - www.eyeos.org/team     eyeOS is released under the GNU Affero General Public License Version 3 (AGPL3)            provided with this release in license.txt             or via web at gnu.org/licenses/agpl-3.0.txt        Copyright 2005-2009 eyeOS Team (team@eyeos.org)*/include_once('./settings.php');if (check_versions(EYEOS_VERSION,'1.5.0.0') == 2) {	output_errors(array(lang_translate('installer-update-error-under15','This updater is only for eyeOS version 1.5 and higher. You are using eyeOS [version1]. Please update to eyeOS 1.5 before updating to eyeOS [version2].',array('[version1]' => EYEOS_VERSION,'[version2]' => INSTALL_VERSION))));} elseif ($_REQUEST['update']) {	update_do($_REQUEST['update']);} else {	output_do('<div class="button"><form action="./index.php?update=1" method="post"><input class="iButton" type="submit" value="' . lang_translate('installer-update-do','Update eyeOS!') . '" /></form></div>',0,lang_translate('installer-update-title','Please continue to update your eyeOS installation to version [version].',array('[version]' => INSTALL_VERSION)));}function update_do($update) {	// Load install.xml	$xmlUpdate = xml_xml2array(file_get_contents(INSTALL_DIR . 'files/update.xml'));		// Untar install.eyepackage	if ($update != '2') {		if (TYPE_UPDATE === 1) {			include_once(INSTALL_DIR . 'pcl-tar.eyecode');			if (!PclTarExtract(INSTALL_PACKAGE,'./','','tgz')) {				output_errors(array(lang_translate('installer-update-error-extract','The update files could not be extracted. To update eyeOS manually, rename "[package]" to "package.tar.gz" and extract the contents into the same directory.',array('[package]' => INSTALL_PACKAGE))));			}		}				// Delete files and folders		foreach ($xmlUpdate['eyePackage'][0]['delete'][0] as $key => $value) {			if (check_versions(EYEOS_VERSION,$key) < 2) {				foreach ($value as $file) {					path_delete('./eyeOS/' . $file);				}			}		}		foreach ($xmlUpdate['eyeInstaller'][0]['files'][0]['delete'] as $file) {			$file = str_replace('%apps%','./' . REAL_EYE_ROOT . '/' . APP_DIR,$file);			$file = str_replace('%extern%','./' . REAL_EYE_ROOT . '/' . EXTERN_DIR,$file);			$file = str_replace('%system%','./' . REAL_EYE_ROOT . '/' . SYSTEM_DIR,$file);			$file = str_replace('%themes%','./' . REAL_EYE_ROOT . '/' . THEMES_DIR,$file);			path_delete($file);		}				// Rename dir		if (!path_move('./eyeOS/','./' . REAL_EYE_ROOT . '/')) {			output_errors(array(lang_translate('installer-update-error-renaming','Could not rename the directory "./eyeOS/". Please, rename it manually to "[hash]" and overwrite all existing files.',array('[hash]' => REAL_EYE_ROOT))),array('./index.php?update=2',lang_translate('installer-update-continue','Continue...')),0);		}	}		// Update mobile files	@mkdir('./mobile/');	$xmlMobile = xml_xml2array(file_get_contents(INSTALL_DIR . 'files/mobile.xml'));	foreach ($xmlMobile['mobile'][0] as $file => $content) {		file_put_contents('./mobile/' . $file,base64_decode($content[0]));	}		// Update the system configuration files	foreach ($xmlUpdate['eyeInstaller'][0]['conf'] as $array) {		foreach ($array as $conf => $array2) {			$conf_xml = xml_xml2array(file_get_contents('./' . REAL_EYE_ROOT . '/' . SYSTEM_DIR . '/' . SYSTEM_CONF_DIR . '/' . $conf . '.xml'));			foreach ($array2[0] as $action => $object) {				if ($action == 'delete') {					foreach ($object as $key) {						unset($conf_xml['CONFIG'][0][$key]);					}				} elseif ($action == 'add') {					foreach ($object[0] as $key => $value) {						if (!$conf_xml['CONFIG'][0][$key]) {							$conf_xml['CONFIG'][0][$key] = $value;						}					}				} else {					foreach ($object[0] as $key => $value) {						$conf_xml['CONFIG'][0][$key] = $value;					}				}			}			file_put_contents('./' . REAL_EYE_ROOT . '/' . SYSTEM_DIR . '/' . SYSTEM_CONF_DIR . '/' . $conf . '.xml',xml_array2xml($conf_xml));		}	}		// Update CACHE_VERSION	$xmlSystem = xml_xml2array(file_get_contents('./' . REAL_EYE_ROOT . '/' . SYSTEM_DIR . '/' . SYSTEM_CONF_DIR . '/system.xml'));	$xmlSystem['CONFIG'][0]['CACHE_VERSION'][0] += 1;	file_put_contents('./' . REAL_EYE_ROOT . '/' . SYSTEM_DIR . '/' . SYSTEM_CONF_DIR . '/system.xml',xml_array2xml($xmlSystem));		// Version specific update functions	$path = INSTALL_DIR . 'modules/update/';	if ($handler = @opendir($path)) {		while (false !== ($file = readdir($handler))) {			if (substr($file,-8) == '.eyecode') {				$list[] = basename($file,'.eyecode');			}		}		closedir($handler);	}	uasort($list,'check_version_uasort');	foreach ($list as $entry) {		if (check_versions($entry,EYEOS_VERSION) < 2) {			include(INSTALL_DIR . 'modules/update/' . $entry . '.eyecode');		}	}		// index.php	copy(INSTALL_DIR . 'files/index.txt','./index.php');	// settings.php	$settingsphp = file_get_contents(INSTALL_DIR . 'files/settings.txt');	foreach ($xmlUpdate['eyeUpdater'][0]['settings'][0] as $key => $value) {		if (defined($key)) {			$settingsphp = str_replace("define('" . $key . "','" . $value[0] . "');","define('" . $key . "','" . constant($key) . "');",$settingsphp);		}	}	file_put_contents('./settings.php',$settingsphp);		// Remove the installer	output_remove();}?>